<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FengJian&#39;s Blog</title>
  <subtitle>iOS Golang node.js Developer</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://fengjian0106.github.io/"/>
  <updated>2017-06-08T03:26:15.000Z</updated>
  <id>http://fengjian0106.github.io/</id>
  
  <author>
    <name>FengJian</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>手机端运行卷积神经网络的一次实践 -- 基于 TensorFlow 和 OpenCV 实现文档检测功能</title>
    <link href="http://fengjian0106.github.io/2017/05/08/Document-Scanning-With-TensorFlow-And-OpenCV/"/>
    <id>http://fengjian0106.github.io/2017/05/08/Document-Scanning-With-TensorFlow-And-OpenCV/</id>
    <published>2017-05-08T08:21:55.000Z</published>
    <updated>2017-06-08T03:26:15.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;本文不是神经网络或机器学习的入门教学，而是通过一个真实的产品案例，展示了在手机客户端上运行一个神经网络的关键技术点&lt;/li&gt;
&lt;li&gt;在卷积神经网络适用的领域里，已经出现了一些很经典的图像分类网络，比如 VGG16/VGG19，Inception v1-v4 Net，ResNet 等，这些分类网络通常又都可以作为其他算法中的基础网络结构，尤其是 VGG 网络，被很多其他的算法借鉴，本文也会使用 VGG16 的基础网络结构，但是不会对 VGG 网络做详细的入门教学&lt;/li&gt;
&lt;li&gt;虽然本文不是神经网络技术的入门教程，但是仍然会给出一系列的相关入门教程和技术文档的链接，有助于进一步理解本文的内容&lt;/li&gt;
&lt;li&gt;具体使用到的神经网络算法，只是本文的一个组成部分，除此之外，本文还介绍了如何裁剪 TensorFlow 静态库以便于在手机端运行，如何准备训练样本图片，以及训练神经网络时的各种技巧等等&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;需求是什么&quot;&gt;&lt;a href=&quot;#需求是什么&quot; class=&quot;headerlink&quot; title=&quot;需求是什么&quot;&gt;&lt;/a&gt;需求是什么&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/image_to_point.png&quot; alt=&quot;image to point&quot;&gt;&lt;/p&gt;
&lt;p&gt;需求很容易描述清楚，如上图，就是在一张图里，把矩形形状的文档的四个顶点的坐标找出来。&lt;/p&gt;
&lt;h3 id=&quot;传统的技术方案&quot;&gt;&lt;a href=&quot;#传统的技术方案&quot; class=&quot;headerlink&quot; title=&quot;传统的技术方案&quot;&gt;&lt;/a&gt;传统的技术方案&lt;/h3&gt;&lt;p&gt;Google 搜索 opencv scan document，是可以找到好几篇相关的教程的，这些教程里面的技术手段，也都大同小异，关键步骤就是调用 OpenCV 里面的两个函数，cv2.Canny() 和 cv2.findContours()。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/demo_method.png&quot; alt=&quot;demo method&quot;&gt;&lt;/p&gt;
&lt;p&gt;看上去很容易就能实现出来，但是真实情况是，这些教程，仅仅是个 demo 演示而已，用来演示的图片，都是最理想的简单情况，真实的场景图片会比这个复杂的多，会有各种干扰因素，调用 canny 函数得到的边缘检测结果，也会比 demo 中的情况凌乱的多，比如会检测出很多各种长短的线段，或者是文档的边缘线被截断成了好几条短的线段，线段之间还存在距离不等的空隙。另外，findContours 函数也只能检测闭合的多边形的顶点，但是并不能确保这个多边形就是一个合理的矩形。因此在我们的第一版技术方案中，对这两个关键步骤，进行了大量的改进和调优，概括起来就是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;改进 canny 算法的效果，增加额外的步骤，得到效果更好的边缘检测图&lt;/li&gt;
&lt;li&gt;针对 canny 步骤得到的边缘图，建立一套数学算法，从边缘图中寻找出一个合理的矩形区域&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;传统技术方案的难度和局限性&quot;&gt;&lt;a href=&quot;#传统技术方案的难度和局限性&quot; class=&quot;headerlink&quot; title=&quot;传统技术方案的难度和局限性&quot;&gt;&lt;/a&gt;传统技术方案的难度和局限性&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;canny 算法的检测效果，依赖于几个阈值参数，这些阈值参数的选择，通常都是人为设置的经验值，在改进的过程中，引入额外的步骤后，通常又会引入一些新的阈值参数，同样，也是依赖于调试结果设置的经验值。整体来看，这些阈值参数的个数，不能特别的多，因为一旦太多了，就很难依赖经验值进行设置，另外，虽然有这些阈值参数，但是最终的参数只是一组或少数几组固定的组合，所以算法的鲁棒性又会打折扣，很容易遇到边缘检测效果不理想的场景&lt;/li&gt;
&lt;li&gt;在边缘图上建立的数学模型很复杂，代码实现难度大，而且也会遇到算法无能为力的场景&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面这张图表，能够很好的说明上面列出的这两个问题：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/hed_vs_canny.png&quot; alt=&quot;hed vs canny&quot;&gt;&lt;/p&gt;
&lt;p&gt;这张图表的第一列是输入的 image，最后的三列(先不用看这张图表的第二列)，是用三组不同阈值参数调用 canny 函数和额外的函数后得到的输出 image，可以看到，边缘检测的效果，并不总是很理想的，有些场景中，矩形的边，出现了很严重的断裂，有些边，甚至被完全擦除掉了，而另一些场景中，又会检测出很多干扰性质的长短边。可想而知，想用一个数学模型，适应这么不规则的边缘图，会是多么困难的一件事情。&lt;/p&gt;
&lt;h3 id=&quot;思考如何改善&quot;&gt;&lt;a href=&quot;#思考如何改善&quot; class=&quot;headerlink&quot; title=&quot;思考如何改善&quot;&gt;&lt;/a&gt;思考如何改善&lt;/h3&gt;&lt;p&gt;在第一版的技术方案中，负责的同学花费了大量的精力进行各种调优，终于取得了还不错的效果，但是，就像前面描述的那样，还是会遇到检测不出来的场景。在第一版技术方案中，遇到这种情况的时候，采用的做法是针对这些不能检测的场景，人工进行分析和调试，调整已有的一组阈值参数和算法，可能还需要加入一些其他的算法流程(可能还会引入新的一些阈值参数)，然后再整合到原有的代码逻辑中。经过若干轮这样的调整后，我们发现，已经进入一个瓶颈，按照这种手段，很难进一步提高检测效果了。&lt;/p&gt;
&lt;p&gt;既然传统的算法手段已经到极限了，那不如试试机器学习/神经网络。&lt;/p&gt;
&lt;h3 id=&quot;无效的神经网络算法&quot;&gt;&lt;a href=&quot;#无效的神经网络算法&quot; class=&quot;headerlink&quot; title=&quot;无效的神经网络算法&quot;&gt;&lt;/a&gt;无效的神经网络算法&lt;/h3&gt;&lt;h4 id=&quot;end-to-end-直接拟合&quot;&gt;&lt;a href=&quot;#end-to-end-直接拟合&quot; class=&quot;headerlink&quot; title=&quot;end-to-end 直接拟合&quot;&gt;&lt;/a&gt;end-to-end 直接拟合&lt;/h4&gt;&lt;p&gt;首先想到的，就是仿照人脸对齐(face alignment)的思路，构建一个端到端(end-to-end)的网络，直接回归拟合，也就是让这个神经网络直接输出 4 个顶点的坐标，但是，经过尝试后发现，根本拟合不出来。后来仔细琢磨了一下，觉得不能直接拟合也是对的，因为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;除了分类(classification)问题之外，所有的需求看上去都像是一个回归(regression)问题，如果回归是万能的，学术界为啥还要去搞其他各种各样的网络模型&lt;/li&gt;
&lt;li&gt;face alignment 之所以可以用回归网络得到很好的拟合效果，是因为在输入 image 上先做了 bounding box 检测，缩小了人脸图像范围后，才做的 regression&lt;/li&gt;
&lt;li&gt;人脸上的关键特征点，具有特别明显的统计学特征，所以 regression 可以发挥作用&lt;/li&gt;
&lt;li&gt;在需要更高检测精度的场景中，其实也是用到了更复杂的网络模型来解决 face alignment 问题的&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;YOLO-amp-amp-FCN&quot;&gt;&lt;a href=&quot;#YOLO-amp-amp-FCN&quot; class=&quot;headerlink&quot; title=&quot;YOLO &amp;amp;&amp;amp; FCN&quot;&gt;&lt;/a&gt;YOLO &amp;amp;&amp;amp; FCN&lt;/h4&gt;&lt;p&gt;后来还尝试过用 YOLO 网络做 Object Detection，用 FCN 网络做像素级的 Semantic Segmentation，但是结果都很不理想，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;达不到文档检测功能想要的精确度&lt;/li&gt;
&lt;li&gt;网络结构复杂，运算量大，在手机上无法做到实时检测&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;有效的神经网络算法&quot;&gt;&lt;a href=&quot;#有效的神经网络算法&quot; class=&quot;headerlink&quot; title=&quot;有效的神经网络算法&quot;&gt;&lt;/a&gt;有效的神经网络算法&lt;/h3&gt;&lt;p&gt;前面尝试的几种神经网络算法，都不能得到想要的效果，后来换了一种思路，既然传统的技术手段里包含了两个关键的步骤，那能不能用神经网络来分别改善这两个步骤呢，经过分析发现，可以尝试用神经网络来替换 canny 算法，也就是用神经网络来对图像中的矩形区域进行边缘检测，只要这个边缘检测能够去除更多的干扰因素，那第二个步骤里面的算法也就可以变得更简单了。&lt;/p&gt;
&lt;h4 id=&quot;神经网络的输入和输出&quot;&gt;&lt;a href=&quot;#神经网络的输入和输出&quot; class=&quot;headerlink&quot; title=&quot;神经网络的输入和输出&quot;&gt;&lt;/a&gt;神经网络的输入和输出&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/images/image_to_edge.png&quot; alt=&quot;image to edge&quot;&gt;&lt;/p&gt;
&lt;p&gt;按照这种思路，对于神经网络部分，现在的需求变成了上图所示的样子。&lt;/p&gt;
&lt;h4 id=&quot;HED-Holistically-Nested-Edge-Detection-网络&quot;&gt;&lt;a href=&quot;#HED-Holistically-Nested-Edge-Detection-网络&quot; class=&quot;headerlink&quot; title=&quot;HED(Holistically-Nested Edge Detection) 网络&quot;&gt;&lt;/a&gt;HED(Holistically-Nested Edge Detection) 网络&lt;/h4&gt;&lt;p&gt;边缘检测这种需求，在图像处理领域里面，通常叫做 Edge Detection 或 Contour Detection，按照这个思路，找到了 Holistically-Nested Edge Detection 网络模型。&lt;/p&gt;
&lt;p&gt;HED 网络模型是在 VGG16 网络结构的基础上设计出来的，所以有必要先看看 VGG16。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/vgg_detail.png&quot; alt=&quot;vgg detail&quot;&gt;&lt;/p&gt;
&lt;p&gt;上图是 VGG16 的原理图，为了方便从 VGG16 过渡到 HED，我们先把 VGG16 变成下面这种示意图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/vgg_to_hed_1.png&quot; alt=&quot;vgg to hed 1&quot;&gt;&lt;/p&gt;
&lt;p&gt;在上面这个示意图里，用不同的颜色区分了 VGG16 的不同组成部分。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/vgg_to_hed_2.png&quot; alt=&quot;vgg to hed 2&quot;&gt;&lt;/p&gt;
&lt;p&gt;从示意图上可以看到，绿色代表的卷积层和红色代表的池化层，可以很明显的划分出五组，上图用紫色线条框出来的就是其中的第三组。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/vgg_to_hed_3.png&quot; alt=&quot;vgg to hed 3&quot;&gt;&lt;/p&gt;
&lt;p&gt;HED 网络要使用的就是 VGG16 网络里面的这五组，后面部分的 fully connected 层和 softmax 层，都是不需要的，另外，第五组的池化层(红色)也是不需要的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/vgg_to_hed_4.png&quot; alt=&quot;vgg to hed 4&quot;&gt;&lt;/p&gt;
&lt;p&gt;去掉不需要的部分后，就得到上图这样的网络结构，因为有池化层的作用，从第二组开始，每一组的输入 image 的长宽值，都是前一组的输入 image 的长宽值的一半。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/vgg_to_hed_5.png&quot; alt=&quot;vgg to hed 5&quot;&gt;&lt;/p&gt;
&lt;p&gt;HED 网络是一种多尺度多融合(multi-scale and multi-level feature learning)的网络结构，所谓的多尺度，就是如上图所示，把 VGG16 的每一组的最后一个卷积层(绿色部分)的输出取出来，因为每一组得到的 image 的长宽尺寸是不一样的，所以这里还需要用转置卷积(transposed convolution)/反卷积(deconv)对每一组得到的 image 再做一遍运算，从效果上看，相当于把第二至五组得到的 image 的长宽尺寸分别扩大 2 至 16 倍，这样在每个尺度(VGG16 的每一组就是一个尺度)上得到的 image，都是相同的大小了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/vgg_to_hed_6.png&quot; alt=&quot;vgg to hed 6&quot;&gt;&lt;/p&gt;
&lt;p&gt;把每一个尺度上得到的相同大小的 image，再融合到一起，这样就得到了最终的输出 image，也就是具有边缘检测效果的 image。&lt;/p&gt;
&lt;p&gt;基于 TensorFlow 编写的 HED 网络结构代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hed_net&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(inputs, batch_size)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# ref https://github.com/s9xie/hed/blob/master/examples/hed/train_val.prototxt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; tf.variable_scope(&lt;span class=&quot;string&quot;&gt;&#39;hed&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;hed&#39;&lt;/span&gt;, [inputs]):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; slim.arg_scope([slim.conv2d, slim.fully_connected],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        activation_fn=tf.nn.relu,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        weights_initializer=tf.truncated_normal_initializer(&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.01&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        weights_regularizer=slim.l2_regularizer(&lt;span class=&quot;number&quot;&gt;0.0005&lt;/span&gt;)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;# vgg16 conv &amp;amp;&amp;amp; max_pool layers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            net = slim.repeat(inputs, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, slim.conv2d, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, [&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;], scope=&lt;span class=&quot;string&quot;&gt;&#39;conv1&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dsn1 = net&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            net = slim.max_pool2d(net, [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;], scope=&lt;span class=&quot;string&quot;&gt;&#39;pool1&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            net = slim.repeat(net, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, slim.conv2d, &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;, [&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;], scope=&lt;span class=&quot;string&quot;&gt;&#39;conv2&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dsn2 = net&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            net = slim.max_pool2d(net, [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;], scope=&lt;span class=&quot;string&quot;&gt;&#39;pool2&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            net = slim.repeat(net, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, slim.conv2d, &lt;span class=&quot;number&quot;&gt;48&lt;/span&gt;, [&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;], scope=&lt;span class=&quot;string&quot;&gt;&#39;conv3&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dsn3 = net&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            net = slim.max_pool2d(net, [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;], scope=&lt;span class=&quot;string&quot;&gt;&#39;pool3&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            net = slim.repeat(net, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, slim.conv2d, &lt;span class=&quot;number&quot;&gt;96&lt;/span&gt;, [&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;], scope=&lt;span class=&quot;string&quot;&gt;&#39;conv4&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dsn4 = net&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            net = slim.max_pool2d(net, [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;], scope=&lt;span class=&quot;string&quot;&gt;&#39;pool4&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            net = slim.repeat(net, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, slim.conv2d, &lt;span class=&quot;number&quot;&gt;192&lt;/span&gt;, [&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;], scope=&lt;span class=&quot;string&quot;&gt;&#39;conv5&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dsn5 = net&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;# net = slim.max_pool2d(net, [2, 2], scope=&#39;pool5&#39;) # no need this pool layer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;# dsn layers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dsn1 = slim.conv2d(dsn1, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], scope=&lt;span class=&quot;string&quot;&gt;&#39;dsn1&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;# no need deconv for dsn1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dsn2 = slim.conv2d(dsn2, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], scope=&lt;span class=&quot;string&quot;&gt;&#39;dsn2&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            deconv_shape = tf.pack([batch_size, const.image_height, const.image_width, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dsn2 = deconv_mobile_version(dsn2, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, deconv_shape) &lt;span class=&quot;comment&quot;&gt;# deconv_mobile_version can work on mobile&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dsn3 = slim.conv2d(dsn3, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], scope=&lt;span class=&quot;string&quot;&gt;&#39;dsn3&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            deconv_shape = tf.pack([batch_size, const.image_height, const.image_width, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dsn3 = deconv_mobile_version(dsn3, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, deconv_shape)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dsn4 = slim.conv2d(dsn4, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], scope=&lt;span class=&quot;string&quot;&gt;&#39;dsn4&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            deconv_shape = tf.pack([batch_size, const.image_height, const.image_width, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dsn4 = deconv_mobile_version(dsn4, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, deconv_shape)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dsn5 = slim.conv2d(dsn5, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], scope=&lt;span class=&quot;string&quot;&gt;&#39;dsn5&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            deconv_shape = tf.pack([batch_size, const.image_height, const.image_width, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dsn5 = deconv_mobile_version(dsn5, &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;, deconv_shape)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;# dsn fuse&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dsn_fuse = tf.concat(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, [dsn1, dsn2, dsn3, dsn4, dsn5])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dsn_fuse = tf.reshape(dsn_fuse, [batch_size, const.image_height, const.image_width, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]) &lt;span class=&quot;comment&quot;&gt;#without this, will get error: ValueError: Number of in_channels must be known.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dsn_fuse = slim.conv2d(dsn_fuse, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], scope=&lt;span class=&quot;string&quot;&gt;&#39;dsn_fuse&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; dsn_fuse, dsn1, dsn2, dsn3, dsn4, dsn5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;训练网络&quot;&gt;&lt;a href=&quot;#训练网络&quot; class=&quot;headerlink&quot; title=&quot;训练网络&quot;&gt;&lt;/a&gt;训练网络&lt;/h3&gt;&lt;h4 id=&quot;cost-函数&quot;&gt;&lt;a href=&quot;#cost-函数&quot; class=&quot;headerlink&quot; title=&quot;cost 函数&quot;&gt;&lt;/a&gt;cost 函数&lt;/h4&gt;&lt;p&gt;论文给出的 HED 网络是一个通用的边缘检测网络，按照论文的描述，每一个尺度上得到的 image，都需要参与 cost 的计算，这部分的代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;input_queue_for_train = tf.train.string_input_producer([FLAGS.csv_path])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;image_tensor, annotation_tensor = input_image_pipeline(dataset_root_dir_string, input_queue_for_train, FLAGS.batch_size)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dsn_fuse, dsn1, dsn2, dsn3, dsn4, dsn5 = hed_net(image_tensor, FLAGS.batch_size)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cost = class_balanced_sigmoid_cross_entropy(dsn_fuse, annotation_tensor) + \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       class_balanced_sigmoid_cross_entropy(dsn1, annotation_tensor) + \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       class_balanced_sigmoid_cross_entropy(dsn2, annotation_tensor) + \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       class_balanced_sigmoid_cross_entropy(dsn3, annotation_tensor) + \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       class_balanced_sigmoid_cross_entropy(dsn4, annotation_tensor) + \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       class_balanced_sigmoid_cross_entropy(dsn5, annotation_tensor)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;按照这种方式训练出来的网络，检测到的边缘线是有一点粗的，为了得到更细的边缘线，通过多次试验找到了一种优化方案，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;input_queue_for_train = tf.train.string_input_producer([FLAGS.csv_path])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;image_tensor, annotation_tensor = input_image_pipeline(dataset_root_dir_string, input_queue_for_train, FLAGS.batch_size)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dsn_fuse, _, _, _, _, _ = hed_net(image_tensor, FLAGS.batch_size)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cost = class_balanced_sigmoid_cross_entropy(dsn_fuse, annotation_tensor)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也就是不再让每个尺度上得到的 image 都参与 cost 的计算，只使用融合后得到的最终 image 来进行计算。&lt;/p&gt;
&lt;p&gt;两种 cost 函数的效果对比如下图所示，右侧是优化过后的效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/edge_thickness.png&quot; alt=&quot;edge thickness&quot;&gt;&lt;/p&gt;
&lt;p&gt;另外还有一点，按照 HED 论文里的要求，计算 cost 的时候，不能使用常见的方差 cost，而应该使用 cost-sensitive loss function，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;class_balanced_sigmoid_cross_entropy&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(logits, label, name=&lt;span class=&quot;string&quot;&gt;&#39;cross_entropy_loss&#39;&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    The class-balanced cross entropy loss,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    as in `Holistically-Nested Edge Detection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;http://arxiv.org/abs/1504.06375&amp;gt;`_.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    This is more numerically stable than class_balanced_cross_entropy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :param logits: size: the logits.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :param label: size: the ground truth in &amp;#123;0,1&amp;#125;, of the same shape as logits.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :returns: a scalar. class-balanced cross entropy loss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    y = tf.cast(label, tf.float32)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    count_neg = tf.reduce_sum(&lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt; - y) &lt;span class=&quot;comment&quot;&gt;# the number of 0 in y&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    count_pos = tf.reduce_sum(y) &lt;span class=&quot;comment&quot;&gt;# the number of 1 in y (less than count_neg)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    beta = count_neg / (count_neg + count_pos)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pos_weight = beta / (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; - beta)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cost = tf.nn.weighted_cross_entropy_with_logits(logits, y, pos_weight)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cost = tf.reduce_mean(cost * (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; - beta), name=name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; cost&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;转置卷积层的双线性初始化&quot;&gt;&lt;a href=&quot;#转置卷积层的双线性初始化&quot; class=&quot;headerlink&quot; title=&quot;转置卷积层的双线性初始化&quot;&gt;&lt;/a&gt;转置卷积层的双线性初始化&lt;/h4&gt;&lt;p&gt;在尝试 FCN 网络的时候，就被这个问题卡住过很长一段时间，按照 FCN 的要求，在使用转置卷积(transposed convolution)/反卷积(deconv)的时候，要把卷积核的值初始化成双线性放大矩阵(bilinear upsampling kernel)，而不是常用的正态分布随机初始化，同时还要使用很小的学习率，这样才更容易让模型收敛。&lt;/p&gt;
&lt;p&gt;HED 的论文中，并没有明确的要求也要采用这种方式初始化转置卷积层，但是，在训练过程中发现，采用这种方式进行初始化，模型才更容易收敛。&lt;/p&gt;
&lt;p&gt;这部分的代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_kernel_size&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(factor)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Find the kernel size given the desired factor of upsampling.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * factor - factor % &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;upsample_filt&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(size)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Make a 2D bilinear kernel suitable for upsampling of the given (h, w) size.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    factor = (size + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) // &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; size % &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        center = factor - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        center = factor - &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    og = np.ogrid[:size, :size]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; - abs(og[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] - center) / factor) * (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; - abs(og[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] - center) / factor)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bilinear_upsample_weights&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(factor, number_of_classes)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Create weights matrix for transposed convolution with bilinear filter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    initialization.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    filter_size = get_kernel_size(factor)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    weights = np.zeros((filter_size,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        filter_size,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        number_of_classes,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        number_of_classes), dtype=np.float32)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    upsample_kernel = upsample_filt(filter_size)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(number_of_classes):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        weights[:, :, i, i] = upsample_kernel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; weights&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;训练过程冷启动&quot;&gt;&lt;a href=&quot;#训练过程冷启动&quot; class=&quot;headerlink&quot; title=&quot;训练过程冷启动&quot;&gt;&lt;/a&gt;训练过程冷启动&lt;/h4&gt;&lt;p&gt;HED 网络不像 VGG 网络那样很容易就进入收敛状态，也不太容易进入期望的理想状态，主要是两方面的原因：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前面提到的转置卷积层的双线性初始化，就是一个重要因素，因为在 4 个尺度上，都需要反卷积，如果反卷积层不能收敛，那整个 HED 都不会进入期望的理想状态&lt;/li&gt;
&lt;li&gt;另外一个原因，是由 HED 的多尺度引起的，既然是多尺度了，那每个尺度上得到的 image 都应该对模型的最终输出 image 产生贡献，在训练的过程中发现，如果输入 image 的尺寸是 224*224，还是很容易就训练成功的，但是当把输入 image 的尺寸调整为 256*256 后，很容易出现一种状况，就是 5 个尺度上得到的 image，会有 1 ~ 2 个 image 是无效的(全部是黑色)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了解决这里遇到的问题，采用的办法就是先使用少量样本图片(比如 2000 张)训练网络，在很短的训练时间(比如迭代 1000 次)内，如果 HED 网络不能表现出收敛的趋势，或者不能达到 5 个尺度的 image 全部有效的状态，那就直接放弃这轮的训练结果，重新开启下一轮训练，直到满意为止，然后才使用完整的训练样本集合继续训练网络。&lt;/p&gt;
&lt;h3 id=&quot;训练数据集-大量合成数据-少量真实数据&quot;&gt;&lt;a href=&quot;#训练数据集-大量合成数据-少量真实数据&quot; class=&quot;headerlink&quot; title=&quot;训练数据集(大量合成数据 + 少量真实数据)&quot;&gt;&lt;/a&gt;训练数据集(大量合成数据 + 少量真实数据)&lt;/h3&gt;&lt;p&gt;HED 论文里使用的训练数据集，是针对通用的边缘检测目的的，什么形状的边缘都有，比如下面这种：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/hed_training_dataset_1.png&quot; alt=&quot;hed training dataset 1&quot;&gt;&lt;/p&gt;
&lt;p&gt;用这份数据训练出来的模型，在做文档扫描的时候，检测出来的边缘效果并不理想，而且这份训练数据集的样本数量也很小，只有一百多张图片(因为这种图片的人工标注成本太高了)，这也会影响模型的质量。&lt;/p&gt;
&lt;p&gt;现在的需求里，要检测的是具有一定透视和旋转变换效果的矩形区域，所以可以大胆的猜测，如果准备一批针对性更强的训练样本，应该是可以得到更好的边缘检测效果的。&lt;/p&gt;
&lt;p&gt;借助第一版技术方案收集回来的真实场景图片，我们开发了一套简单的标注工具，人工标注了 1200 张图片(标注这 1200 张图片的时间成本也很高)，但是这 1200 多张图片仍然有很多问题，比如对于神经网络来说，1200 个训练样本其实还是不够的，另外，这些图片覆盖的场景其实也比较少，有些图片的相似度比较高，这样的数据放到神经网络里训练，泛化的效果并不好。&lt;/p&gt;
&lt;p&gt;所以，还采用技术手段，合成了80000多张训练样本图片。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/hed_training_dataset_2.png&quot; alt=&quot;hed training dataset 2&quot;&gt;&lt;/p&gt;
&lt;p&gt;如上图所示，一张背景图和一张前景图，可以合成出一对训练样本数据。在合成图片的过程中，用到了下面这些技术和技巧：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在前景图上添加旋转、平移、透视变换&lt;/li&gt;
&lt;li&gt;对背景图进行了随机的裁剪&lt;/li&gt;
&lt;li&gt;通过试验对比，生成合适宽度的边缘线&lt;/li&gt;
&lt;li&gt;OpenCV 不支持透明图层之间的旋转和透视变换操作，只能使用最低精度的插值算法，为了改善这一点，后续改成了使用 iOS 模拟器，通过 CALayer 上的操作来合成图片&lt;/li&gt;
&lt;li&gt;在不断改进训练样本的过程中，还根据真实样本图片的统计情况和各种途径的反馈信息，刻意模拟了一些更复杂的样本场景，比如凌乱的背景环境、直线边缘干扰等等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;经过不断的调整和优化，最终才训练出一个满意的模型，可以再次通过下面这张图表中的第二列看一下神经网络模型的边缘检测效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/hed_vs_canny.png&quot; alt=&quot;hed vs canny&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;在手机设备上运行-TensorFlow&quot;&gt;&lt;a href=&quot;#在手机设备上运行-TensorFlow&quot; class=&quot;headerlink&quot; title=&quot;在手机设备上运行 TensorFlow&quot;&gt;&lt;/a&gt;在手机设备上运行 TensorFlow&lt;/h3&gt;&lt;h4 id=&quot;在手机上使用-TensorFlow-库&quot;&gt;&lt;a href=&quot;#在手机上使用-TensorFlow-库&quot; class=&quot;headerlink&quot; title=&quot;在手机上使用 TensorFlow 库&quot;&gt;&lt;/a&gt;在手机上使用 TensorFlow 库&lt;/h4&gt;&lt;p&gt;TensorFlow 官方是支持 iOS 和 Android 的，而且有清晰的文档，照着做就行。但是因为 TensorFlow 是依赖于 protobuf 3 的，所以有可能会遇到一些其他的问题，比如下面这两种，就是我们在两个不同的 iOS APP 中遇到的问题和解决办法，可以作为一个参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A 产品使用的是 protobuf 2，同时由于各种历史原因，使用并且停留在了很旧的某个版本的 Base 库上，而 protobuf 3 的内部也使用了 Base 库，当 A 产品升级到 protobuf 3 后，protobuf 3 的 Base 库和 A 源码中的 Base 库产生了一些奇怪的冲突，最后的解决办法是手动修改了 A 源码中的 Base 库，避免编译时的冲突&lt;/li&gt;
&lt;li&gt;B 产品也是使用的 protobuf 2，而且 B 产品使用到的多个第三方模块(没有源码，只有二进制文件)也是依赖于 protobuf 2，直接升级 B 产品使用的 protobuf 库就行不通了，最后采用的方法是修改 TensorFlow 和 TensorFlow 中使用的 protobuf 3 的源代码，把 protobuf 3 换了一个命名空间，这样两个不同版本的 protobuf 库就可以共存了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Android 上因为本身是可以使用动态库的，所以即便 app 必须使用 protobuf 2 也没有关系，不同的模块使用 dlopen 的方式加载各自需要的特定版本的库就可以了。&lt;/p&gt;
&lt;h4 id=&quot;在手机上使用训练得到的模型文件&quot;&gt;&lt;a href=&quot;#在手机上使用训练得到的模型文件&quot; class=&quot;headerlink&quot; title=&quot;在手机上使用训练得到的模型文件&quot;&gt;&lt;/a&gt;在手机上使用训练得到的模型文件&lt;/h4&gt;&lt;p&gt;模型通常都是在 PC 端训练的，对于大部分使用者，都是用 Python 编写的代码，得到 ckpt 格式的模型文件。在使用模型文件的时候，一种做法就是用代码重新构建出完整的神经网络，然后加载这个 ckpt 格式的模型文件，如果是在 PC 上使用模型文件，用这个方法其实也是可以接受的，复制粘贴一下 Python 代码就可以重新构建整个神经网络。但是，在手机上只能使用 TensorFlow 提供的 C++ 接口，如果还是用同样的思路，就需要用 C++ API 重新构建一遍神经网络，这个工作量就有点大了，而且 C++ API 使用起来比 Python API 复杂的多，所以，在 PC 上训练完网络后，还需要把 ckpt 格式的模型文件转换成 pb 格式的模型文件，这个 pb 格式的模型文件，是用 protobuf 序列化得到的二进制文件，里面包含了神经网络的具体结构以及每个矩阵的数值，使用这个 pb 文件的时候，不需要再用代码构建完整的神经网络结构，只需要反序列化一下就可以了，这样的话，用 C++ API 编写的代码就会简单很多，其实这也是 TensorFlow 推荐的使用方法，在 PC 上使用模型的时候，也应该使用这种 pb 文件(训练过程中使用 ckpt 文件)。&lt;/p&gt;
&lt;h3 id=&quot;HED-网络在手机上遇到的奇怪-crash&quot;&gt;&lt;a href=&quot;#HED-网络在手机上遇到的奇怪-crash&quot; class=&quot;headerlink&quot; title=&quot;HED 网络在手机上遇到的奇怪 crash&quot;&gt;&lt;/a&gt;HED 网络在手机上遇到的奇怪 crash&lt;/h3&gt;&lt;p&gt;在手机上加载 pb 模型文件并且运行的时候，遇到过一个诡异的错误，内容如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Invalid argument: No OpKernel was registered to support Op &amp;apos;Mul&amp;apos; with these attrs.  Registered devices: [CPU], Registered kernels:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  device=&amp;apos;CPU&amp;apos;; T in [DT_FLOAT]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 [[Node: hed/mul_1 = Mul[T=DT_INT32](hed/strided_slice_2, hed/mul_1/y)]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;之所以诡异，是因为从字面上看，这个错误的含义是缺少乘法操作(Mul)，但是我用其他的神经网络模型做过对比，乘法操作模块是可以正常工作的。&lt;/p&gt;
&lt;p&gt;Google 搜索后发现很多人遇到过类似的情况，但是错误信息又并不相同，后来在 TensorFlow 的 github issues 里终于找到了线索，综合起来解释，是因为 TensorFlow 是基于操作(Operation)来模块化设计和编码的，每一个数学计算模块就是一个 Operation，由于各种原因，比如内存占用大小、GPU 独占操作等等，mobile 版的 TensorFlow，并没有包含所有的 Operation，mobile 版的 TensorFlow 支持的 Operation 只是 PC 完整版 TensorFlow 的一个子集，我遇到的这个错误，就是因为使用到的某个 Operation 并不支持 mobile 版。&lt;/p&gt;
&lt;p&gt;按照这个线索，在 Python 代码中逐个排查，后来定位到了出问题的代码，修改前后的代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;deconv&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(inputs, upsample_factor)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    input_shape = tf.shape(inputs)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# Calculate the ouput size of the upsampled tensor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    upsampled_shape = tf.pack([input_shape[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               input_shape[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] * upsample_factor,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               input_shape[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] * upsample_factor,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    upsample_filter_np = bilinear_upsample_weights(upsample_factor, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    upsample_filter_tensor = tf.constant(upsample_filter_np)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# Perform the upsampling&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    upsampled_inputs = tf.nn.conv2d_transpose(inputs, upsample_filter_tensor,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                              output_shape=upsampled_shape,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                              strides=[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, upsample_factor, upsample_factor, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; upsampled_inputs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;deconv_mobile_version&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(inputs, upsample_factor, upsampled_shape)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    upsample_filter_np = bilinear_upsample_weights(upsample_factor, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    upsample_filter_tensor = tf.constant(upsample_filter_np)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# Perform the upsampling&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    upsampled_inputs = tf.nn.conv2d_transpose(inputs, upsample_filter_tensor,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                              output_shape=upsampled_shape,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                              strides=[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, upsample_factor, upsample_factor, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; upsampled_inputs&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;问题就是由 deconv 函数中的 tf.shape 和 tf.pack 这两个操作引起的，在 PC 版代码中，为了简洁，是基于这两个操作，自动计算出 upsampled_shape，修改过后，则是要求调用者用 hard coding 的方式设置对应的 upsampled_shape。&lt;/p&gt;
&lt;h3 id=&quot;裁剪-TensorFlow&quot;&gt;&lt;a href=&quot;#裁剪-TensorFlow&quot; class=&quot;headerlink&quot; title=&quot;裁剪 TensorFlow&quot;&gt;&lt;/a&gt;裁剪 TensorFlow&lt;/h3&gt;&lt;p&gt;TensorFlow 是一个很庞大的框架，对于手机来说，它占用的体积是比较大的，所以需要尽量的缩减 TensorFlow 库占用的体积。&lt;/p&gt;
&lt;p&gt;其实在解决前面遇到的那个 crash 问题的时候，已经指明了一种裁剪的思路，既然 mobile 版的 TensorFlow 本来就是 PC 版的一个子集，那就意味着可以根据具体的需求，让这个子集变得更小，这也就达到了裁剪的目的。具体来说，就是修改 TensorFlow 源码中的 tensorflow/tensorflow/contrib/makefile/tf_op_files.txt 文件，只保留使用到了的模块。针对 HED 网络，原有的 200 多个模块裁剪到只剩 46 个，裁剪过后的 tf_op_files.txt 文件如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/xent_op.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/where_op.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/unpack_op.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/transpose_op.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/transpose_functor_cpu.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/tensor_array_ops.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/tensor_array.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/split_op.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/split_v_op.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/split_lib_cpu.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/shape_ops.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/session_ops.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/sendrecv_ops.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/reverse_op.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/reshape_op.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/relu_op.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/pooling_ops_common.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/pack_op.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/ops_util.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/no_op.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/maxpooling_op.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/matmul_op.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/immutable_constant_op.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/identity_op.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/gather_op.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/gather_functor.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/fill_functor.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/dense_update_ops.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/deep_conv2d.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/xsmm_conv2d.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/conv_ops_using_gemm.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/conv_ops_fused.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/conv_ops.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/conv_grad_filter_ops.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/conv_grad_input_ops.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/conv_grad_ops.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/constant_op.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/concat_op.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/concat_lib_cpu.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/kernels/bias_op.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/ops/sendrecv_ops.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/ops/no_op.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/ops/nn_ops.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/ops/nn_grad.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/ops/array_ops.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow/core/ops/array_grad.cc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;需要强调的一点是，这种操作思路，是针对不同的神经网络结构有不同的裁剪方式，原则就是用到什么模块就保留什么模块。当然，因为有些模块之间还存在隐含的依赖关系，所以裁剪的时候也是要反复尝试多次才能成功的。&lt;/p&gt;
&lt;p&gt;除此之外，还有下面这些通用手段也可以实现裁剪的目的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编译器级别的 strip 操作，在链接的时候会自动的把没有调用到的函数去除掉(集成开发环境里通常已经自动将这些参数设置成了最佳组合)&lt;/li&gt;
&lt;li&gt;借助一些高级技巧和工具，对二进制文件进行瘦身&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;借助所有这些裁剪手段，最终我们的 ipa 安装包的大小只增加了 3M。如果不做手动裁剪这一步，那 ipa 的增量，则是 30M 左右。&lt;/p&gt;
&lt;h3 id=&quot;裁剪-HED-网络&quot;&gt;&lt;a href=&quot;#裁剪-HED-网络&quot; class=&quot;headerlink&quot; title=&quot;裁剪 HED 网络&quot;&gt;&lt;/a&gt;裁剪 HED 网络&lt;/h3&gt;&lt;p&gt;按照 HED 论文给出的参考信息，得到的模型文件的大小是 56M，对于手机来说也是比较大的，而且模型越大也意味着计算量越大，所以需要考虑能否把 HED 网络也裁剪一下。&lt;/p&gt;
&lt;p&gt;HED 网络是用 VGG16 作为基础网络结构，而 VGG 又是一个得到广泛验证的基础网络结构，因此修改 HED 的整体结构肯定不是一个明智的选择，至少不是首选的方案。&lt;/p&gt;
&lt;p&gt;考虑到现在的需求，只是检测矩形区域的边缘，而并不是检测通用场景下的广义的边缘，可以认为前者的复杂度比后者更低，所以一种可行的思路，就是保留 HED 的整体结构，修改 VGG 每一组卷积层里面的卷积核的数量，让 HED 网络变的更『瘦』。&lt;/p&gt;
&lt;p&gt;按照这种思路，经过多次调整和尝试，最终得到了一组合适的卷积核的数量参数，对应的模型文件只有 4.2M，在 iPhone 7P 上，处理每帧图片的时间消耗是 0.1 秒左右，满足实时性的要求。&lt;/p&gt;
&lt;p&gt;神经网络的裁剪，目前在学术界也是一个很热门的领域，有好几种不同的理论来实现不同目的的裁剪，但是，也并不是说每一种网络结构都有裁剪的空间，通常来说，应该结合实际情况，使用合适的技术手段，选择一个合适大小的模型文件。&lt;/p&gt;
&lt;h3 id=&quot;TensorFlow-API-的选择&quot;&gt;&lt;a href=&quot;#TensorFlow-API-的选择&quot; class=&quot;headerlink&quot; title=&quot;TensorFlow API 的选择&quot;&gt;&lt;/a&gt;TensorFlow API 的选择&lt;/h3&gt;&lt;p&gt;TensorFlow 的 API 是很灵活的，也比较底层，在学习过程中发现，每个人写出来的代码，风格差异很大，而且很多工程师又采用了各种各样的技巧来简化代码，但是这其实反而在无形中又增加了代码的阅读难度，也不利于代码的复用。&lt;/p&gt;
&lt;p&gt;第三方社区和 TensorFlow 官方，都意识到了这个问题，所以更好的做法是，使用封装度更高但又保持灵活性的 API 来进行开发。本文中的代码，就是使用 TensorFlow-Slim 编写的。&lt;/p&gt;
&lt;h3 id=&quot;OpenCV-算法&quot;&gt;&lt;a href=&quot;#OpenCV-算法&quot; class=&quot;headerlink&quot; title=&quot;OpenCV 算法&quot;&gt;&lt;/a&gt;OpenCV 算法&lt;/h3&gt;&lt;p&gt;虽然用神经网络技术，已经得到了一个比 canny 算法更好的边缘检测效果，但是，神经网络也并不是万能的，干扰是仍然存在的，所以，第二个步骤中的数学模型算法，仍然是需要的，只不过因为第一个步骤中的边缘检测有了大幅度改善，所以第二个步骤中的算法，得到了适当的简化，而且算法整体的适应性也更强了。&lt;/p&gt;
&lt;p&gt;这部分的算法如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/find_rect_1.png&quot; alt=&quot;find rect 1&quot;&gt;&lt;/p&gt;
&lt;p&gt;按照编号顺序，几个关键步骤做了下面这些事情：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用 HED 网络检测边缘，可以看到，这里得到的边缘线还是存在一些干扰的&lt;/li&gt;
&lt;li&gt;在前一步得到的图像上，使用 HoughLinesP 函数检测线段(蓝色线段)&lt;/li&gt;
&lt;li&gt;把前一步得到的线段延长成直线(绿色直线)&lt;/li&gt;
&lt;li&gt;在第二步中检测到的线段，有一些是很接近的，或者有些短线段是可以连接成一条更长的线段的，所以可以采用一些策略把它们合并到一起，这个时候，就要借助第三步中得到的直线。定义一种策略判断两条直线是否相等，当遇到相等的两条直线时，把这两条直线各自对应的线段再合并或连接成一条线段。这一步完成后，后面的步骤就只需要蓝色的线段而不需要绿色的直线了&lt;/li&gt;
&lt;li&gt;根据第四步得到的线段，计算它们之间的交叉点，临近的交叉点也可以合并，同时，把每一个交叉点和产生这个交叉点的线段也要关联在一起(每一个蓝色的点，都有一组红色的线段和它关联)&lt;/li&gt;
&lt;li&gt;对于第五步得到的所有交叉点，每次取出其中的 4 个，判断这 4 个点组成的四边形是否是一个合理的矩形(有透视变换效果的矩形)，除了常规的判断策略，比如角度、边长的比值之外，还有一个判断条件就是每条边是否可以和第五步中得到的对应的点的关联线段重合，如果不能重合，则这个四边形就不太可能是我们期望检测出来的矩形&lt;/li&gt;
&lt;li&gt;经过第六步的过滤后，如果得到了多个四边形，可以再使用一个简单的过滤策略，比如排序找出周长或面积最大的矩形&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于上面这个例子，第一版技术方案中检测出来的边缘线如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/find_rect_2.png&quot; alt=&quot;find rect 2&quot;&gt;&lt;/p&gt;
&lt;p&gt;有兴趣的读者也可以考虑一下，在这种边缘图中，如何设计算法才能找出我们期望的那个矩形。&lt;/p&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;h4 id=&quot;算法角度&quot;&gt;&lt;a href=&quot;#算法角度&quot; class=&quot;headerlink&quot; title=&quot;算法角度&quot;&gt;&lt;/a&gt;算法角度&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;神经网络的参数/超参数的调优，通常只能基于经验来设置，有 magic trick 的成分&lt;/li&gt;
&lt;li&gt;神经网络/机器学习是一门试验科学&lt;/li&gt;
&lt;li&gt;对于监督学习，数据的标注成本很高，这一步很容易出现瓶颈&lt;/li&gt;
&lt;li&gt;论文、参考代码和自己的代码，这三者之间不完全一致也是正常现象&lt;/li&gt;
&lt;li&gt;对于某些需求，可以在模型的准确度、大小和运行速度之间找一个平衡点&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;工程角度&quot;&gt;&lt;a href=&quot;#工程角度&quot; class=&quot;headerlink&quot; title=&quot;工程角度&quot;&gt;&lt;/a&gt;工程角度&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;end-to-end 网络无效的时候，可以用 pipeline 的思路考虑问题、拆分业务，针对性的使用神经网络技术&lt;/li&gt;
&lt;li&gt;至少要熟练掌握一种神经网络的开发框架，而且要追求代码的工程质量&lt;/li&gt;
&lt;li&gt;要掌握神经网络技术中的一些基本套路，举一反三&lt;/li&gt;
&lt;li&gt;要在学术界和工业界中间找平衡点，尽可能多的学习一些不同问题领域的神经网络模型，作为技术储备&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;参考文献&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://karpathy.github.io/neuralnets/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hacker’s guide to Neural Networks&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.open-open.com/lib/view/open1452752687042.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;神经网络浅讲：从神经元到深度学习&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.zhihu.com/question/21329754&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;分类与回归区别是什么？&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650718943&amp;amp;idx=1&amp;amp;sn=258117d392ca1bfc37d6496992da5eae&amp;amp;scene=0#rd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;神经网络架构演进史：全面回顾从LeNet5到ENet十余种架构&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://coolshell.cn/articles/10192.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;数据的游戏：冰与火&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://dataunion.org/20441.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;为什么“高大上”的算法工程师变成了数据民工？&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.infoq.com/cn/news/2015/07/deep-learning-limit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Facebook人工智能负责人Yann LeCun谈深度学习的局限性&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://medium.com/technologymadeeasy/the-best-explanation-of-convolutional-neural-networks-on-the-internet-fbb8b1ad5df8#.15uipz5fp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The best explanation of Convolutional Neural Networks on the Internet!&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650717691&amp;amp;idx=2&amp;amp;sn=3f0b66aa9706aae1a30b01309aa0214c&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;从入门到精通：卷积神经网络初学者指南&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://buptldy.github.io/2016/10/29/2016-10-29-deconv/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Transposed Convolution, Fractionally Strided Convolution or Deconvolution&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/vdumoulin/conv_arithmetic&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;A technical report on convolution arithmetic in the context of deep learning&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://cs231n.github.io/understanding-cnn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Visualizing what ConvNets learn&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://kvfrans.com/visualizing-features-from-a-convolutional-neural-network/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Visualizing Features from a Convolutional Neural Network&lt;/a&gt;       &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://datascience.stackexchange.com/questions/9850/neural-networks-which-cost-function-to-use&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Neural networks: which cost function to use?&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://stackoverflow.com/questions/34240703/difference-between-tensorflow-tf-nn-softmax-and-tf-nn-softmax-cross-entropy-with&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;difference between tensorflow tf.nn.softmax and tf.nn.softmax_cross_entropy_with_logits&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://jamesmccaffrey.wordpress.com/2013/11/05/why-you-should-use-cross-entropy-error-instead-of-classification-error-or-mean-squared-error-for-neural-network-classifier-training/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Why You Should Use Cross-Entropy Error Instead Of Classification Error Or Mean Squared Error For Neural Network Classifier Training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gab41.lab41.org/tensorflow-3-ways-46a46bef895d&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tensorflow 3 Ways&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/slim&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TensorFlow-Slim&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/tensorflow/models/tree/master/slim&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TensorFlow-Slim image classification library&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/s9xie/hed&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Holistically-Nested Edge Detection&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/22045213&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深度卷积神经网络在目标检测中的进展&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/20872103&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;全卷积网络：从图像级理解到像素级理解&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/22308032&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;图像语义分割之FCN和CRF&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://warmspringwinds.github.io/tensorflow/tf-slim/2016/10/30/image-classification-and-segmentation-using-tensorflow-and-tf-slim/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Image Classification and Segmentation with Tensorflow and TF-Slim&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://warmspringwinds.github.io/tensorflow/tf-slim/2016/11/22/upsampling-and-image-segmentation-with-tensorflow-and-tf-slim/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Upsampling and Image Segmentation with Tensorflow and TF-Slim&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://warmspringwinds.github.io/tensorflow/tf-slim/2016/12/18/image-segmentation-with-tensorflow-using-cnns-and-conditional-random-fields/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Image Segmentation with Tensorflow using CNNs and Conditional Random Fields&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.pyimagesearch.com/2014/09/01/build-kick-ass-mobile-document-scanner-just-5-minutes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to Build a Kick-Ass Mobile Document Scanner in Just 5 Minutes&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.nitish-dwivedi.com/2016/05/make-document-scanner-using-python-and.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MAKE DOCUMENT SCANNER USING PYTHON AND OPENCV&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://blogs.dropbox.com/tech/2016/08/fast-and-accurate-document-detection-for-scanning/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Fast and Accurate Document Detection for Scanning&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;本文不是神经网络或机器学习的入门教学，而是通过一个真实的产品案例，展示了在手机客户端上运行一个神经网络的关键技术点&lt;/li&gt;
&lt;
    
    </summary>
    
    
      <category term="TensorFlow" scheme="http://fengjian0106.github.io/tags/TensorFlow/"/>
    
      <category term="CNN" scheme="http://fengjian0106.github.io/tags/CNN/"/>
    
      <category term="卷积神经网络" scheme="http://fengjian0106.github.io/tags/%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>用 ReactiveCocoa 事半功倍的写代码（五）</title>
    <link href="http://fengjian0106.github.io/2016/07/25/The-Power-Of-Composition-In-FRP-Part-5/"/>
    <id>http://fengjian0106.github.io/2016/07/25/The-Power-Of-Composition-In-FRP-Part-5/</id>
    <published>2016-07-25T08:40:42.000Z</published>
    <updated>2016-07-26T06:31:38.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;体会-Composition-的含义&quot;&gt;&lt;a href=&quot;#体会-Composition-的含义&quot; class=&quot;headerlink&quot; title=&quot;体会 Composition 的含义&quot;&gt;&lt;/a&gt;体会 Composition 的含义&lt;/h3&gt;&lt;p&gt;有些读者可能会注意到一点，这个系列教程的英文标题是 The Power Of Composition In FRP，看上去并不像是中文标题的直接翻译，其实这也是纠结过后的一个妥协的选择，其实我个人更喜欢这个英文标题，因为 Composition 这个词，更能体现出 FRP 的一个精髓理念，如果要用一个中文词语来表示，我觉得『组装』这个词更准确一些。&lt;/p&gt;
&lt;p&gt;先看下面这段代码：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)fetchNecessaryDataForAccounts:(&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt;&amp;lt;FMAccount *&amp;gt; *)accounts &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSParameterAssert&lt;/span&gt;(accounts != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSParameterAssert&lt;/span&gt;(accounts.count &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @weakify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [[[[[accounts.rac_sequence signal] &lt;span class=&quot;comment&quot;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(FMAccount *account) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[[QHOldAccountMigration fetchInitialDataForAccount:account]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(FMAccount *account) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         &lt;span class=&quot;comment&quot;&gt;//3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; RACTuplePack(account, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    catch:^RACSignal *(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;//3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACSignal &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;:RACTuplePack(account, error)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       collect] &lt;span class=&quot;comment&quot;&gt;//4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      flattenMap:^RACStream *(&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *arrayOfSignal) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[RACSignal zip:arrayOfSignal] &lt;span class=&quot;comment&quot;&gt;//4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(RACTuple *tuple) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *successAccounts = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *failAccounts = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; tuple.count; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          RACTuple *t = [tuple objectAtIndex:i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          FMAccount *account = t.first;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error = t.second;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              [failAccounts addObject:account];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              [successAccounts addObject:account];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; RACTuplePack([successAccounts &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;], [failAccounts &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     subscribeNext:^(RACTuple *tuple) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *successAccounts = tuple.first;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *failAccounts = tuple.second;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;//5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (failAccounts.count == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; jumpToOriginalLogic];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;built_in&quot;&gt;NSMutableString&lt;/span&gt; *title;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (successAccounts.count == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 title = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableString&lt;/span&gt; alloc] initWithString:&lt;span class=&quot;string&quot;&gt;@&quot;所有账号迁移失败，请重新登录&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 title = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableString&lt;/span&gt; alloc] initWithString:&lt;span class=&quot;string&quot;&gt;@&quot;邮箱账号&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (FMAccount *account &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; failAccounts) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     [title appendFormat:&lt;span class=&quot;string&quot;&gt;@&quot;%@, &quot;&lt;/span&gt;, account.profile.mailAddress];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 title = [[title substringToIndex:title.length - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] mutableCopy];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 [title appendString:&lt;span class=&quot;string&quot;&gt;@&quot;迁移失败，需要重新登录&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;built_in&quot;&gt;UIAlertController&lt;/span&gt; *alertController = [&lt;span class=&quot;built_in&quot;&gt;UIAlertController&lt;/span&gt; alertControllerWithTitle:title message:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; preferredStyle:&lt;span class=&quot;built_in&quot;&gt;UIAlertControllerStyleAlert&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             [alertController addAction:[&lt;span class=&quot;built_in&quot;&gt;UIAlertAction&lt;/span&gt; actionWithTitle:&lt;span class=&quot;string&quot;&gt;@&quot;确定&quot;&lt;/span&gt; style:&lt;span class=&quot;built_in&quot;&gt;UIAlertActionStyleDefault&lt;/span&gt; handler:^(&lt;span class=&quot;built_in&quot;&gt;UIAlertAction&lt;/span&gt; * _Nonnull action) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (FMAccount *account &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; failAccounts) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     FMMigrationFailAccount *failAccount = [FMMigrationFailAccount convertAccountToMigrationFailAccount:account];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     [failAccount save];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     [[FMManager shareInstance] deleteAccount:account.accountId];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; jumpToOriginalLogic];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125;]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;built_in&quot;&gt;UIViewController&lt;/span&gt; *viewController = [&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; sharedApplication].keyWindow.rootViewController;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             [viewController presentViewController:alertController animated:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt; completion:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; error:^(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; completed:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个 pipeline 其实用的就是 &lt;a href=&quot;http://fengjian0106.github.io/2016/04/28/The-Power-Of-Composition-In-FRP-Part-3/&quot;&gt;collect + combineLatest 或者 zip&lt;/a&gt; 这种管道模型，只不过管道内部具体的业务不一样，这里的业务就是针对每一个 FMAccount 帐号，下载一些必要的初始数据，然后等每个下载都完成后，再执行后续的业务，主要就是下面几个点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;把包含有 FMAccount 的数组，先变换成 signal。&lt;/li&gt;
&lt;li&gt;[QHOldAccountMigration fetchInitialDataForAccount:account] 里面执行的是下载初始数据的具体业务逻辑，其实它的内部就是一个用多个 map 操作串联起来的 pipeline，对应下载初始数据过程中的多个步骤。&lt;/li&gt;
&lt;li&gt;如果 fetchInitialDataForAccount 失败，则把 error 转换成 next 事件，用 tuple 的形式继续向 pipeline 的后续环节传递，等所有的下载都结束后，会统一对 error 进行处理。&lt;/li&gt;
&lt;li&gt;套用 collect + zip 这种 pipeline 模型。&lt;/li&gt;
&lt;li&gt;当所有的下载都结束后，才会运行到这里，successAccounts 和 failAccounts 分别对应成功下载初始数据的所有帐号和下载数据失败了的所有帐号，至于后面 if 分支里的代码，只是后续的一些业务逻辑功能，读者可以不用在意，我们的重点还是在于这个 pipeline 的外形。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在编写程序的时候，通常我们都会提到『复用』这个概念，最简单的场景就是函数复用，这里的 pipeline 也是一种复用，只不过 pipeline 不像普通函数那样通过抽象出输入参数和返回结果来实现复用，pipeline 的复用体现在管道的形状上，这里所谓的形状，就是把 FRP 中对 signal 的各种操作组装起来后 pipeline 的形状。多个 map 串联是一种形状，collect + zip 是一种形状，之前的教程中提到的那些案例，都可以理解为一种形状(甚至还可以看成是多个不同形状的 pipeline 的进一步组装)，每一种形状的管道，有输入的数据，有输出的数据，同时，还存在各种各样的中间处理环节，每次复用 pipeline 的时候，输入数据、输出数据以及中间处理环节，都是可以根据具体的业务需求灵活的进行填充的。&lt;/p&gt;
&lt;p&gt;回到前面这个例子，accounts 是 pipeline 的输入，successAccounts 和 failAccounts 是 pipeline 的输出，其他的操作都可以看成是中间处理环节。这个 pipeline 仅仅是完成了下载数据的功能，在真实的产品需求中，为了更好的照顾用户体验，还希望能够显示出下载进度信息，也就是说，对于 accounts 这个输入，还需要另外一种形式的输出信息，可以体现出下载进度情况。这里还有一个约束条件，[QHOldAccountMigration fetchInitialDataForAccount:account] 这个操作本身是无法表现出下载数据时的进度信息的，因为并不是下载一个文件(在编程惯例中，通常只在上传和下载文件的时候或类似的场景中，才会设计出能体现进度信息的 API)，所以这里还需要想办法模拟出一种进度信息用来在 UI 上进行显示，主要代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;179&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)fetchNecessaryDataForAccounts:(&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt;&amp;lt;FMAccount *&amp;gt; *)accounts &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSParameterAssert&lt;/span&gt;(accounts != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSParameterAssert&lt;/span&gt;(accounts.count &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @weakify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *fetchAllInitialData = [[[[accounts.rac_sequence signal]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(FMAccount *account) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[[[[QHOldAccountMigration fetchInitialDataForAccount:account]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                       map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(FMAccount *account) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                           &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; RACTuplePack(account, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                       &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      catch:^RACSignal *(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACSignal &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;:RACTuplePack(account, error)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                     multicast:[RACReplaySubject subject]] &lt;span class=&quot;comment&quot;&gt;//3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                    autoconnect];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       multicast:[RACReplaySubject subject]] &lt;span class=&quot;comment&quot;&gt;//2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      autoconnect];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *businessLogicSignal = [[fetchAllInitialData collect]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      flattenMap:^RACStream *(&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *arrayOfSignal) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                          &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[RACSignal zip:arrayOfSignal]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                  map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(RACTuple *tuple) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *successAccounts = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *failAccounts = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; tuple.count; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          RACTuple *t = [tuple objectAtIndex:i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          FMAccount *account = t.first;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error = t.second;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                              [failAccounts addObject:account];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                              [successAccounts addObject:account];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; RACTuplePack([successAccounts &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;], [failAccounts &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                  &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [businessLogicSignal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     subscribeNext:^(RACTuple *tuple) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *successAccounts = tuple.first;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *failAccounts = tuple.second;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;//5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (failAccounts.count == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; jumpToOriginalLogic];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;built_in&quot;&gt;NSMutableString&lt;/span&gt; *title;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (successAccounts.count == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 title = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableString&lt;/span&gt; alloc] initWithString:&lt;span class=&quot;string&quot;&gt;@&quot;所有账号迁移失败，请重新登录&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 title = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableString&lt;/span&gt; alloc] initWithString:&lt;span class=&quot;string&quot;&gt;@&quot;邮箱账号&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (FMAccount *account &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; failAccounts) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     [title appendFormat:&lt;span class=&quot;string&quot;&gt;@&quot;%@, &quot;&lt;/span&gt;, account.profile.mailAddress];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 title = [[title substringToIndex:title.length - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] mutableCopy];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 [title appendString:&lt;span class=&quot;string&quot;&gt;@&quot;迁移失败，需要重新登录&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;built_in&quot;&gt;UIAlertController&lt;/span&gt; *alertController = [&lt;span class=&quot;built_in&quot;&gt;UIAlertController&lt;/span&gt; alertControllerWithTitle:title message:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; preferredStyle:&lt;span class=&quot;built_in&quot;&gt;UIAlertControllerStyleAlert&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             [alertController addAction:[&lt;span class=&quot;built_in&quot;&gt;UIAlertAction&lt;/span&gt; actionWithTitle:&lt;span class=&quot;string&quot;&gt;@&quot;确定&quot;&lt;/span&gt; style:&lt;span class=&quot;built_in&quot;&gt;UIAlertActionStyleDefault&lt;/span&gt; handler:^(&lt;span class=&quot;built_in&quot;&gt;UIAlertAction&lt;/span&gt; * _Nonnull action) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (FMAccount *account &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; failAccounts) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     FMMigrationFailAccount *failAccount = [FMMigrationFailAccount convertAccountToMigrationFailAccount:account];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     [failAccount save];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     [[FMManager shareInstance] deleteAccount:account.accountId];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; jumpToOriginalLogic];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125;]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;built_in&quot;&gt;UIViewController&lt;/span&gt; *viewController = [&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; sharedApplication].keyWindow.rootViewController;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             [viewController presentViewController:alertController animated:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt; completion:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; error:^(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; completed:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; tickCount = &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *timer = [[RACSignal interval:&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt; onScheduler:[RACScheduler mainThreadScheduler]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *numbers = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; tickCount; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [numbers addObject:@(i)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *counter = [[[[[numbers.rac_sequence signal]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             zipWith:timer]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(RACTuple *tuple) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *n = tuple.first;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; RACTuplePack(n, @(tickCount), &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           takeUntil:businessLogicSignal]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          logCompleted];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *sequence = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; accounts.count; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [sequence addObject:@(i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; progressValue = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [[[[[[[fetchAllInitialData&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           flatten]&lt;span class=&quot;comment&quot;&gt;//6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(RACTuple *tuple) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;comment&quot;&gt;//7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; tuple.first;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         zipWith:[sequence.rac_sequence signal]]&lt;span class=&quot;comment&quot;&gt;//8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        combineLatestWith:[RACSignal &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;:@(accounts.count)]]&lt;span class=&quot;comment&quot;&gt;//8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(RACTuple *tuple) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           RACTuple *nestedTuple = tuple.first;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *accountsCount = tuple.second;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           FMAccount *account = nestedTuple.first;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *order = nestedTuple.second;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; RACTuplePack(order, accountsCount, account);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      merge:counter]&lt;span class=&quot;comment&quot;&gt;//11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     subscribeNext:^(RACTuple *tuple) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *order = tuple.first;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *accountsCount = tuple.second;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         FMAccount *account = tuple.third;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;//13&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (account) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;fetch initial data finished, order is: [%@, %@], account is: %@&quot;&lt;/span&gt;, order, accountsCount, account.profile.mailAddress);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; nextValue = order.integerValue * &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; / accountsCount.integerValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (order.integerValue == accountsCount.integerValue) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 nextValue = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 progressValue = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nextValue &amp;gt; progressValue) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 progressValue = nextValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;counter info, [%@, %@]&quot;&lt;/span&gt;, order, accountsCount);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             progressValue = progressValue + &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;comment&quot;&gt;//14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (progressValue &amp;gt; &lt;span class=&quot;number&quot;&gt;95&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 progressValue = &lt;span class=&quot;number&quot;&gt;95.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;//14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;======== progressValue is: %ld&quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)progressValue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; error:^(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; completed:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面看看这个 pipeline 是如何组装出来的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需求越复杂，通常 pipeline 也就会越复杂，现在我们遇到了新的需求，但是之前那个 pipeline 做的业务仍然是需要保留的，这种时候，通常可以考虑先把 pipeline 的代码拆分一下，然后对拆出来的 signal 或者 pipeline 重新进行组装。首先就可以把 [QHOldAccountMigration fetchInitialDataForAccount:account] 动作拆分出来，注意一点，这里还没有调用 collect 操作。&lt;/li&gt;
&lt;li&gt;因为后续多个业务逻辑都要用到前面第一步得到的 signal，根据业务的需求，对于每个 FMAccount 只需要下载一次数据，所以这里应该让 signal 变成广播的形式。&lt;/li&gt;
&lt;li&gt;内层嵌套的 signal 才是真正的 fetchInitialDataForAccount 动作，同理，也需要变成广播(其实在刚开始设计 pipeline 的时候，可能还意识不到需要广播，这种时候，可以先组装业务流程，当遇到问题后，再考虑是否需要使用广播 signal)。如果暂时看不明白为什么 2 和 3 两处需要使用广播，没有关系，先接着往后看，把整个 pipeline 看明白后，再倒回来想想为什么需要广播。&lt;/li&gt;
&lt;li&gt;这个中间环节也拆分出来，以备后用。&lt;/li&gt;
&lt;li&gt;这里是对 successAccounts 和 failAccounts 的处理逻辑，和前一个版本的 pipeline 没有区别。&lt;/li&gt;
&lt;li&gt;现在开始考虑如何显示进度信息，虽然每次 [QHOldAccountMigration fetchInitialDataForAccount:account] 调用是没有进度信息的，但是当有多次调用的时候，是可以计算出一种形式的进度信息的，比如总共有 5 个 FMAccount，当第一个 FMAccount 下载完数据(或者失败)的时候，整体进度就是 1/5，当第二个 FMAccount 下载完数据(或者失败)的时候，整体进度就是 2/5，依次类推。&lt;/li&gt;
&lt;li&gt;回忆一下 fetchAllInitialData 里面的内容，因为现在是计算进度信息，并不关心具体的 error，所以这里的 map 操作只需要返回 tuple.first，也就是只需要继续传递 FMAccount。&lt;/li&gt;
&lt;li&gt;这里连续调用 zip 和 combineLatest，如果觉得这里很难理解，没有关系，先分别回忆一下 zip 和 combineLatest 的效果，想象一下这里应该得到什么样的结果。&lt;/li&gt;
&lt;li&gt;前面的 zip 操作会得到一个 tuple，然后这个 tuple 又和 [RACSignal return:@(accounts.count)] 进行一次 combineLatest，所以这里会得到一个嵌套的 tuple。&lt;/li&gt;
&lt;li&gt;8 和 9 的操作，最终就是为了组装出这样的一个 tuple，然后继续在 pipeline 中传递。比如总共有 5 个 FMAccount，当第一个 FMAccount 下载完数据(或者失败)的时候，这个 tuple 的值是 (1, 5, 第一个 FMAccount 对象的指针)，当第二个 FMAccount 下载完数据(或者失败)的时候，返回的 tuple 的值是 (2, 5, 第二个 FMAccount 对象的指针)，依次类推，后续还会返回 3 个 tuple。&lt;/li&gt;
&lt;li&gt;前面已经组装出进度信息了，但是对于 UI 来说，这种进度信息还是太粗糙了，为了让 UI 上的进度条能够更平滑的进行动画过渡，还应该插入一些更细粒度的进度信息。这里借助 RAC 的定时器来构造出一种和 10 里面的 tuple 具有相同格式的 tuple 数据。关于这部分定时器的 pipeline，和 &lt;a href=&quot;http://fengjian0106.github.io/2016/04/17/The-Power-Of-Composition-In-FRP-Part-1/#发送验证码的倒计时按钮&quot;&gt;发送验证码的倒计时按钮&lt;/a&gt; 里面的 pipeline 是相似的形状的，可以看看之前的介绍。&lt;/li&gt;
&lt;li&gt;为了和 10 里面返回的 tuple 具有同样的格式，这里需要这样组装数据，按照顺序，这里返回的 tuple 依次将会是 (1, 120, nil)、(2, 120, nil)、(3, 120, nil)，依次类推，直到 (120, 120, nil)。&lt;/li&gt;
&lt;li&gt;终于到了 pipeline 的最终输出了，把 tuple 里面的数据先分别取出来，如果 account 不为 nil，则是通过 fetchAllInitialData 计算出来的进度信息，如果 account 为 nil，则对应通过定时器模拟出来的进度信息。假设最终的进度值会达到 100，这里还需要采用适当的手段将两种不同的进度值融合在一起，现在就是用最简单的办法进行的处理。&lt;/li&gt;
&lt;li&gt;如果定时器返回的 tuple 已经达到 (120, 120, nil)，而 fetchAllInitialData 还没有执行结束，这种情况下，不应该让进度值达到 100，必须得等所有的 fetchAllInitialData 都结束后进度值才能是 100，所以这里做一个约束，定时器模拟出的进度值，最大只能达到 95。&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;体会-Composition-的含义&quot;&gt;&lt;a href=&quot;#体会-Composition-的含义&quot; class=&quot;headerlink&quot; title=&quot;体会 Composition 的含义&quot;&gt;&lt;/a&gt;体会 Composition 的含义&lt;/h3&gt;&lt;p&gt;有些读者可能
    
    </summary>
    
    
      <category term="FRP" scheme="http://fengjian0106.github.io/tags/FRP/"/>
    
      <category term="ReactiveCocoa" scheme="http://fengjian0106.github.io/tags/ReactiveCocoa/"/>
    
  </entry>
  
  <entry>
    <title>用 ReactiveCocoa 事半功倍的写代码（四）</title>
    <link href="http://fengjian0106.github.io/2016/05/03/The-Power-Of-Composition-In-FRP-Part-4/"/>
    <id>http://fengjian0106.github.io/2016/05/03/The-Power-Of-Composition-In-FRP-Part-4/</id>
    <published>2016-05-03T06:42:56.000Z</published>
    <updated>2016-05-04T08:06:26.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;监听系统截屏操作的复杂管道&quot;&gt;&lt;a href=&quot;#监听系统截屏操作的复杂管道&quot; class=&quot;headerlink&quot; title=&quot;监听系统截屏操作的复杂管道&quot;&gt;&lt;/a&gt;监听系统截屏操作的复杂管道&lt;/h3&gt;&lt;p&gt;这是一个很复杂的 Pipeline，因为要做的业务比较繁琐，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/monitor_screenshot.png&quot; alt=&quot;monitor screenshot&quot;&gt;&lt;/p&gt;
&lt;p&gt;需求大致可以描述为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当 app 停留在读信页面的时候，要实时的监听用户是否有截屏操作。&lt;/li&gt;
&lt;li&gt;在 1 的基础上，只有 app 前台运行的时候，才实时监听用户是否有截屏操作，如果是后台状态，则不监听。&lt;/li&gt;
&lt;li&gt;如果用户有截图动作，则将截图内容显示在一个预览视图内(如上图中红框区域)。&lt;/li&gt;
&lt;li&gt;如果用户点击了预览视图，则进入后续的业务流程，对截图进行涂鸦编辑等等。&lt;/li&gt;
&lt;li&gt;如果点击了预览视图的外部区域，则隐藏预览视图。&lt;/li&gt;
&lt;li&gt;如果 10 秒钟之内没有任何操作，也自动隐藏预览视图。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;主要的代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//13&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidAppear:(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)animated &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; initPipeline];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)initPipeline &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *isNotActive = [[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt;.defaultCenter rac_addObserverForName:&lt;span class=&quot;built_in&quot;&gt;UIApplicationWillResignActiveNotification&lt;/span&gt; object:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSNotification&lt;/span&gt; *notification) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *isActive = [[[[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt;.defaultCenter rac_addObserverForName:&lt;span class=&quot;built_in&quot;&gt;UIApplicationDidBecomeActiveNotification&lt;/span&gt; object:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSNotification&lt;/span&gt; *notification) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            startWith:[&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           merge:isNotActive];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *isNotInBackground = [[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt;.defaultCenter rac_addObserverForName:&lt;span class=&quot;built_in&quot;&gt;UIApplicationDidEnterBackgroundNotification&lt;/span&gt; object:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSNotification&lt;/span&gt; *notification) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *isInForeground = [[[[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt;.defaultCenter rac_addObserverForName:&lt;span class=&quot;built_in&quot;&gt;UIApplicationWillEnterForegroundNotification&lt;/span&gt; object:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSNotification&lt;/span&gt; *notification) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  startWith:[&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 merge:isNotInBackground];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *didTakeScreenshot = [&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt;.defaultCenter rac_addObserverForName:&lt;span class=&quot;built_in&quot;&gt;UIApplicationUserDidTakeScreenshotNotification&lt;/span&gt; object:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @weakify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *imageSignal = [[[[[[[RACSignal &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;:[RACSignal merge:@[isInForeground, isActive]] then:didTakeScreenshot &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:[RACSignal never]] &lt;span class=&quot;comment&quot;&gt;//3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   takeUntil:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.rac_willDeallocSignal]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  filter:^&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      &lt;span class=&quot;comment&quot;&gt;//4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; filterScreenshotNotification];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 filter:^&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                     &lt;span class=&quot;comment&quot;&gt;//5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                     @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.previewShotView == &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSNotification&lt;/span&gt; *notification) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;comment&quot;&gt;//6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; takeCurrentScreenshotOfWebview];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               multicast:[RACReplaySubject subject]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              autoconnect];&lt;span class=&quot;comment&quot;&gt;//7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *hotSignalForPreview = [[[imageSignal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *image) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; showScreenshotPreviewView:image];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       multicast:[RACReplaySubject subject]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      autoconnect];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *cancel = [[hotSignalForPreview&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(FMScreenshotPreviewView *previewView) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [previewView.cancelSignal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                          &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         switchToLatest];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *editImage = [[hotSignalForPreview&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(FMScreenshotPreviewView *previewView) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [previewView.editImage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                         map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                             &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                         &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            switchToLatest];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *otherActionForHidePreview = [[hotSignalForPreview&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                             map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                 RACSignal *willResignActive = [[[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt;.defaultCenter rac_addObserverForName:&lt;span class=&quot;built_in&quot;&gt;UIApplicationWillResignActiveNotification&lt;/span&gt; object:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                                 take:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                                takeUntil:[RACSignal merge:@[cancel, editImage]]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                 RACSignal *timeout = [[[RACSignal &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                        delay:&lt;span class=&quot;number&quot;&gt;10.0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                       takeUntil:[RACSignal merge:@[cancel, editImage, willResignActive]]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                 &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[RACSignal merge:@[timeout, willResignActive]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                         take:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                             &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            switchToLatest];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *shouldHidePreviewView = [RACSignal merge:@[cancel, editImage, otherActionForHidePreview]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//13&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *viewWillDisappear = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; rac_signalForSelector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(viewWillDisappear:)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [[[shouldHidePreviewView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       zipWith:hotSignalForPreview]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      takeUntil:viewWillDisappear]&lt;span class=&quot;comment&quot;&gt;//13&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     subscribeNext:^(RACTuple *tuple) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; hideScreenshotPreviewView:tuple];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; completed:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//15&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [[[imageSignal sample:editImage]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      takeUntil:viewWillDisappear]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     subscribeNext:^(&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *image) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; showDrawViewController:image];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; completed:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;代码有点长，而且里面的 signal 也比较多，主要是下面这些点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;把 app 的 avtive、background、foreground 状态用 signal 的形式表达出来，使用 merge 操作把互为相反状态的 signal 合并在了一起，注意，还使用了 startWith 操作提供初始值。&lt;/li&gt;
&lt;li&gt;这个 signal 是真正的截屏操作，它仅仅是整个 Pipeline 中的一个小环节。&lt;/li&gt;
&lt;li&gt;因为只有 app 前台运行的时候才需要监听截屏事件，所以这里用 if/else 操作做第一层过滤。&lt;/li&gt;
&lt;li&gt;这里是第二层过滤，因为这个 ViewController 里面有很多功能，可能会出现一些页面层叠的情况，比如显示了一个 UIActionSheet 或自定义的菜单选项等等，这个时候，也是不需要监听截屏事件的。&lt;/li&gt;
&lt;li&gt;self.previewShotView 就是显示预览图的 view，当已经有一个预览图正在显示的时候，也不需要监听截屏事件。&lt;/li&gt;
&lt;li&gt;终于过滤完了，按照产品的需求，并不是从系统相册里把用户刚才的截图找出来，而是在 app 中自行截图一遍(只截取有效区域，不截取导航栏和工具栏区域)，takeCurrentScreenshotOfWebview 方法返回的就是截图得到的 UIImage。&lt;/li&gt;
&lt;li&gt;Pipeline 的后续部分，不止一处会用到前面得到的 UIImage，所以需要 hot signal。&lt;/li&gt;
&lt;li&gt;显示预览 view，同时在 Pipeline 中传递这个 view，这个也是 hot signal。&lt;/li&gt;
&lt;li&gt;点击预览 view 外部区域的时候，会发送 cancelSignal signal，因为形成了 signal 的嵌套，所以要通过 switchToLatest 取出来。&lt;/li&gt;
&lt;li&gt;类似的，点击预览 view 的时候，会发送 editImage signal，也是通过 switchToLatest 取出来。&lt;/li&gt;
&lt;li&gt;当已经显示了一个预览 view 的时候，如果超过10秒没有任何操作，或者 app 进入了不活跃状态，也是需要隐藏预览 view 的，这里组装出对应的 signal。注意这里是如何通过 takeUntil 控制 willResignActive 和 timeout 的生命期的。&lt;/li&gt;
&lt;li&gt;用 merge 操作组装出最终用来隐藏预览 view 的 signal。&lt;/li&gt;
&lt;li&gt;把这个 ViewController 的 viewWillDisappear 转换成 signal 的形式。根据需求，只有这个 ViewController 可见的时候，才监听截图事件，所以，在 viewDidAppear 的时候构造 Pipeline，在 viewWillDisappear 的时候释放 Pipeline。&lt;/li&gt;
&lt;li&gt;这里是隐藏预览 view 的具体逻辑。&lt;/li&gt;
&lt;li&gt;当点击了预览 view 的时候，通过 showDrawViewController 方法进入后续的业务逻辑，这里使用了 &lt;a href=&quot;http://rxmarbles.com/#sample&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sample&lt;/a&gt; 操作。&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;监听系统截屏操作的复杂管道&quot;&gt;&lt;a href=&quot;#监听系统截屏操作的复杂管道&quot; class=&quot;headerlink&quot; title=&quot;监听系统截屏操作的复杂管道&quot;&gt;&lt;/a&gt;监听系统截屏操作的复杂管道&lt;/h3&gt;&lt;p&gt;这是一个很复杂的 Pipeline，因为要做的业务比
    
    </summary>
    
    
      <category term="FRP" scheme="http://fengjian0106.github.io/tags/FRP/"/>
    
      <category term="ReactiveCocoa" scheme="http://fengjian0106.github.io/tags/ReactiveCocoa/"/>
    
  </entry>
  
  <entry>
    <title>用 ReactiveCocoa 事半功倍的写代码（三）</title>
    <link href="http://fengjian0106.github.io/2016/04/28/The-Power-Of-Composition-In-FRP-Part-3/"/>
    <id>http://fengjian0106.github.io/2016/04/28/The-Power-Of-Composition-In-FRP-Part-3/</id>
    <published>2016-04-28T03:31:36.000Z</published>
    <updated>2016-05-04T08:06:10.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;collect-combineLatest-或者-zip&quot;&gt;&lt;a href=&quot;#collect-combineLatest-或者-zip&quot; class=&quot;headerlink&quot; title=&quot;collect + combineLatest 或者 zip&quot;&gt;&lt;/a&gt;collect + combineLatest 或者 zip&lt;/h3&gt;&lt;p&gt;RAC 里面的 &lt;a href=&quot;http://reactivex.io/documentation/operators/to.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;collect&lt;/a&gt; 是一个比较容易理解的操作，它的强大之处，在于和其他的操作进行组合之后，可以完成很复杂的业务逻辑。在看真实业务代码之前，先通过下面的代码初步了解一下这种 Pipeline 的行为模式。&lt;code&gt;collect 相当于 Rx 中的 ToArray 操作&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;版本-1&quot;&gt;&lt;a href=&quot;#版本-1&quot; class=&quot;headerlink&quot; title=&quot;版本 1&quot;&gt;&lt;/a&gt;版本 1&lt;/h4&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)testCollectSignalsAndCombineLatestOrZip &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *numbers = @[@(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;), @(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), @(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)].rac_sequence.signal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *letters1 = @[&lt;span class=&quot;string&quot;&gt;@&quot;A&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;B&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;C&quot;&lt;/span&gt;].rac_sequence.signal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *letters2 = @[&lt;span class=&quot;string&quot;&gt;@&quot;X&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;Y&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;Z&quot;&lt;/span&gt;].rac_sequence.signal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *letters3 = @[&lt;span class=&quot;string&quot;&gt;@&quot;M&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;N&quot;&lt;/span&gt;].rac_sequence.signal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *arrayOfSignal = @[letters1, letters2, letters3]; &lt;span class=&quot;comment&quot;&gt;//2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [[[numbers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *n) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; arrayOfSignal[n.integerValue];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      collect]  &lt;span class=&quot;comment&quot;&gt;//4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     subscribeNext:^(&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *array) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         DDLogVerbose(&lt;span class=&quot;string&quot;&gt;@&quot;%@, %@&quot;&lt;/span&gt;, [array class], array);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; completed:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         DDLogVerbose(&lt;span class=&quot;string&quot;&gt;@&quot;completed&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个代码纯粹只是为了演示 collect 的行为模式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;构造一个 NSNumber 的数组，包含数字 0、1、2，并且转换成 signal。&lt;/li&gt;
&lt;li&gt;用同样的方法，构造 3 个字符串的数组，并转换成 signal，再把得到的 3 个 signal 放到数组 arrayOfSignal 中。&lt;/li&gt;
&lt;li&gt;这里形成了一个 signal 的嵌套，但是和以前的处理方式不一样，并不会直接在后续环节中使用 flatten 操作，而是先使用 collect。&lt;/li&gt;
&lt;li&gt;collect 操作会把 Pipeline 中所有的 next 发送的数据收集到一个 NSArray 中，然后一次性通过 next 发送给后续的环节。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这段代码的执行结果如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2016-04-28 17:45:38:034 [com.ReactiveCocoa.RACScheduler.backgroundScheduler] __NSArrayM, (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;lt;RACDynamicSignal: 0x7ffee1c9dc10&amp;gt; name: &amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;lt;RACDynamicSignal: 0x7ffee1c9dda0&amp;gt; name: &amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;lt;RACDynamicSignal: 0x7ffee1c9df20&amp;gt; name: &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-04-28 17:45:38:034 [com.ReactiveCocoa.RACScheduler.backgroundScheduler] completed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到，array 里面包含的是 3 个 signal。另外，因为 signal 已经形成嵌套了，所以迟早是要 flatten 的，那么如何 flatten 呢？&lt;/p&gt;
&lt;h4 id=&quot;版本-2&quot;&gt;&lt;a href=&quot;#版本-2&quot; class=&quot;headerlink&quot; title=&quot;版本 2&quot;&gt;&lt;/a&gt;版本 2&lt;/h4&gt;&lt;p&gt;因为 array 里面有 3 个 signal，所以可以构造一种 Pipeline，把这 3 个 signal 合并成一个 signal，然后对合并后的 signal 再做 flatten 操作。合并的时候，可以有不同的策略，先看下面这段代码：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)testCollectSignalsAndCombineLatestOrZip &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *numbers = @[@(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;), @(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), @(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)].rac_sequence.signal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *letters1 = @[&lt;span class=&quot;string&quot;&gt;@&quot;A&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;B&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;C&quot;&lt;/span&gt;].rac_sequence.signal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *letters2 = @[&lt;span class=&quot;string&quot;&gt;@&quot;X&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;Y&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;Z&quot;&lt;/span&gt;].rac_sequence.signal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *letters3 = @[&lt;span class=&quot;string&quot;&gt;@&quot;M&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;M&quot;&lt;/span&gt;].rac_sequence.signal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *arrayOfSignal = @[letters1, letters2, letters3];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [[[[numbers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *n) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; arrayOfSignal[n.integerValue];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       collect]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      flattenMap:^RACStream *(&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *arrayOfSignal) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACSignal combineLatest:arrayOfSignal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   reduce:^(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *first, &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *second, &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *third) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;%@-%@-%@&quot;&lt;/span&gt;, first, second, third];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     subscribeNext:^(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         DDLogVerbose(&lt;span class=&quot;string&quot;&gt;@&quot;%@, %@&quot;&lt;/span&gt;, [x class], x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; completed:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         DDLogVerbose(&lt;span class=&quot;string&quot;&gt;@&quot;completed&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段代码在接收到 collect 发送的 array 之后，对这个数组里面的 signal 进行了一个 &lt;a href=&quot;http://rxmarbles.com/#combineLatest&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;combineLatest&lt;/a&gt; 操作，这个时候，原本的 3 个 signal 被 reduce 成了一个 signal，这个 signal 继续被 flatten 一次，然后最终被 Pipeline 的订阅者接收到。&lt;/p&gt;
&lt;p&gt;这段代码的执行结果如下(也可能和下面的结果完全不一样，这是正常的，combineLatest 操作就是这样)：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2016-04-28 18:48:14:453 [com.ReactiveCocoa.RACScheduler.backgroundScheduler] NSTaggedPointerString, A-Z-N&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-04-28 18:48:14:453 [com.ReactiveCocoa.RACScheduler.backgroundScheduler] NSTaggedPointerString, B-Z-N&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-04-28 18:48:14:454 [com.ReactiveCocoa.RACScheduler.backgroundScheduler] NSTaggedPointerString, C-Z-N&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-04-28 18:48:14:455 [com.ReactiveCocoa.RACScheduler.backgroundScheduler] completed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;版本-3&quot;&gt;&lt;a href=&quot;#版本-3&quot; class=&quot;headerlink&quot; title=&quot;版本 3&quot;&gt;&lt;/a&gt;版本 3&lt;/h4&gt;&lt;p&gt;除了 combineLatest，&lt;a href=&quot;http://rxmarbles.com/#zip&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;zip&lt;/a&gt; 操作也可以把多个 signal reduce 成一个，但是 zip 的策略是不一样的。&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)testCollectSignalsAndCombineLatestOrZip &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *numbers = @[@(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;), @(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), @(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)].rac_sequence.signal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *letters1 = @[&lt;span class=&quot;string&quot;&gt;@&quot;A&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;B&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;C&quot;&lt;/span&gt;].rac_sequence.signal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *letters2 = @[&lt;span class=&quot;string&quot;&gt;@&quot;X&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;Y&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;Z&quot;&lt;/span&gt;].rac_sequence.signal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *letters3 = @[&lt;span class=&quot;string&quot;&gt;@&quot;M&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;M&quot;&lt;/span&gt;].rac_sequence.signal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *arrayOfSignal = @[letters1, letters2, letters3];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [[[[numbers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *n) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; arrayOfSignal[n.integerValue];&lt;span class=&quot;comment&quot;&gt;//!! this is Signal, but just use map NOT flatMap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       collect]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      flattenMap:^RACStream *(&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *arrayOfSignal) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACSignal zip:arrayOfSignal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         reduce:^(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *first, &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *second, &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *third) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;%@-%@-%@&quot;&lt;/span&gt;, first, second, third];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     subscribeNext:^(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         DDLogVerbose(&lt;span class=&quot;string&quot;&gt;@&quot;%@, %@&quot;&lt;/span&gt;, [x class], x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; completed:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         DDLogVerbose(&lt;span class=&quot;string&quot;&gt;@&quot;completed&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段代码的执行结果是下面这个样子，不像前面的 combineLatest，zip 操作的结果，只能出现下面这种唯一的情况：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2016-04-28 18:55:01:208 [com.ReactiveCocoa.RACScheduler.backgroundScheduler] NSTaggedPointerString, A-X-M&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-04-28 18:55:01:209 [com.ReactiveCocoa.RACScheduler.backgroundScheduler] NSTaggedPointerString, B-Y-N&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-04-28 18:55:01:209 [com.ReactiveCocoa.RACScheduler.backgroundScheduler] completed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;保存联系人的头像&quot;&gt;&lt;a href=&quot;#保存联系人的头像&quot; class=&quot;headerlink&quot; title=&quot;保存联系人的头像&quot;&gt;&lt;/a&gt;保存联系人的头像&lt;/h3&gt;&lt;p&gt;前面的代码很抽象，在业务中，能用上这种 Pipeline 吗？当然是可以的，比如下面这段代码：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (RACSignal *)savaAvatar:(&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)image withContact:(FMContact *)contact &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSParameterAssert&lt;/span&gt;(image != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSParameterAssert&lt;/span&gt;(contact.contactItems.count &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *addrs = [[contact.contactItems.rac_sequence&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         map:^(FMContactItem *contactItem) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; contactItem.email;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        signal];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[[[addrs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *emailAddr) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[[[FMAvatarManager shareInstance] rac_setAvatar:emailAddr image:image] &lt;span class=&quot;comment&quot;&gt;//2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;comment&quot;&gt;//4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; RACTuplePack(value, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           catch:^RACSignal *(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               &lt;span class=&quot;comment&quot;&gt;//3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACSignal &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;:RACTuplePack(&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, error)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              collect]  &lt;span class=&quot;comment&quot;&gt;//5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             flattenMap:^RACStream *(&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt;&amp;lt;RACSignal *&amp;gt; *arrayOfSignal) &amp;#123;             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[RACSignal zip:arrayOfSignal]  &lt;span class=&quot;comment&quot;&gt;//6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(RACTuple *tuple) &amp;#123;     &lt;span class=&quot;comment&quot;&gt;//7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             &lt;span class=&quot;comment&quot;&gt;//8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [tuple allObjects];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt;&amp;lt;RACTuple *&amp;gt; *value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段代码稍微有点复杂，做的事情是让 FMContact 里面的所有 email 地址，和一个 image 关联在一起，并且保存在服务器端，关键是下面这几个点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;把 contact.contactItems 里面所有的 email 转换成 signal 的形式发送出来。&lt;/li&gt;
&lt;li&gt;每次 map 的时候，得到一个 email 地址，调用 [[FMAvatarManager shareInstance] rac_setAvatar:emailAddr image:image] 让 email 地址和 image 关联在一起，这个接口也是返回一个 signal，当成功的时候，next 里面发送一个 value (业务中并不关心这个 value 的具体值，只关心是否成功)，如果失败，则会发送一个 error。如果不对 error 做特殊处理，当遇到一次 error 的时候，会使整个 Pipeline error，有些业务需要这种处理 error 的默认方式 (n 个小任务中，任何一个出现 error，整个 Pipeline 都要 error)，但是我们这里的业务，并不想要这种效果，如果一个 email 上的操作失败了，不希望整个 Pipeline 因为这个 error 而结束，而是要其余的 email 地址继续执行各自的小任务，等所有的 email 都处理完毕后，再由 Pipeline 的订阅者一起处理所有的 error，这个时候，就需要用到 catch 操作了。&lt;code&gt;这里有一个槽点，rac_setAvatar 每次都需要传入 image 和 email 地址，然后调用服务器接口进行保存操作，这种方式的接口，不够优雅，对于每一个 email 地址，都要重新发送一遍 image，也有点浪费流量，这是一个历史原因造成的问题。更好的方案是，先把 image 上传到服务器端，然后得到这个 image 对应的一个唯一值，比如 id，然后在这里，只需要让这个 image 的 id 和 email 能够关联起来就行了。不过这并不影响这里 Pipeline 的设计，不管是 image 还是 id，Pipeline 的形状是没有区别的。&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在 catch 里面，用新的 signal 替换原有的 signal。因为需要把 error 暂存下来，放到最后再做处理，所以，用 RACTuple 把 error 包装起来并且发送出去。&lt;/li&gt;
&lt;li&gt;虽然目前的业务，并不关心 [[FMAvatarManager shareInstance] rac_setAvatar:emailAddr image:image] 发送的 next 数据，但是，把 next 发送的数据和 error 一起用 RACTuple 包装起来，也是一个合理的设计(万一以后需要用到这个值了呢)，当接收到 next 的时候，error 就是 nil，当发生 error 的时候，相当于 next 就是 nil，所以在这里，返回的是 RACTuplePack(value, nil)，而在前面 3 中，返回的是 RACTuplePack(nil, error)。&lt;/li&gt;
&lt;li&gt;使用 collect 操作。注意，前面 map 操作返回的是一个 signal，signal 的 next 发送的是一个 RACTuple，而 collect 发送的 next 是 NSArray&amp;lt;RACSignal *&amp;gt;。&lt;/li&gt;
&lt;li&gt;前面的 map 已经形成了 signal 的嵌套，而且还通过 collect 把嵌套的 signal 放到了数组里面，所以这里需要先把数组里的 signal 合并成一个，然后再 flatten 出来。zip 操作符合我们的需求。&lt;/li&gt;
&lt;li&gt;这里不像前面的代码演示那样使用 + (instancetype)zip:(id&amp;lt;NSFastEnumeration&amp;gt;)streams reduce:(id (^)())reduceBlock 接口，而是先使用 + (instancetype)zip:(id&amp;lt;NSFastEnumeration&amp;gt;)streams，然后 map，因为前一种 zip，输入参数 streams(数组) 中包含的元素的数量是已知的，所以可以直接在 reduce(变参数方法) 中把所有的参数都罗列出来，我们这里的 Pipeline，arrayOfSignal 里面的元素个数是不固定的，所以只能用原始的 zip 接口，然后在 map 中再进一步处理 zip 发送的 RACTuple。&lt;/li&gt;
&lt;li&gt;在这个 map 里面得到的 RACTuple 是 zip 操作返回的，这个 tuple 里面包含的每一个数据，是前面 4 里面返回的 RACTuple，这里的 RACTuple 里面又包含了 RACTuple，千万不要搞晕了。如果没搞清楚这里的数据到底是怎么来的，可以再倒回去看看前面的步骤。为了方便后续的处理，可以把外层 RACTuple 里面的数据放到一个 NSArray 里面，然后再返回给下一个环节。[tuple allObjects] 就是做的这个动作(其实 RACTuple 的内部，就是用 NSArray 存储的数据)。&lt;/li&gt;
&lt;li&gt;直接把 value 返回，让 Pipeline 的订阅者得到最终的结果。这里没有做任何额外的动作，仅仅是为了说明现在得到的数据是一个 NSArray&amp;lt;RACTuple *&amp;gt;。可以在这里加一些日志，方便调试。不执行这一次 map 操作也是可以的。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;表单页面&quot;&gt;&lt;a href=&quot;#表单页面&quot; class=&quot;headerlink&quot; title=&quot;表单页面&quot;&gt;&lt;/a&gt;表单页面&lt;/h3&gt;&lt;p&gt;再看另外一个真实业务，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/edit_contact.png&quot; alt=&quot;edit contact&quot;&gt;&lt;/p&gt;
&lt;p&gt;这是一个编辑联系人的页面，整体是用 UITableView 实现的，可以动态的增加、删减字段，其中有一个需求，只有当至少有一个字段有数据的时候，右上角的『保存』按钮才可以使用。如果这个页面，不需要动态的增加、删减字段，那这个需求是很容易实现的，如果不使用 UITableView，就算要动态的增加、删减字段，这个需求实现起来也还好，不会很困难。但是现在的问题在于，要在 UITableView 的基础上实现，这就有点复杂了，UITableViewCell 是在复用的，所以不能直接依赖 UITableViewCell 里面的 UITextField 来判断『保存』按钮是否可用，必须严格的使用 MVC 的思路，先把 UI 上所有的操作(增加、删减字段，编辑字段内容)都映射到 model 上，通过 model 再来计算『保存』按钮是否可用。UITableView 的代码，是传统代码和 RAC 混合编写的，RAC 做的事情并不多，主要是把 UITextField 的内容用 signal 发送出来，因为并不复杂(但是也挺繁琐的，产品还提了很多很细节的体验要求)，所以这里不详细讨论，主要还是看一下基于 model 构造的 Pipeline：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)initPipline &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @weakify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *emailsIsNil = [[RACObserve(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contact, contactItems) &lt;span class=&quot;comment&quot;&gt;//2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               flattenMap:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *items) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (items.count == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123; &lt;span class=&quot;comment&quot;&gt;//3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACSignal &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;:[&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &lt;span class=&quot;comment&quot;&gt;//4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[[items.rac_sequence.signal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                             map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(FMContactItem *item) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                 &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[RACObserve(item, email)  &lt;span class=&quot;comment&quot;&gt;//5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          distinctUntilChanged]    &lt;span class=&quot;comment&quot;&gt;//6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                         map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *email) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                             &lt;span class=&quot;comment&quot;&gt;//7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                             &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:(email.length == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                         &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                             &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            collect]  &lt;span class=&quot;comment&quot;&gt;//8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                           flattenMap:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *arrayOfBoolSignal) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                               &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[[RACSignal combineLatest:arrayOfBoolSignal]  &lt;span class=&quot;comment&quot;&gt;//9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                        map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(RACTuple *tuple) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                            &lt;span class=&quot;comment&quot;&gt;//10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                            &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; b = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;NSUInteger&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; tuple.count; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                &lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *n = [tuple objectAtIndex:i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                b = b &amp;amp;&amp;amp; n.boolValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:b];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                        &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                       distinctUntilChanged];  &lt;span class=&quot;comment&quot;&gt;//11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                           &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              distinctUntilChanged];  &lt;span class=&quot;comment&quot;&gt;//11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *phonesIsNil = [[RACObserve(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contact, telephone)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *phones) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (phones.count == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *phone &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; phones) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (phone.length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                           &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              distinctUntilChanged];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *addressIsNil = [[RACObserve(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contact, familyAddress)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *addrs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (addrs.count == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *addr &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; addrs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (addr.length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               distinctUntilChanged];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *customInfosIsNil = [[RACObserve(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contact, customInformations)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    flattenMap:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *infos) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (infos.count == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACSignal &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;:[&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[[infos.rac_sequence.signal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                  map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(FMCustomInformation *info) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      RACSignal *nameSignal = [[RACObserve(info, name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                                distinctUntilChanged]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                               map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *name) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                                   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:(name.length == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                               &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      RACSignal *infoSignal = [[RACObserve(info, information)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                                distinctUntilChanged]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                               map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                                   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:(i.length == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                               &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACSignal combineLatest:@[nameSignal, infoSignal]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                               reduce:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *name, &lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *info)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                                   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:(name.boolValue &amp;amp;&amp;amp; info.boolValue)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                               &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                  &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                 collect]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                flattenMap:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *arrayOfBoolSignal) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[[RACSignal combineLatest:arrayOfBoolSignal]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                             map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(RACTuple *tuple) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                 &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; b = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                 &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;NSUInteger&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; tuple.count; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                     &lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *n = [tuple objectAtIndex:i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                     b = b &amp;amp;&amp;amp; n.boolValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                 &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:b];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                             &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                            distinctUntilChanged];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   distinctUntilChanged];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *nickIsNil = [[RACObserve(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contact, nick)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *nick) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contact.nick == &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; || [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contact.nick isEqualToString:&lt;span class=&quot;string&quot;&gt;@&quot;&quot;&lt;/span&gt;] == &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            distinctUntilChanged];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *markIsNil = [RACObserve(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contact, mark)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *mark) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contact.mark == &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; || [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contact.mark isEqualToString:&lt;span class=&quot;string&quot;&gt;@&quot;&quot;&lt;/span&gt;] == &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *birthdayIsNil = [RACObserve(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contact, birthday)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *birthday) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contact.birthday == &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; || [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contact.birthday isEqualToString:&lt;span class=&quot;string&quot;&gt;@&quot;&quot;&lt;/span&gt;] == &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//13&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *allSignal = @[nickIsNil, emailsIsNil, markIsNil, phonesIsNil, addressIsNil, birthdayIsNil, customInfosIsNil];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contactHasNoPros = [[[[RACSignal combineLatest:allSignal]  &lt;span class=&quot;comment&quot;&gt;//13&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(RACTuple *tuple) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &lt;span class=&quot;comment&quot;&gt;//14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; b = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;NSUInteger&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; tuple.count; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       &lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *n = [tuple objectAtIndex:i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       b = b &amp;amp;&amp;amp; n.boolValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:b];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              distinctUntilChanged]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             deliverOnMainThread];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这部分代码有点长，不过不用恐惧，中间有很大一部分代码都是做的类似事情，只需要看其中的一个就行，以 email 字段为例子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/edit_email.png&quot; alt=&quot;edit contact&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;联系人的字段，被划分为了好几个部分，比如 email 数组、电话号码数组、备注信息字段等等，每一部分的处理逻辑都是类似的，主要看一下 email 相关的部分。&lt;/li&gt;
&lt;li&gt;当添加或删除 email 的时候，UITableView 部分的代码，已经在 FMContact.contactItems 数组上做了对应的动作，这里通过 RACObserve 对这个 model 进行 KVO，就可以获取到 FMContactItem 的数组。&lt;/li&gt;
&lt;li&gt;如果用户删除了所有的 email 地址(FMContactItem 数组的元素个数为 0)，emailsIsNil 就应该为 YES，说明当前输入的 email 是没有值的。&lt;/li&gt;
&lt;li&gt;如果 FMContactItem 数组的元素个数不为 0，则把这个数组里面的 FMContactItem 转换成 signal 的形式发送出去。&lt;/li&gt;
&lt;li&gt;UI 模块会实时的更新 FMContactItem.email 字段，所以这里也是使用 RACObserve 监听 email 字段的值。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rxmarbles.com/#distinctUntilChanged&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;distinctUntilChanged&lt;/a&gt; 操作相当于一种过滤，只有当这一次 next 发送的数据和前一次 next 发送的数据不一样的时候，才会把这次 next 发送的数据继续往后续环节传递。&lt;/li&gt;
&lt;li&gt;拿到一个 email 地址的时候，只要这个 email 的长度大于 0，就认为这个字段是有值的(并没有进行 email 有效性检查，即便输入的 email 不合理，『保存』按钮仍然可用，只有点击『保存』按钮的时候，才会检查 email 是否合理有效，产品需求是设计成这样的)。&lt;/li&gt;
&lt;li&gt;使用 collect。注意前面 5 所在的 map 操作，返回的是 signal，所以这里形成了 signal 的嵌套，然后 collect 又会把这些 signal 全部放到一个数组里面。&lt;/li&gt;
&lt;li&gt;拿到 signal 的数组后，要把这些 signal 合并成一个，combineLatest 满足这里的需求。&lt;/li&gt;
&lt;li&gt;这里实现具体的产品需求，比如现在有 n 个 email 的输入框，当所有的输入框都没有输入内容的时候，才认为 email 是没有值的，只要有任何一个 email 输入框有内容，都认为 email 是有值的。&lt;/li&gt;
&lt;li&gt;这几个地方使用 distinctUntilChanged，都是为了避免不必要的 signal 数据传递。&lt;/li&gt;
&lt;li&gt;这里好几个 signal，都是类似的思考思路和实现方式。&lt;/li&gt;
&lt;li&gt;把不同的 *IsNil signal 放到一个数组里，用 combineLatest 把它们合并成一个。&lt;/li&gt;
&lt;li&gt;和 10 类似，实现产品约定好的需求，当所有输入框都没有内容的时候，这个联系人就是没有值的(通过 self.contactHasNoPros 这个 signal 来传递这个 Bool 值)。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上面这段代码，最终实现出了一个 signal，就是 contactHasNoPros，这个 signal 的订阅者，根据 next 发送的 Bool 值，设置 button 的状态就可以了，代码片段如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@weakify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contactEditView.contactHasNoPros&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      not] &lt;span class=&quot;comment&quot;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     subscribeNext:^(&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.navigationItem.rightBarButtonItem.enabled = x.boolValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为 contactHasNoPros 发送 YES 的时候，表达的含义是联系人所有的字段都没有值，没有值的时候，『保存』按钮应该是不可用状态，所以这里用 not 操作先做一个 Bool 值的取反，然后再设置 button 的 enabled 状态。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;collect-combineLatest-或者-zip&quot;&gt;&lt;a href=&quot;#collect-combineLatest-或者-zip&quot; class=&quot;headerlink&quot; title=&quot;collect + combineLatest 或者 zip&quot;&gt;&lt;/a&gt;
    
    </summary>
    
    
      <category term="FRP" scheme="http://fengjian0106.github.io/tags/FRP/"/>
    
      <category term="ReactiveCocoa" scheme="http://fengjian0106.github.io/tags/ReactiveCocoa/"/>
    
  </entry>
  
  <entry>
    <title>用 ReactiveCocoa 事半功倍的写代码（二）</title>
    <link href="http://fengjian0106.github.io/2016/04/26/The-Power-Of-Composition-In-FRP-Part-2/"/>
    <id>http://fengjian0106.github.io/2016/04/26/The-Power-Of-Composition-In-FRP-Part-2/</id>
    <published>2016-04-26T02:38:03.000Z</published>
    <updated>2016-05-04T08:05:57.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;利用-map-组装顺序执行的业务&quot;&gt;&lt;a href=&quot;#利用-map-组装顺序执行的业务&quot; class=&quot;headerlink&quot; title=&quot;利用 map 组装顺序执行的业务&quot;&gt;&lt;/a&gt;利用 map 组装顺序执行的业务&lt;/h3&gt;&lt;p&gt;这其实应该是最常见的使用场景，有一类业务，是可以抽象成一组按顺序执行的串行任务的，比如下面这段代码&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ColdSignal&amp;lt;NSString, NSError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Completion: decode success;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Error: FMBarCodeServiceErrorDomain || NSURLErrorDomain || RACSignalErrorDomain with RACSignalErrorTimedOut  //4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Scheduler: specified;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Multicast: NO;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (RACSignal *)decodeBarWithURLString: (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)urlString &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSParameterAssert&lt;/span&gt;(urlString != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @weakify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; get&lt;span class=&quot;built_in&quot;&gt;UIImageWithURLString&lt;/span&gt;:urlString]  &lt;span class=&quot;comment&quot;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             flattenMap:^(&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *image) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; decodeBarWith&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt;:image];  &lt;span class=&quot;comment&quot;&gt;//2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            timeout:&lt;span class=&quot;number&quot;&gt;1.5&lt;/span&gt; onScheduler:[RACScheduler schedulerWithPriority:RACSchedulerPriorityDefault]];  &lt;span class=&quot;comment&quot;&gt;//3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段代码做的事情并不复杂，就是传入一个图片的 url 地址，然后下载对应的图片，然后尝试对这张图片进行二维码解码：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;getUIImageWithURLString 里面完成的小任务，就是下载 UIImage。当下载失败的时候，会发出一个 NSURLErrorDomain 的 NSError。&lt;/li&gt;
&lt;li&gt;这里的小任务，就是对前一步得到的 UIImage 进行二维码解码。当解码失败的时候，会发出一个 FMBarCodeServiceErrorDomain 的 NSError(自己的业务代码中定义的 error domain)。&lt;/li&gt;
&lt;li&gt;这里的业务需求，是当用户长按一张图片的时候，弹出一个选项菜单，让用户可以选择合适的操作，比如『保存图片』，『转发图片』等等，同时，如果这张图片中能够识别出二维码，在弹出的选项菜单中，还要包含一项『识别图中二维码』。二维码解析是需要消耗一定的时间的，下载图片也是需要时间的，有些情况下，即便图片本身的确是一个二维码，但是二维码可能很复杂，解析的时间就会比较长，为了保证最佳的用户体验，这里需要做一个超时逻辑，如果 1.5 秒内都还没有解析出一个有效的二维码，则放弃当前的解析动作。&lt;a href=&quot;http://reactivex.io/documentation/operators/timeout.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;timeout&lt;/a&gt; 操作就是针对这种场景的，当到达设定的超时时间时，如果还没有发送 Next 事件，则会在 Pipeline 中发送一个 RACSignalErrorDomain 的 NSError，error code 是 RACSignalErrorTimedOut。&lt;/li&gt;
&lt;li&gt;这个 Pipeline 是由好几个小任务组合出来的，每一个环节都有可能发送 error，所以对于这个 Pipeline 的订阅者，捕获到的 NSError 会是好几个不同 Domain 的其中之一。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个 Pipeline 的订阅者的代码会是下面这种样子：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)jsCallImageClick:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)imageUrl imageClickName:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)imgClickName &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *components = [&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; arrayWithArray:[imageUrl componentsSeparatedByString:&lt;span class=&quot;string&quot;&gt;@&quot;&amp;amp;qmSrc:&quot;&lt;/span&gt;]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *temp = [&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; arrayWithArray:[(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt;*)[components firstObject] componentsSeparatedByString:[&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;&amp;amp;%@:&quot;&lt;/span&gt;,imgClickName]]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; filterJsArray:temp];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *imageUrlString = [&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;,(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)[temp firstObject]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *barCodeStringSignal = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.barCodeService decodeBarWithURLString:imageUrlString];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @weakify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [[barCodeStringSignal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      deliverOn:[RACScheduler mainThreadScheduler]]  &lt;span class=&quot;comment&quot;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     subscribeNext:^(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *barCodeString) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; showImageSaveSheetWithImageUrl:imageUrl withImageClickName:imgClickName withBarCode:barCodeString];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; error:^(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; showImageSaveSheetWithImageUrl:imageUrl withImageClickName:imgClickName withBarCode:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; completed:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为 decodeBarWithURLString 的内部在使用 timeout 的时候，已经通过 RACScheduler 切换到了后台线程，所以在订阅者(UI)这里还要切换回 [RACScheduler mainThreadScheduler]。&lt;/p&gt;
&lt;h3 id=&quot;捕获并且替换-error&quot;&gt;&lt;a href=&quot;#捕获并且替换-error&quot; class=&quot;headerlink&quot; title=&quot;捕获并且替换 error&quot;&gt;&lt;/a&gt;捕获并且替换 error&lt;/h3&gt;&lt;p&gt;下面也是一个真实业务场景中的代码片段，有适当的删减，需求大致可以描述为：FMContact.contactItems 数组里包含的是一个联系人的所有的 email 地址(至少有一个)，在用 FMContactCreateAvatarCell 显示这个联系人的头像的时候，要通过其中的一个 email 地址，构造出一个 url 地址，然后下载对应的头像，最后把头像 image 设置到 UIButton 上。&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ColdSignal&amp;lt;UIImage?, NoError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Completion: download image finished;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Error: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Scheduler: specified;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Multicast: NO;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (RACSignal *)getAvatarWithContact: (FMContact *)contact &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *addrs = [[contact.contactItems.rac_sequence&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         map:^(FMContactItem *contactItem) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; contactItem.email;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        signal];&lt;span class=&quot;comment&quot;&gt;//4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[[[addrs take:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;//5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *emailAddr) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[[FMAvatarManager shareInstance] rac_asyncGetAvatar:emailAddr]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          retry:&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];  &lt;span class=&quot;comment&quot;&gt;//6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             flatten]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            catch:^RACSignal *(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACSignal &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;]; &lt;span class=&quot;comment&quot;&gt;//8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)initPipelineWithCell:(FMContactCreateAvatarCell *)cell &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @weakify(cell);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [[[[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; getAvatarWithContact:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contact] &lt;span class=&quot;comment&quot;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       deliverOnMainThread]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      takeUntil:cell.rac_prepareForReuseSignal]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     subscribeNext:^(&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *image) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         @strongify(cell);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (image) &amp;#123; &lt;span class=&quot;comment&quot;&gt;//2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             [cell.avatarButton setImage:image forState:&lt;span class=&quot;built_in&quot;&gt;UIControlStateNormal&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; error:^(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;//3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; completed:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个业务需求看上去也没有太大的难度，大家肯定都可以用传统的代码写出来，但是如果用 FRP，则可以用声明式(declarative)的代码把逻辑写的更清晰：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;getAvatarWithContact 定义了一个 Signal，通过输入参数 FMContact，获取一个对应的头像，如果头像下载成功，则通过 next 把 image 发送给 Pipeline 的订阅者，如果下载图片失败，并不会发送 error，而是在 next 里面发送一个 nil。&lt;/li&gt;
&lt;li&gt;这个 Pipeline 只会有一次 next 事件，按照 Signal 的定义，可能为 nil，所以需要检查。&lt;/li&gt;
&lt;li&gt;这个 Pipeline 是不会产生 error 的，所以这里不需要做任何事情。但是真正的下载图片的操作，也就是 [[FMAvatarManager shareInstance] rac_asyncGetAvatar:emailAddr] 这一句代码产生的 signal，是有 error 事件的，有意思的地方就是如何对这里可能出现的 error 进行处理，请接着往下看。&lt;/li&gt;
&lt;li&gt;把 FMContact.contactItems 数组里面的 email 地址，用 signal 的形式发送出来。&lt;/li&gt;
&lt;li&gt;FMContact 至少有一个 email 地址，因为只需要显示一个头像，所以直接用最简单的办法，通过 &lt;a href=&quot;http://rxmarbles.com/#take&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;take&lt;/a&gt; 操作取出其中的第一个 email 地址。&lt;/li&gt;
&lt;li&gt;从模块设计的角度来看，应该遵循一个基本原则，如果一个小任务可能出现失败的情况，就应该通过 error 把错误信息发送出去。[[FMAvatarManager shareInstance] rac_asyncGetAvatar:emailAddr] 是在下载头像图片，肯定是存在下载失败的可能性，所以这个小任务应该遵循这个基本原则。但是，为了更好的用户体验，可以在 Pipeline 中增加一个环节，添加一个策略，就是遇到下载失败的时候，自动重新下载一遍，总共尝试 3 次，这个需求可以用 &lt;a href=&quot;http://reactivex.io/documentation/operators/retry.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;retry&lt;/a&gt; 操作方便的实现出来。&lt;/li&gt;
&lt;li&gt;如果运气真的不好，3 次下载都失败了，那 Pipeline 里还是会发送 error 的，但是 getAvatarWithContact 这个 signal 的设计要求是不要 error，这个时候就该用到 &lt;a href=&quot;http://reactivex.io/documentation/operators/catch.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;catch&lt;/a&gt; 操作了。catch 做的事情，就是当 Pipeline 里出现 error 的时候，把这个 error 『吃掉』，然后用另外的一个 signal 来替换原来的 signal，让整个 Pipeline 可以继续发送 next 数据。&lt;/li&gt;
&lt;li&gt;[RACSignal return:nil] 就是用来替换的 signal，这个 signal 会在 next 里面发送一次 nil，然后立刻就 complete。(如果业务需求变化，这里也可以通过 [RACSignal return:defaultAvatarImage] 发送一个默认的头像图片，Pipeline 是很方便的，可以灵活的组装)。&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;利用-map-组装顺序执行的业务&quot;&gt;&lt;a href=&quot;#利用-map-组装顺序执行的业务&quot; class=&quot;headerlink&quot; title=&quot;利用 map 组装顺序执行的业务&quot;&gt;&lt;/a&gt;利用 map 组装顺序执行的业务&lt;/h3&gt;&lt;p&gt;这其实应该是最常见的使用场景
    
    </summary>
    
    
      <category term="FRP" scheme="http://fengjian0106.github.io/tags/FRP/"/>
    
      <category term="ReactiveCocoa" scheme="http://fengjian0106.github.io/tags/ReactiveCocoa/"/>
    
  </entry>
  
  <entry>
    <title>用 ReactiveCocoa 事半功倍的写代码（一）</title>
    <link href="http://fengjian0106.github.io/2016/04/17/The-Power-Of-Composition-In-FRP-Part-1/"/>
    <id>http://fengjian0106.github.io/2016/04/17/The-Power-Of-Composition-In-FRP-Part-1/</id>
    <published>2016-04-17T13:25:59.000Z</published>
    <updated>2016-05-04T08:05:40.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Functional_reactive_programming&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FRP&lt;/a&gt; 是一门学习曲线比较陡峭的技术，回想自己以前的学习过程，也是反反复复好几次，而且总是挫败感很强。不过还好坚持了下来，现在也算是用着比较顺手了。&lt;/p&gt;
&lt;p&gt;关于 FRP， 最容易被吐槽的地方就是没有好的学习资料和文档。一开始我也是这种感觉，后来在反复尝试的过程中，发现其实真的不是文档的问题。先说我的结论 —- 不要指望脱离代码能够把 FRP 的原理讲清楚，这是 FRP 和其他编程技术的一个明显差异，这就类似于很难用一段文字把一个数学公式描述清楚一样。而且，即便是开始看用 FRP 编写的各种代码了，还是会觉得太抽象了，仍然需要大量的时间体会代码，或者说，『悟』出其中的一些基本门道。&lt;/p&gt;
&lt;p&gt;关于入门学习，没有捷径，最好的办法就是通过代码来学习，下面是我觉得比较好的一些入门学习资料&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/staltz/868e7e9bc2a7b8c1f754&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The introduction to Reactive Programming you’ve been missing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ReactiveCocoa/ReactiveCocoa/tree/master/Documentation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ReactiveCocoa Documentation&lt;/a&gt; &lt;em&gt;我本人主要是做 iOS 开发，目前使用的是 RAC 这个库，所以它的官方文档也是一个学习途径。另外，本文中的代码也是使用 RAC 进行编写&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.raywenderlich.com/62699/reactivecocoa-tutorial-pt1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ReactiveCocoa Tutorial – The Definitive Introduction: Part 1/2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.raywenderlich.com/62796/reactivecocoa-tutorial-pt2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ReactiveCocoa Tutorial – The Definitive Introduction: Part 2/2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rxmarbles.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Interactive diagrams of Rx Observables&lt;/a&gt; &lt;em&gt;这个是一组动态效果图，用可视化的效果演示了一些 FRP 里常用操作(当然，其实还是很抽象的)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;之所以说 FRP 的学习曲线很陡峭，不仅仅是指它的入门学习比较耗时费脑，当入了门或者稍微找到一些感觉之后，紧接着就会面对第二个问题：FRP 里面提供的都是一些比较抽象的函数操作，怎样才能用这些基本函数来解决各种各样的业务问题？尤其是那些很抽象的操作，怎样才能用起来？&lt;/p&gt;
&lt;p&gt;这个系列的文章，主要就是针对后面这第二个问题，做的一些 demo 演示。&lt;/p&gt;
&lt;p&gt;可以把 FRP 看成是一种更高级的 &lt;a href=&quot;http://www.dossier-andreas.net/software_architecture/pipe_and_filter.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pipeline&lt;/a&gt; 编程范式，Pipeline 的一个精髓，就是可以灵活的组合，虽然 FRP 里常用的操作也就那么几十个，但是一旦像搭积木那样对它们进行了组装之后，FRP 的强大之处一下子就展现了出来。&lt;/p&gt;
&lt;p&gt;FRP 通常是以库或框架的形式提供给使用者，目前已经有很多常见编程语言的具体实现。在这个系列文章中，将使用 RAC 2 (ReactiveCocoa 的 Objective-C 版本) 进行编写。但是 FRP 本质上是一种编程范式，从 Pipeline 的角度来看，它的侧重点在于如何组装出不同形状的 Pipeline，而不太在乎 Pipeline 的具体构成材料(编程语言)，从框架的角度来看，虽然有不同语言版本的实现，但是每个版本里，提供的诸如 map、flattenMap、reduce 等基础操作，在概念上和行为模式上，又都是一样的。所以，FRP 也是一门 “Learn once, write anywhere” 的技术。&lt;/p&gt;
&lt;p&gt;FRP 有几个明显的好处，比如可以减少中间状态变量的使用，可以编写紧凑的代码，可以用同步风格编写异步运行的代码，在本系列文章中，也会尽量体现出这些特点。&lt;/p&gt;
&lt;h3 id=&quot;处理键盘的弹出和隐藏&quot;&gt;&lt;a href=&quot;#处理键盘的弹出和隐藏&quot; class=&quot;headerlink&quot; title=&quot;处理键盘的弹出和隐藏&quot;&gt;&lt;/a&gt;处理键盘的弹出和隐藏&lt;/h3&gt;&lt;p&gt;这个业务其实是非常简单的，就是在某个 UIViewController 里面，当检测到键盘弹出的时候，为了避免键盘遮挡住某个 UIView，需要根据键盘的高度重新对 view 进行 layout，用 RAC 写出来的代码是下面这个样子：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)initPipeline &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @weakify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *keyboardWillShowNotification =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt;.defaultCenter rac_addObserverForName:&lt;span class=&quot;built_in&quot;&gt;UIKeyboardWillShowNotification&lt;/span&gt; object:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSNotification&lt;/span&gt; *notification) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;//2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt;* userInfo = [notification userInfo];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;NSValue&lt;/span&gt;* aValue = [userInfo objectForKey:&lt;span class=&quot;built_in&quot;&gt;UIKeyboardFrameEndUserInfoKey&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; aValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [[[[[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt;.defaultCenter rac_addObserverForName:&lt;span class=&quot;built_in&quot;&gt;UIKeyboardWillHideNotification&lt;/span&gt; object:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSNotification&lt;/span&gt; *notification) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSValue&lt;/span&gt; valueWith&lt;span class=&quot;built_in&quot;&gt;CGRect&lt;/span&gt;:&lt;span class=&quot;built_in&quot;&gt;CGRectZero&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       merge:keyboardWillShowNotification]   &lt;span class=&quot;comment&quot;&gt;//4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      takeUntil:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.rac_willDeallocSignal]  &lt;span class=&quot;comment&quot;&gt;//6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     subscribeNext:^(&lt;span class=&quot;built_in&quot;&gt;NSValue&lt;/span&gt; *value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;Keyboard size is: %@&quot;&lt;/span&gt;, value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;//5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.messageEditViewContainerViewBottomConstraint.constant = &lt;span class=&quot;number&quot;&gt;5.0&lt;/span&gt; + [value &lt;span class=&quot;built_in&quot;&gt;CGRectValue&lt;/span&gt;].size.height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view updateConstraints];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         [&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; animateWithDuration:&lt;span class=&quot;number&quot;&gt;0.6&lt;/span&gt; animations:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view layoutIfNeeded];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; completed:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;//6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%s, Keyboard Notification signal completed&quot;&lt;/span&gt;, __PRETTY_FUNCTION__);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用数字标注的地方，是比较关键的点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;很多时候，Pipeline 都是只需要构建一次的，如果是针对 UIViewController，通常都是在 viewDidLoad 方法里调用 [self initPipeline]，如果是针对 UIView，则很有可能是在 awakeFromNib 方法里进行调用，这里遵循的一个策略是，在模块『活』起来之后，应该尽快的构造所有的 Pipeline，如果是 model 或 service 类型的模块，则很可能是在 init 完成后，就调用 initPipeline，但是对于 UI 性质的模块，因为有 iOS 平台相关的 view 加载策略，而且 Pipeline 通常又是和 UI 交互有关，所以通常是需要在 view 生命期相关的方法中才构造 Pipeline。&lt;/li&gt;
&lt;li&gt;通过 map 操作，把 UIKeyboardWillShowNotification 转换成一个 CGRect(包装在 NSValue 里面)。&lt;a href=&quot;http://rxmarbles.com/#map&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;map&lt;/a&gt; 操作是 FRP 里面最核心的一个基本操作，也是最体现函数式编程(FP)哲学的一个操作，所谓的这个哲学，用通俗的话来描述，就是『把复杂的业务拆分成一个一个的&lt;strong&gt;小任务&lt;/strong&gt;，每一个小任务，都需要一个输入值，并且会给出一个输出值(当然也会反馈错误信息)，而且每个小任务都只专心的做一件事情』。如果第一个小任务的输出值，是第二个小任务的输入值，那么，就可以用 map 操作把这两个小任务串联在一起。在接收到 UIKeyboardWillShowNotification 消息通知的时候，这个小任务的输入值就是 NSNotification，输出值是键盘尺寸对应的 CGRect，小任务本身做的事情，就是从 NSNotification 里面取出包装着这个 CGRect 的 NSValue。&lt;/li&gt;
&lt;li&gt;当接收到 UIKeyboardWillHideNotification 消息通知的时候，这个小任务要做的事情，和 2 里面的小任务是类似的，只不过这一次，NSNotification 并没有包含键盘的尺寸，那我们自己用 CGRectZero 构造一个就行了。&lt;/li&gt;
&lt;li&gt;终于到了这段代码的重点了，&lt;a href=&quot;http://rxmarbles.com/#merge&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;merge&lt;/a&gt; 操作在这里的使用效果，相当于把 2 和 3 里面的两个小任务的输出值作为自己的输入值，按照时间先后顺序排列起来，然后作为自己这个小任务的输出值，返回给 Pipeline 中的下一个环节。&lt;code&gt;这样描述还是很抽象，看不懂，是吧？没关系，早就说过用语言很难描述了。把代码运行起来，通过 NSLog(@&amp;quot;Keyboard size is: %@&amp;quot;, value) 这句代码的输出信息体会一下 merge 的实际效果。&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;这里才是真正的实现业务想要的效果，根据前一个小任务的输出值(键盘尺寸 CGRect)来计算 layout 的尺寸。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rxmarbles.com/#takeUntil&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;takeUntil&lt;/a&gt; 是一个难点，如果没有这一句代码调用，运行代码后会发现，前面 5 里面的业务还是正常执行了，但是当 self 被 dealloc 后(比如 pop UIViewController 后)，NSLog(@”Keyboard size is: %@”, value) 这句代码还是会被执行到(因为已经处理过 retain cycle，所以此时 self 是 nil)，这是因为当 self 被 dealloc 后，这个 Pipeline 并没有被释放，Pipeline 里面还是有数据在继续流动。这个话题牵扯到 RAC 框架中的&lt;a href=&quot;https://github.com/ReactiveCocoa/ReactiveCocoa/blob/master/Documentation/Legacy/MemoryManagement.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;内存管理策略&lt;/a&gt;，很重要，后面的内容中还会讲到这个话题。这里暂时只需要知道可以借助 takeUntil:self.rac_willDeallocSignal 这样的一行代码方便的解决问题就行了。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Singal上的-next、complete、error&quot;&gt;&lt;a href=&quot;#Singal上的-next、complete、error&quot; class=&quot;headerlink&quot; title=&quot;Singal上的 next、complete、error&quot;&gt;&lt;/a&gt;Singal上的 next、complete、error&lt;/h3&gt;&lt;p&gt;在学习的过程中，发现有一个问题很容易被忽略掉，那就是 Signal 的 next、complete、error 这 3 种数据，会在什么时候被发送出来，针对这个问题做过一个总结，放在了 &lt;a href=&quot;https://github.com/ziipin-code/ZiipinTemplateProject/blob/master/rac.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇文档&lt;/a&gt; 中，主要目的是使用一种简单易懂的格式把 Signal 的关键信息描述出来，这里简单摘录一下。&lt;/p&gt;
&lt;h4 id=&quot;基础格式&quot;&gt;&lt;a href=&quot;#基础格式&quot; class=&quot;headerlink&quot; title=&quot;基础格式&quot;&gt;&lt;/a&gt;基础格式&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;HotSignal&amp;lt;T, E&amp;gt;   // or ColdSignal&amp;lt;T, E&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Completion: ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Error: ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Scheduler: ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Multicast: ...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;关键字解释&quot;&gt;&lt;a href=&quot;#关键字解释&quot; class=&quot;headerlink&quot; title=&quot;关键字解释&quot;&gt;&lt;/a&gt;关键字解释&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ReactiveCocoa/ReactiveCocoa/blob/master/Documentation/Legacy/DesignGuidelines.md#use-descriptive-declarations-for-methods-and-properties-that-return-a-signal&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HotSignal And ColdSignal&lt;/a&gt;:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;HotSignal&lt;/code&gt;: Signal 已经处于活动状态(activated);&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ColdSignal&lt;/code&gt;: Signal 需要订阅(subscribed)才会活动(activate);&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;T: Signal sendNext 的类型, 可以下面几种情况:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;T&lt;/code&gt;: 表示只会发送 1 次 next 事件, 内容是类型 &lt;code&gt;T&lt;/code&gt; 的实例;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T?&lt;/code&gt;:  表示只会发送 1 次 next 事件, 内容是类型 &lt;code&gt;T&lt;/code&gt; 的实例或者 &lt;code&gt;nil&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[T]&lt;/code&gt;: 表示会发送 0 到 n 次 next 事件, 内容是类型 &lt;code&gt;T&lt;/code&gt; 的实例;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[T?]&lt;/code&gt;: 表示会发送 0 到 n 次 next 事件, 内容是类型 &lt;code&gt;T&lt;/code&gt; 的实例或者 &lt;code&gt;nil&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;None&lt;/code&gt;: 表示&lt;strong&gt;不会&lt;/strong&gt;发送 next 事件;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;E: Signal sendError 的类型, 通常是 &lt;code&gt;NSError&lt;/code&gt; 或 &lt;code&gt;NoError&lt;/code&gt;; &lt;code&gt;NoError&lt;/code&gt; 表示 Signal 不会 sendError;&lt;/li&gt;
&lt;li&gt;Completion: 描述什么情况 sendCompleted;&lt;ul&gt;
&lt;li&gt;如果 next 事件的发送次数是 &lt;code&gt;无穷多次&lt;/code&gt;，相当于使用者永远也接收不到 Completed 事件，所以这一行可以不写;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Error:  描述什么情况 sendError;&lt;br&gt;如果 Signal 不会 sendError, 这一行可以不写;&lt;/li&gt;
&lt;li&gt;Scheduler: Signal 所在的线程，通常是 &lt;code&gt;main&lt;/code&gt; &lt;code&gt;specified&lt;/code&gt; &lt;code&gt;current&lt;/code&gt;, 默认是 &lt;code&gt;current&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;main 模块内部的pipeline有切换不同的scheduler，所以模块内部有责任确保最终的signal始终是在main schedular上的&lt;/li&gt;
&lt;li&gt;specified 模块内部自定义了一个任务队列，模块会确保最终返回的signal都在这个特定的schedular中(或者是使用全局默认的后台schedular)&lt;/li&gt;
&lt;li&gt;current 模块内部pipeline没有做任何scheduler的切换，且不指定特定的schedular，所以最终返回的signal和外部调用者的线程保持一致&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Multicast: 是否广播，通常是 &lt;code&gt;YES&lt;/code&gt; &lt;code&gt;NO&lt;/code&gt;, 默认是 &lt;code&gt;NO&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;所有可能出现的有意义的非嵌套-Signal&quot;&gt;&lt;a href=&quot;#所有可能出现的有意义的非嵌套-Signal&quot; class=&quot;headerlink&quot; title=&quot;所有可能出现的有意义的非嵌套 Signal&quot;&gt;&lt;/a&gt;所有可能出现的有意义的非嵌套 Signal&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;*    HotSignal&amp;lt;T, NoError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*    HotSignal&amp;lt;T?, NoError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*    HotSignal&amp;lt;[T], NoError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*    HotSignal&amp;lt;[T?], NoError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*    HotSignal&amp;lt;None, NoError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*    HotSignal&amp;lt;T, NSError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*    HotSignal&amp;lt;T?, NSError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*    HotSignal&amp;lt;[T], NSError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*    HotSignal&amp;lt;[T?], NSError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*    HotSignal&amp;lt;None, NSError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*    ColdSignal&amp;lt;T, NoError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*    ColdSignal&amp;lt;T?, NoError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*    ColdSignal&amp;lt;[T], NoError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*    ColdSignal&amp;lt;[T?], NoError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*    ColdSignal&amp;lt;None, NoError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*    ColdSignal&amp;lt;T, NSError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*    ColdSignal&amp;lt;T?, NSError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*    ColdSignal&amp;lt;[T], NSError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*    ColdSignal&amp;lt;[T?], NSError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*    ColdSignal&amp;lt;None, NSError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;发送验证码的倒计时按钮&quot;&gt;&lt;a href=&quot;#发送验证码的倒计时按钮&quot; class=&quot;headerlink&quot; title=&quot;发送验证码的倒计时按钮&quot;&gt;&lt;/a&gt;发送验证码的倒计时按钮&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/retryButton.png&quot; alt=&quot;Retry Button&quot;&gt;&lt;/p&gt;
&lt;p&gt;如上图，这里的需求是，点击右上角的按钮后，该按钮不可以使用，同时在按钮上显示一个倒计时时间，当达到倒计时时间后，按钮恢复可用状态。这个需求并不难，相信大家都可以写出来，但是，每个人写出来的代码，风格肯定千差万别，而且，免不了会需要一些状态变量来记录一些信息，比如定时器对象和倒计时的时间等等。如果换用 RAC，则可以在一段连续的代码中，满足所有的需求，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ColdSignal&amp;lt;RACTuple&amp;lt;NSString, NSNumber&amp;lt;BOOL&amp;gt; &amp;gt;), NoError&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Completion: 1分钟倒计时结束;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Error: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Scheduler: main;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Multicast: NO;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (RACSignal *)retryButtonTitleAndEnable &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; n = &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *timer = [[[RACSignal interval:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; onScheduler:[RACScheduler mainThreadScheduler]]  &lt;span class=&quot;comment&quot;&gt;//7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        startWith:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;]; &lt;span class=&quot;comment&quot;&gt;//9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *numbers = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; i = n; i &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [numbers addObject:[&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithInteger:i]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[[[[numbers.rac_sequence.signal zipWith:timer]  &lt;span class=&quot;comment&quot;&gt;//11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(RACTuple *tuple) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;span class=&quot;comment&quot;&gt;//12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *number = tuple.first;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; count = number.integerValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (count == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; RACTuplePack(&lt;span class=&quot;string&quot;&gt;@&quot;重试&quot;&lt;/span&gt;, [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *title = [&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;重试(%lds)&quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)count];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; RACTuplePack(title, [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:&lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              takeUntil:[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; rac_willDeallocSignal]] &lt;span class=&quot;comment&quot;&gt;//13&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             setNameWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;%s, retryButtonTitleAndEnable signal&quot;&lt;/span&gt;, __PRETTY_FUNCTION__]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            logCompleted]; &lt;span class=&quot;comment&quot;&gt;//14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)initPipeline &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @weakify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [[[[[[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.retryButtton rac_signalForControlEvents:&lt;span class=&quot;built_in&quot;&gt;UIControlEventTouchUpInside&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;comment&quot;&gt;//2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; retryButtonTitleAndEnable];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        startWith:[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; retryButtonTitleAndEnable]]  &lt;span class=&quot;comment&quot;&gt;//3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       switchToLatest]  &lt;span class=&quot;comment&quot;&gt;//4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      takeUntil:[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; rac_willDeallocSignal]]  &lt;span class=&quot;comment&quot;&gt;//5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     subscribeNext:^(RACTuple *tuple) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;//6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *title = tuple.first;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.retryButtton setTitle:title forState:&lt;span class=&quot;built_in&quot;&gt;UIControlStateNormal&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.retryButtton.enabled = ((&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *)tuple.second).boolValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; completed:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;//5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%s, pipeline completed&quot;&lt;/span&gt;, __PRETTY_FUNCTION__);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//这里省略了点击 retryButtton 后具体要做的业务逻辑，同时也省略了验证按钮和验证码输入框的处理逻辑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对关键代码的描述如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设计一个 RACSignal，这个 Signal 每次发送的 Next 数据里面包含的就是按钮上要显示的文本信息和按钮的可用状态。从模块的角度来看，这个 Signal 的内部细节(倒计时逻辑)，外部使用者是不需要知道的，所以后面我们会先看外层 Pipeline 的实现代码，然后再倒回来看这个 Signal 的内部逻辑。&lt;/li&gt;
&lt;li&gt;每当 retryButtton 被点击的时候，要重新启动一个定时器，所以在这个 map 操作里面，调用 [self retryButtonTitleAndEnable] 得到一个 Signal，将这个 Signal 作为这个小任务的输出值。注意，因为这里 map 操作返回的是一个 Signal，形成了一个 Pipeline 的嵌套，所以可以预见到，在外层 Pipeline 的后续操作中，肯定是需要把这个内嵌的 Pipeline flatten 出来的。&lt;/li&gt;
&lt;li&gt;在业务需求中，点击这个 retryButtton 后，要请求服务器发送一个验证码(省略了这部分的代码，如果要用 RAC 实现的话，是比较容易的)，同时，当每次进入这个 UI 页面的时候，不需要用户主动点击这个 retryButtton 按钮，首先就要自动的请求服务器发送一个验证码，这种情况下，也要求 retryButtton 开始进入倒计时的模式，所以，用 &lt;a href=&quot;http://rxmarbles.com/#startWith&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;startWith&lt;/a&gt; 操作，在外层 Pipeline 中先插入第一个 Next 数据，因为是同样的倒计时逻辑，所以这里也是调用 [self retryButtonTitleAndEnable] 得到内嵌的 Pipeline。&lt;/li&gt;
&lt;li&gt;前面已经提过了，既然形成了 Pipeline 的嵌套，那肯定是要把这种嵌套解出来的，这里使用 &lt;a href=&quot;http://reactivex.io/documentation/operators/images/switch.c.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;switchToLatest&lt;/a&gt; 更合适。要注意区分一下和 &lt;a href=&quot;http://reactivex.io/documentation/operators/flatmap.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;flattenMap&lt;/a&gt; 的差异。&lt;/li&gt;
&lt;li&gt;Pipeline 的生命期控制，前面的例子中已经讲过这种技巧了，但是，这是写上这句，只是一个双保险。复杂的地方在于外层 Pipeline 有 switchToLatest 操作，这个 switchToLatest 后的 Signal 什么时候才会 Completed，请继续看至后面 13 中的解释。&lt;/li&gt;
&lt;li&gt;这里是更新 retryButtton 的 title 和状态。&lt;/li&gt;
&lt;li&gt;现在开始回到内层 Pipeline 的逻辑中去。用 Pipeline 的方式实现一个定时器，借助 RAC 提供的 interval 操作就行。每隔一秒都会在主线程上发送一个 Next。&lt;/li&gt;
&lt;li&gt;7 里面的定时器上的 Next 数据，是当前的系统时间值，我们的需求里面并不需要这个时间值，所以这里直接 map 成 nil。&lt;/li&gt;
&lt;li&gt;RACSignal interval 要隔一秒后才会发出第一次，需要用 startWith 立刻发送一个，代表倒计时的初始值。&lt;/li&gt;
&lt;li&gt;把倒计时要用到的数字放到一个数组里面，然后通过 numbers.rac_sequence.signal 语句转换成一个 Signal。&lt;/li&gt;
&lt;li&gt;把前面 10 中得到的 Signal 和 9 中得到的 timer Signal，用 &lt;a href=&quot;http://rxmarbles.com/#zip&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;zipWith&lt;/a&gt; 组装起来。注意一点，这个通过 zipWith 组装出来的 Signal，会在 numbers.rac_sequence.signal Completed 的时候 Completed (这句话有点绕，需要结合 zipWith 的定义仔细体会一下)。&lt;/li&gt;
&lt;li&gt;根据倒计时的数值，计算按钮上需要显示的 title 信息和按钮的状态。&lt;/li&gt;
&lt;li&gt;前面 11 里面的 zipWith 操作，可以确保倒计时结束时，会触发 Completed，但是万一在倒计时的过程中，用户离开了当前页面，这个时候就需要通过 takeUntil 来触发 Completed。之所以在这里这么注重 Completed，是因为前面的 5 里面的 switchToLatest 操作，会 &lt;code&gt;sends completed when both the receiver and the last sent signal complete&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;通过 setNameWithFormat 和 logCompleted 打印一些 log 信息，方便调试，注意观察一下 Signal 的 Completed。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;内存管理，自动释放-Pipeline&quot;&gt;&lt;a href=&quot;#内存管理，自动释放-Pipeline&quot; class=&quot;headerlink&quot; title=&quot;内存管理，自动释放 Pipeline&quot;&gt;&lt;/a&gt;内存管理，自动释放 Pipeline&lt;/h3&gt;&lt;p&gt;从前面的 code 中可以看到，好几个地方都在强调要触发 Completed，这完全就是为了正确的进行内存管理，避免内存泄露，&lt;a href=&quot;https://github.com/ReactiveCocoa/ReactiveCocoa/blob/7877f99bdfb4be1c82c4804082e99c35d0a93a91/Documentation/Legacy/DesignGuidelines.md#avoid-explicit-subscriptions-and-disposal&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;避免手动的调用 disposal&lt;/a&gt;。takeUntil:self.rac_willDeallocSignal 是一种常用的手段。&lt;/p&gt;
&lt;p&gt;还有一种典型的场景，也可以通过 takeUntil 操作来触发 Completed，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UICollectionViewCell&lt;/span&gt; *)collectionView:(&lt;span class=&quot;built_in&quot;&gt;UICollectionView&lt;/span&gt; *)collectionView cellForItemAtIndexPath:(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt; *)indexPath &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    WWKPhoto *photo = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.photos[indexPath.row];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    XMCollectionImageViewCell *cell = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.imageCollectionView dequeueReusableCellWithReuseIdentifier:&lt;span class=&quot;built_in&quot;&gt;NSStringFromClass&lt;/span&gt;([XMCollectionImageViewCell class]) forIndexPath:indexPath];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cell.imageView.image = photo.thumbnail;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @weakify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [[[cell.longPressSignal map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(XMCollectionImageViewCell *viewCell) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.imageCollectionView indexPathForCell:viewCell];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      takeUntil:[cell rac_prepareForReuseSignal]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     subscribeNext:^(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt; *longPressIndexPath) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;UIAlertController&lt;/span&gt; *alert= [&lt;span class=&quot;built_in&quot;&gt;UIAlertController&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    alertControllerWithTitle:&lt;span class=&quot;string&quot;&gt;@&quot;确定删除此图片&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    message:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    preferredStyle:&lt;span class=&quot;built_in&quot;&gt;UIAlertControllerStyleAlert&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;UIAlertAction&lt;/span&gt;* ok = [&lt;span class=&quot;built_in&quot;&gt;UIAlertAction&lt;/span&gt; actionWithTitle:&lt;span class=&quot;string&quot;&gt;@&quot;确定&quot;&lt;/span&gt; style:&lt;span class=&quot;built_in&quot;&gt;UIAlertActionStyleDefault&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                    handler:^(&lt;span class=&quot;built_in&quot;&gt;UIAlertAction&lt;/span&gt; * action)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                        @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                        [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; mutableArrayValueForKey:@keypath(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, photos)] removeObjectAtIndex:longPressIndexPath.row];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.imageCollectionView deleteItemsAtIndexPaths:@[longPressIndexPath]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;UIAlertAction&lt;/span&gt;* cancel = [&lt;span class=&quot;built_in&quot;&gt;UIAlertAction&lt;/span&gt; actionWithTitle:&lt;span class=&quot;string&quot;&gt;@&quot;取消&quot;&lt;/span&gt; style:&lt;span class=&quot;built_in&quot;&gt;UIAlertActionStyleDefault&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                        handler:^(&lt;span class=&quot;built_in&quot;&gt;UIAlertAction&lt;/span&gt; * action) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                            [alert dismissViewControllerAnimated:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt; completion:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                        &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         [alert addAction:ok];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         [alert addAction:cancel];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.containerViewController presentViewController:alert animated:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt; completion:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; completed:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; cell;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段代码也很简单，唯一需要特别注意的就是 takeUntil:[cell rac_prepareForReuseSignal] 这一句，因为 UICollectionViewCell 本身是有一套复用机制的，每个 cell 上的 Pipeline 的生命期和 cell 本身的生命期并不一致，所以不能依赖于 cell.rac_willDeallocSignal，而应该使用 [cell rac_prepareForReuseSignal] 这个更准确的 Signal。&lt;/p&gt;
&lt;p&gt;讨论到这里，还可以得到一个结论，在设计 Signal 的时候，要尽量的让这个 Signal 能够发送 Completed 事件，这样才能够充分的利用 Pipeline 的自动释放功能，保持代码的简洁。RAC 框架里，有一些很常用的 Signal，其实它们的内部实现也是用类似 takeUntil 的操作做了这种处理，比如下面这些 Signal：&lt;br&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UIControl&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;RACSignalSupport&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (RACSignal *)rac_signalForControlEvents:(&lt;span class=&quot;built_in&quot;&gt;UIControlEvents&lt;/span&gt;)controlEvents;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UIGestureRecognizer&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;RACSignalSupport&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (RACSignal *)rac_gestureSignal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RACObserve 宏定义&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下面这个 Signal，则是没有 Completed 事件的，要求它的使用者来决定什么时候释放对应的 Pipeline：&lt;br&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;NSNotificationCenter&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;RACSupport&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (RACSignal *)rac_addObserverForName:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)notificationName object:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)object;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Functional_reactive_programming
    
    </summary>
    
    
      <category term="FRP" scheme="http://fengjian0106.github.io/tags/FRP/"/>
    
      <category term="ReactiveCocoa" scheme="http://fengjian0106.github.io/tags/ReactiveCocoa/"/>
    
  </entry>
  
  <entry>
    <title>通过 Swift 学习 CSP 并发模型</title>
    <link href="http://fengjian0106.github.io/2016/04/10/CSP-Concurrency-Patterns-In-Swift/"/>
    <id>http://fengjian0106.github.io/2016/04/10/CSP-Concurrency-Patterns-In-Swift/</id>
    <published>2016-04-10T14:45:16.000Z</published>
    <updated>2016-05-04T08:27:36.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;这篇文章的主要内容，是从 &lt;a href=&quot;https://talks.golang.org/2012/concurrency.slide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Go Concurrency Patterns&lt;/a&gt; 翻译过来的。&lt;/p&gt;
&lt;p&gt;原文是介绍 &lt;a href=&quot;http://golang.info/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Golang&lt;/a&gt; 里面的 &lt;a href=&quot;https://en.wikipedia.org/wiki/Communicating_sequential_processes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSP&lt;/a&gt; 并发模型(Communicating Sequential Processes)，这里则是使用一个基于 Swift3.0 的库 &lt;a href=&quot;https://github.com/VeniceX/Venice&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Venice&lt;/a&gt; 编写的代码。&lt;/p&gt;
&lt;p&gt;这篇文章的主要目的，并不是鼓励大家立刻就用 Swift 进行后端开发(至少不是目前这个阶段)，但是，对于想尝试全栈开发的 iOS 工程师来说，则可以通过这篇文章入门学习 CSP 这种并发编程模型。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2016/04/08 update: 为了成功运行本文中的代码，需要安装 &lt;a href=&quot;https://swift.org/builds/development/xcode/swift-DEVELOPMENT-SNAPSHOT-2016-03-24-a/swift-DEVELOPMENT-SNAPSHOT-2016-03-24-a-osx.pkg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://swift.org/builds/development/xcode/swift-DEVELOPMENT-SNAPSHOT-2016-03-24-a/swift-DEVELOPMENT-SNAPSHOT-2016-03-24-a-osx.pkg&lt;/a&gt; 这个版本的 swift。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2016/04/13 update: &lt;a href=&quot;https://github.com/VeniceX/Venice&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Venice&lt;/a&gt; 里面的 Channel 不再支持基于自定义运算符的读写操作，只能使用 func api。&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;为什么要讨论并发-concurrency&quot;&gt;&lt;a href=&quot;#为什么要讨论并发-concurrency&quot; class=&quot;headerlink&quot; title=&quot;为什么要讨论并发 (concurrency)&quot;&gt;&lt;/a&gt;为什么要讨论并发 (concurrency)&lt;/h3&gt;&lt;p&gt;观察一下我们周围，能发现什么？&lt;/p&gt;
&lt;p&gt;我们的世界里发生的事情，总是一步一步按顺序执行的吗？&lt;/p&gt;
&lt;p&gt;或者说，发生在我们身边的所有的事件，是一个很复杂的组合体，里面充满了更独立、更小型的事件单元，这些单元之间，则是有各种各样的交互和组织关系。&lt;/p&gt;
&lt;p&gt;其实就像后者描述的这样，顺序处理 (Sequential processing) 并不是完美的建模思路。&lt;/p&gt;
&lt;h3 id=&quot;什么是并发？&quot;&gt;&lt;a href=&quot;#什么是并发？&quot; class=&quot;headerlink&quot; title=&quot;什么是并发？&quot;&gt;&lt;/a&gt;什么是并发？&lt;/h3&gt;&lt;p&gt;并发是独立的计算任务的组合。&lt;/p&gt;
&lt;p&gt;并发是一种软件的设计模式，用并发的思维模式，可以编写出更清晰的代码。&lt;/p&gt;
&lt;h3 id=&quot;并发-concurrency-不是并行-parallelism&quot;&gt;&lt;a href=&quot;#并发-concurrency-不是并行-parallelism&quot; class=&quot;headerlink&quot; title=&quot;并发 (concurrency) 不是并行 (parallelism)&quot;&gt;&lt;/a&gt;并发 (concurrency) 不是并行 (parallelism)&lt;/h3&gt;&lt;p&gt;并发不是并行，但是可以在并行的基础上形成并发。&lt;/p&gt;
&lt;p&gt;如果只有一个单核处理器(单线程模式)，则谈不上并行，但是仍然可以写出并发的代码。&lt;/p&gt;
&lt;p&gt;另一方面，如果一段代码已经按照并发的思路进行了设计，那它也是可以很容易的在多核处理器(多线程模式)中并行执行。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;关于这个话题，更详细的讨论可以参看 &lt;a href=&quot;http://talks.golang.org/2012/waza.slide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Concurrency is not Parallelism&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;什么是好的代码架构&quot;&gt;&lt;a href=&quot;#什么是好的代码架构&quot; class=&quot;headerlink&quot; title=&quot;什么是好的代码架构&quot;&gt;&lt;/a&gt;什么是好的代码架构&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;要容易理解&lt;/li&gt;
&lt;li&gt;要容易使用&lt;/li&gt;
&lt;li&gt;要容易描述出设计意图&lt;/li&gt;
&lt;li&gt;不需要人人都是专家 (不应该总是出现大量threads，semaphores，locks，barriers等等高深的话题)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;CSP-的历史&quot;&gt;&lt;a href=&quot;#CSP-的历史&quot; class=&quot;headerlink&quot; title=&quot;CSP 的历史&quot;&gt;&lt;/a&gt;CSP 的历史&lt;/h3&gt;&lt;p&gt;CSP 并不是新技术，Communicating Sequential Processes 是 Tony Hoare 在 1978 年就提出来的概念，甚至在更早的 1975 年，Edsger Dijkstra 的 Guarded Command Language 里面，也能看到 CSP 的影子。&lt;/p&gt;
&lt;p&gt;还有其他的一些语言，也有类似的并发模型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Occam (May, 1983)&lt;/li&gt;
&lt;li&gt;Erlang (Armstrong, 1986)&lt;/li&gt;
&lt;li&gt;Newsqueak (Pike, 1988)&lt;/li&gt;
&lt;li&gt;Concurrent ML (Reppy, 1993)&lt;/li&gt;
&lt;li&gt;Alef (Winterbottom, 1995)&lt;/li&gt;
&lt;li&gt;Limbo (Dorward, Pike, Winterbottom, 1996).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Venice-Golang-和-Erlang-的差异&quot;&gt;&lt;a href=&quot;#Venice-Golang-和-Erlang-的差异&quot; class=&quot;headerlink&quot; title=&quot;Venice / Golang 和 Erlang 的差异&quot;&gt;&lt;/a&gt;Venice / Golang 和 Erlang 的差异&lt;/h3&gt;&lt;p&gt;Venice / Golang 通过 channels 来实现 CSP。&lt;/p&gt;
&lt;p&gt;Erlang 是最接近于原始的 CSP 定义的，通过 name 进行通信，而非 channel。&lt;/p&gt;
&lt;p&gt;它们的模型其实是一致的，只不过具体的表现形式有差异。&lt;/p&gt;
&lt;p&gt;粗略来看相当于：writing to a file by name (process, Erlang) vs. writing to a file descriptor (channel, Venice / Golang).&lt;/p&gt;
&lt;h3 id=&quot;CSP-的基本使用&quot;&gt;&lt;a href=&quot;#CSP-的基本使用&quot; class=&quot;headerlink&quot; title=&quot;CSP 的基本使用&quot;&gt;&lt;/a&gt;CSP 的基本使用&lt;/h3&gt;&lt;p&gt;这篇文章最主要的目的是讨论并发模式，为了避免陷入编程语言本身的各种细节，我们只会使用到 Swift 很少的语法特性。&lt;/p&gt;
&lt;h4 id=&quot;从下面这个简单的-boring-函数开始&quot;&gt;&lt;a href=&quot;#从下面这个简单的-boring-函数开始&quot; class=&quot;headerlink&quot; title=&quot;从下面这个简单的 boring 函数开始&quot;&gt;&lt;/a&gt;从下面这个简单的 boring 函数开始&lt;/h4&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;boring&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg: String)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;...&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(msg)&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;\(i)&lt;/span&gt;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        usleep(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run01&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    boring(&lt;span class=&quot;string&quot;&gt;&quot;this is a boring func&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;很容易想象到，这段代码的执行结果会是下买这个样子&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;this is a boring func 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this is a boring func 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this is a boring func 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this is a boring func 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this is a boring func 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this is a boring func 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this is a boring func 6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this is a boring func 7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this is a boring func 8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this is a boring func 9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this is a boring func 10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;稍微改动一下&quot;&gt;&lt;a href=&quot;#稍微改动一下&quot; class=&quot;headerlink&quot; title=&quot;稍微改动一下&quot;&gt;&lt;/a&gt;稍微改动一下&lt;/h4&gt;&lt;p&gt;增加一点随机的延时，让 message 出现的时机不可预测 (延迟时间仍然控制在1秒之内)。并且让 boring 函数一直循环运行。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;boring&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg: String)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(msg)&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;\(i)&lt;/span&gt;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        usleep(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; * (arc4random_uniform(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run02&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    boring(&lt;span class=&quot;string&quot;&gt;&quot;this is a less boring func&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;进入正题&quot;&gt;&lt;a href=&quot;#进入正题&quot; class=&quot;headerlink&quot; title=&quot;进入正题&quot;&gt;&lt;/a&gt;进入正题&lt;/h4&gt;&lt;p&gt;Venice 的 co 函数，传入的参数是一个函数，在 co 的内部会执行这个传入的函数，但是并不会等待这个函数执行结束，对于 co 的调用者来说，co 函数本身会立刻返回。co 函数其实是开启了一个新的协程 (轻量级线程) 来真正的执行传入的函数。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Venice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;boring&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg: String)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(msg)&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;\(i)&lt;/span&gt;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nap(&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;(arc4random_uniform(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).milliseconds)&lt;span class=&quot;comment&quot;&gt;//sleep&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run03&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        boring(&lt;span class=&quot;string&quot;&gt;&quot;co a less boring func&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //if do not want run03() finish, run the loop below&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for i in 0..&amp;lt;Int.max &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        yield&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;run03() will return&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面这段代码的运行结果如下&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;co a less boring func 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;run03() will return&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到，boring函数里面的循环只执行了一次，这是因为 co 函数是立刻返回的，紧接着，run03() 执行完 print 后也立刻返回，然后 run03() 的调用者 main 函数也就执行结束了 (进程结束)，之前 co 启动的协程自然也就无法继续执行了。&lt;/p&gt;
&lt;p&gt;如果想让 co 里面的协程一直运行下去，可以在 co 调用返回后，执行代码中的那段 for loop。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;要注意的一点是，for loop 里面调用的 yield，是 Venice 引入的一种操作，意思是让出 CPU 给其他的协程。Golang 是不需要手动进行这种调用的，runtime 会自动的进行调度。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;在 Venice 里面，如果是在 channel 上进行读写操作，读写的同时已经相当于调用过 yield 了，所以也不需要使用者再次显式的调用 yield。在后面的例子的，就会看到这种不需要手动调用 yield 的场景。&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&quot;继续改动代码&quot;&gt;&lt;a href=&quot;#继续改动代码&quot; class=&quot;headerlink&quot; title=&quot;继续改动代码&quot;&gt;&lt;/a&gt;继续改动代码&lt;/h4&gt;&lt;p&gt;调整代码成下面这个样子，在 co 调用后，让 run04() 所在的协程 sleep 一小段时间。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Venice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;boring&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg: String)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(msg)&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;\(i)&lt;/span&gt;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nap(&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;(arc4random_uniform(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).milliseconds)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run04&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co(boring(&lt;span class=&quot;string&quot;&gt;&quot;co a less boring func&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;I&#39;m listening&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nap(&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.second)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;You&#39;re boring; I&#39;m leaving.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段代码的执行结果是下面这个样子的&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;co a less boring func 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I&amp;apos;m listening&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;co a less boring func 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;co a less boring func 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;co a less boring func 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;co a less boring func 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You&amp;apos;re boring; I&amp;apos;m leaving.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;nap()是Venice提供的sleep函数，它的内部，相当于调用了yield。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;当main函数结束的时候，boring函数所在的协程也会结束。&lt;/p&gt;
&lt;h4 id=&quot;协程-coroutine&quot;&gt;&lt;a href=&quot;#协程-coroutine&quot; class=&quot;headerlink&quot; title=&quot;协程 (coroutine)&quot;&gt;&lt;/a&gt;协程 (coroutine)&lt;/h4&gt;&lt;p&gt;协程是一段独立运行的代码集合，通过 co 函数来启动。&lt;/p&gt;
&lt;p&gt;协程的系统开销是很小的 (比 thread 小很多)，可以同时存在大量的协程 (具体到 Venice 底层使用的 &lt;a href=&quot;http://libmill.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;libmill&lt;/a&gt;，可以同时运行 &lt;strong&gt;2000万个&lt;/strong&gt; 协程，并且每秒可以进行 &lt;strong&gt;5000万次&lt;/strong&gt; 协程上下文切换)。&lt;/p&gt;
&lt;p&gt;协程不是线程。&lt;/p&gt;
&lt;p&gt;一个程序里面，可以只运行一个线程，但是在这个线程里面，可以包含千万个协程。&lt;/p&gt;
&lt;p&gt;可以把协程看成是轻量级的线程。&lt;/p&gt;
&lt;h4 id=&quot;通讯-communication&quot;&gt;&lt;a href=&quot;#通讯-communication&quot; class=&quot;headerlink&quot; title=&quot;通讯 (communication)&quot;&gt;&lt;/a&gt;通讯 (communication)&lt;/h4&gt;&lt;p&gt;在 run04() 里面，是不能看到在协程中运行的 boring 函数的运行结果的。&lt;/p&gt;
&lt;p&gt;boring 函数仅仅是把 msg 打印到了终端上。&lt;/p&gt;
&lt;p&gt;想在协程之间真正的传递数据，需要用到通讯 (communication)。&lt;/p&gt;
&lt;h4 id=&quot;Channel&quot;&gt;&lt;a href=&quot;#Channel&quot; class=&quot;headerlink&quot; title=&quot;Channel&quot;&gt;&lt;/a&gt;Channel&lt;/h4&gt;&lt;p&gt;在 Venice 里面，两个协程之间，通过 Channel 进行通讯。&lt;/p&gt;
&lt;p&gt;Channel 的基本操作就是下面这3个:&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//声明、初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; channel = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//在channel上发送数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;channel.send(&lt;span class=&quot;string&quot;&gt;&quot;ping&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//在channel上接收数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; message = channel.receive()!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;使用-Channel&quot;&gt;&lt;a href=&quot;#使用-Channel&quot; class=&quot;headerlink&quot; title=&quot;使用 Channel&quot;&gt;&lt;/a&gt;使用 Channel&lt;/h4&gt;&lt;p&gt;用 channel 连接 boring 函数和 run05 函数&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Venice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;boring&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg msg: String, channel: SendingChannel&amp;lt;String&amp;gt; )&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        channel.send(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(msg)&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;\(i)&lt;/span&gt;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nap(&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;(arc4random_uniform(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).milliseconds)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run05&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; channel = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        boring(msg: &lt;span class=&quot;string&quot;&gt;&quot;co a less boring func&quot;&lt;/span&gt;, channel: channel.sendingChannel)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;You say: &lt;span class=&quot;subst&quot;&gt;\(channel.receivingChannel.receive()&lt;/span&gt;!)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;You&#39;re boring; I&#39;m leaving.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    channel.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行结果如下&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;You say: co a less boring func 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You say: co a less boring func 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You say: co a less boring func 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You say: co a less boring func 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You say: co a less boring func 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You&amp;apos;re boring; I&amp;apos;m leaving.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;同步-Synchronization&quot;&gt;&lt;a href=&quot;#同步-Synchronization&quot; class=&quot;headerlink&quot; title=&quot;同步 (Synchronization)&quot;&gt;&lt;/a&gt;同步 (Synchronization)&lt;/h4&gt;&lt;p&gt;在 channel 上的读、写操作，是同步的、阻塞的。&lt;/p&gt;
&lt;p&gt;run05() 执行到 channel.receivingChannel.receive()! 的时候，只有当 channel 里面有数据被写入的时候，这个读操作才会返回 (读到数据的时候才返回)，否则 run05() 就会一直在这里等待，不会继续往下执行。&lt;/p&gt;
&lt;p&gt;同样的，在 boring 函数里面，执行 channel.send(“(msg) (i)”) 这个写操作的时候，只有当 channel 里面为空的时候，数据才能被写到 channel 里面，channel.send(“(msg) (i)”) 才会返回，否则，send 操作也会阻塞在这里。&lt;/p&gt;
&lt;p&gt;在通讯过程中，发送者和接收者，必须都分别完成他们的写和读动作，否则双方就会一直互相等待下去 (死锁)。&lt;/p&gt;
&lt;p&gt;channel 在协程之间完成通讯的同时，也达到了同步的目的。&lt;/p&gt;
&lt;h4 id=&quot;带缓冲的-channel&quot;&gt;&lt;a href=&quot;#带缓冲的-channel&quot; class=&quot;headerlink&quot; title=&quot;带缓冲的 channel&quot;&gt;&lt;/a&gt;带缓冲的 channel&lt;/h4&gt;&lt;p&gt;可以创建具有 buffer 的 channel。&lt;/p&gt;
&lt;p&gt;这种 channel，当 buffer 还没有写满的时候，是没有前面描述的那种同步特性的。&lt;/p&gt;
&lt;p&gt;buffering 有点类似 Erlang 语言里面的 mailboxes。&lt;/p&gt;
&lt;p&gt;没有特殊理由的时候，不应该使用 buffered channel。&lt;/p&gt;
&lt;p&gt;这篇文章后续的讨论，都不会使用 buffer。&lt;/p&gt;
&lt;h4 id=&quot;Golang-哲学&quot;&gt;&lt;a href=&quot;#Golang-哲学&quot; class=&quot;headerlink&quot; title=&quot;Golang 哲学&quot;&gt;&lt;/a&gt;Golang 哲学&lt;/h4&gt;&lt;p&gt;Don’t communicate by sharing memory, share memory by communicating.&lt;/p&gt;
&lt;h3 id=&quot;模式-Patterns&quot;&gt;&lt;a href=&quot;#模式-Patterns&quot; class=&quot;headerlink&quot; title=&quot;模式 (Patterns)&quot;&gt;&lt;/a&gt;模式 (Patterns)&lt;/h3&gt;&lt;h4 id=&quot;Generator-模式：通过函数返回一个-channel-给调用者&quot;&gt;&lt;a href=&quot;#Generator-模式：通过函数返回一个-channel-给调用者&quot; class=&quot;headerlink&quot; title=&quot;Generator 模式：通过函数返回一个 channel 给调用者&quot;&gt;&lt;/a&gt;Generator 模式：通过函数返回一个 channel 给调用者&lt;/h4&gt;&lt;p&gt;Channel 是一等公民，和 class、struct、closure 同等重要。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Venice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;boring&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg: String)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;ReceivingChannel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; channel = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            channel.send(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(msg)&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;\(i)&lt;/span&gt;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nap(&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;(arc4random_uniform(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).milliseconds)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; channel.receivingChannel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run06&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; receivingChannel = boring(&lt;span class=&quot;string&quot;&gt;&quot;co a less boring func&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;You say: &lt;span class=&quot;subst&quot;&gt;\(receivingChannel.receive()&lt;/span&gt;!)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;You&#39;re boring; I&#39;m leaving.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段代码和前面的代码的运行结果，没有什么差别&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;You say: co a less boring func 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You say: co a less boring func 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You say: co a less boring func 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You say: co a less boring func 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You say: co a less boring func 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You&amp;apos;re boring; I&amp;apos;m leaving.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是代码本身确有明显的变化，boring 函数返回一个 channel 给调用者，同时，在 boring 函数内部，通过 co 启动一个新的协程做具体的业务，并且通过刚才创建的 channel 把结果发送出去。&lt;/p&gt;
&lt;h4 id=&quot;利用-channel-作为-service-的接口&quot;&gt;&lt;a href=&quot;#利用-channel-作为-service-的接口&quot; class=&quot;headerlink&quot; title=&quot;利用 channel 作为 service 的接口&quot;&gt;&lt;/a&gt;利用 channel 作为 service 的接口&lt;/h4&gt;&lt;p&gt;boring 函数对外提供了一个 service，这个 service 运行在独立的协程里面，并且通过channel 把数据传递给 service 的使用者。&lt;/p&gt;
&lt;p&gt;可以同时使用多个 service。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Venice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;boring&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg: String)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;ReceivingChannel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; channel = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; sleepTime = &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;(arc4random_uniform(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).milliseconds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            channel.send(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(msg)&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;\(i)&lt;/span&gt;  (will sleep &lt;span class=&quot;subst&quot;&gt;\(Int(sleepTime * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;) ms)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nap(&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;: sleepTime)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; channel.receivingChannel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run07&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; joe = boring(&lt;span class=&quot;string&quot;&gt;&quot;Joe&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; ann = boring(&lt;span class=&quot;string&quot;&gt;&quot;Ann&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(joe.receive()&lt;/span&gt;!)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(ann.receive()&lt;/span&gt;!)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;You&#39;re both boring; I&#39;m leaving.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行结果如下&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Joe 0  (will sleep 996 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ann 0  (will sleep 681 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 1  (will sleep 173 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ann 1  (will sleep 147 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 2  (will sleep 750 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ann 2  (will sleep 374 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 3  (will sleep 318 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ann 3  (will sleep 705 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 4  (will sleep 126 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ann 4  (will sleep 828 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You&amp;apos;re both boring; I&amp;apos;m leaving.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;多路复用-Multiplexing&quot;&gt;&lt;a href=&quot;#多路复用-Multiplexing&quot; class=&quot;headerlink&quot; title=&quot;多路复用 (Multiplexing)&quot;&gt;&lt;/a&gt;多路复用 (Multiplexing)&lt;/h4&gt;&lt;p&gt;前面 run07() 里面的代码，始终都是先从 joe 里面读取数据，然后再从 ann 里面读取。如果 ann 里面的数据早于 joe 里面的数据就发送了，由于 channel 的同步特性，ann channel 其实会阻塞在它的 send 操作上，直到 run07 从 joe 里面读取完数据后，ann 所在的协程才能继续运行。&lt;/p&gt;
&lt;p&gt;为了改善这种情况，可以使用 fan-in 模式。不管是 joe 还是 ann，只要有数据准备好并且执行了 send 操作，都可以立刻读取到。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Venice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;boring&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg: String)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;ReceivingChannel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; channel = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; sleepTime = &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;(arc4random_uniform(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).milliseconds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            channel.send(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(msg)&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;\(i)&lt;/span&gt;  (will sleep &lt;span class=&quot;subst&quot;&gt;\(Int(sleepTime * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;) ms)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nap(&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;: sleepTime)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; channel.receivingChannel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fanIn&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(input1 input1: ReceivingChannel&amp;lt;String&amp;gt;, input2: ReceivingChannel&amp;lt;String&amp;gt;)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;ReceivingChannel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; channel = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            channel.send(input1.receive()!)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            channel.send(input2.receive()!)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; channel.receivingChannel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run08&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; joe = boring(&lt;span class=&quot;string&quot;&gt;&quot;Joe&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; ann = boring(&lt;span class=&quot;string&quot;&gt;&quot;Ann&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt; = fanIn(input1: joe, input2: ann)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(&lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt;.receive()&lt;/span&gt;!)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;You&#39;re both boring; I&#39;m leaving.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行结果如下&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Joe 0  (will sleep 75 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ann 0  (will sleep 473 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 1  (will sleep 57 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 2  (will sleep 219 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 3  (will sleep 20 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 4  (will sleep 723 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ann 1  (will sleep 712 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 5  (will sleep 377 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ann 2  (will sleep 431 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 6  (will sleep 228 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You&amp;apos;re both boring; I&amp;apos;m leaving.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;回复消息-Restoring-sequencing&quot;&gt;&lt;a href=&quot;#回复消息-Restoring-sequencing&quot; class=&quot;headerlink&quot; title=&quot;回复消息 (Restoring sequencing)&quot;&gt;&lt;/a&gt;回复消息 (Restoring sequencing)&lt;/h4&gt;&lt;p&gt;前面 run08 里面的 fan-in 模式，boring 函数只负责 send 消息，并不需要消息的接收者做一个答复。如果需要，可以像下面这样修改代码&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Venice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Message&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; str: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; wait: &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; waitForIt = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt;&amp;gt;() &lt;span class=&quot;comment&quot;&gt;// Shared between all messages&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;boring&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg: String)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;ReceivingChannel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Message&lt;/span&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; channel = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Message&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; sleepTime = &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;(arc4random_uniform(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).milliseconds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; message = &lt;span class=&quot;type&quot;&gt;Message&lt;/span&gt;(str: &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(msg)&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;\(i)&lt;/span&gt;  (will sleep &lt;span class=&quot;subst&quot;&gt;\(Int(sleepTime * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;) ms)&quot;&lt;/span&gt;, wait: waitForIt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            channel.send(message)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nap(&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;: sleepTime)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            waitForIt.receive()!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; channel.receivingChannel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fanIn&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(input1 input1: ReceivingChannel&amp;lt;Message&amp;gt;, input2: ReceivingChannel&amp;lt;Message&amp;gt;)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;ReceivingChannel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Message&lt;/span&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; channel = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Message&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            channel.send(input1.receive()!)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            channel.send(input2.receive()!)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; channel.receivingChannel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run09&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; joe = boring(&lt;span class=&quot;string&quot;&gt;&quot;Joe&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; ann = boring(&lt;span class=&quot;string&quot;&gt;&quot;Ann&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt; = fanIn(input1: joe, input2: ann)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; message1 = &lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt;.receive()!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(message1.str)&lt;/span&gt;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        message1.wait.send(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; message2 = &lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt;.receive()!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(message2.str)&lt;/span&gt;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        message2.wait.send(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;You&#39;re both boring; I&#39;m leaving.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行结果会是下面这个样子，并没有明显的区别&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Joe 0  (will sleep 551 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ann 0  (will sleep 53 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ann 1  (will sleep 543 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 1  (will sleep 412 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ann 2  (will sleep 847 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 2  (will sleep 46 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 3  (will sleep 274 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 4  (will sleep 69 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 5  (will sleep 202 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ann 3  (will sleep 962 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You&amp;apos;re both boring; I&amp;apos;m leaving.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Select&quot;&gt;&lt;a href=&quot;#Select&quot; class=&quot;headerlink&quot; title=&quot;Select&quot;&gt;&lt;/a&gt;Select&lt;/h4&gt;&lt;p&gt;前面介绍的多路复用技术，是通过启动多个协程实现的，每个 channel 对应一个协程。&lt;/p&gt;
&lt;p&gt;另一种更常用的办法，是使用 select 操作，在一个协程里面同时读写多个 channel。&lt;/p&gt;
&lt;p&gt;可以用 select 操作重新实现一遍 fan-in 模式&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Venice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;boring&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg: String)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;ReceivingChannel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; channel = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; sleepTime = &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;(arc4random_uniform(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).milliseconds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            channel.send(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(msg)&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;\(i)&lt;/span&gt;  (will sleep &lt;span class=&quot;subst&quot;&gt;\(Int(sleepTime * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;) ms)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nap(&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;: sleepTime)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; channel.receivingChannel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fanIn&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(input1 input1: ReceivingChannel&amp;lt;String&amp;gt;, input2: ReceivingChannel&amp;lt;String&amp;gt;)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;ReceivingChannel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; channel = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            select &amp;#123; when &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                when.receive(from: input1) &amp;#123; value &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//print(&quot;received \(value)&quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    channel.send(value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                when.receive(from: input2) &amp;#123; value &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    channel.send(value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                when.otherwise &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//print(&quot;default case&quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; channel.receivingChannel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run10&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; joe = boring(&lt;span class=&quot;string&quot;&gt;&quot;Joe&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; ann = boring(&lt;span class=&quot;string&quot;&gt;&quot;Ann&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt; = fanIn(input1: joe, input2: ann)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(&lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt;.receive()&lt;/span&gt;!)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;You&#39;re both boring; I&#39;m leaving.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行结果和之前的 fan-in 没有区别&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Ann 0  (will sleep 816 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 0  (will sleep 252 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 1  (will sleep 756 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ann 1  (will sleep 879 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 2  (will sleep 157 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 3  (will sleep 578 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ann 2  (will sleep 700 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 4  (will sleep 499 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 5  (will sleep 352 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ann 3  (will sleep 642 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You&amp;apos;re both boring; I&amp;apos;m leaving.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;这里用的 select 操作，和 Linux / Unix 里面的 select、poll、epoll，都是类似的，只不过前者监听的是 channel，后者监听的是 fd&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&quot;在-Select-的基础上实现超时机制-Timeout&quot;&gt;&lt;a href=&quot;#在-Select-的基础上实现超时机制-Timeout&quot; class=&quot;headerlink&quot; title=&quot;在 Select 的基础上实现超时机制 (Timeout)&quot;&gt;&lt;/a&gt;在 Select 的基础上实现超时机制 (Timeout)&lt;/h4&gt;&lt;p&gt;定时器是基于 channel 实现出来的，当达到定时时间的时候，定时器 channel 上会发送一个消息。&lt;/p&gt;
&lt;p&gt;定时器可以放在 select 操作的里面&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Venice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;boring&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg: String)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;ReceivingChannel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; channel = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; sleepTime = &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;(arc4random_uniform(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).milliseconds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nap(&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;: sleepTime)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            channel.send(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(msg)&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;\(i)&lt;/span&gt;  (will sleep &lt;span class=&quot;subst&quot;&gt;\(Int(sleepTime * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;) ms)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; channel.receivingChannel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run11&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; joe = boring(&lt;span class=&quot;string&quot;&gt;&quot;Joe&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; done = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; !done &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        select &amp;#123; when &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            when.receive(from: joe) &amp;#123; value &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(value)&lt;/span&gt;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            when.timeout(&lt;span class=&quot;number&quot;&gt;800&lt;/span&gt;.millisecond.fromNow()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;You are too slow.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                done = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;You&#39;re boring; I&#39;m leaving.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行结果是下面这个样子&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Joe 0  (will sleep 48 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 1  (will sleep 706 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 2  (will sleep 747 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 3  (will sleep 304 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You are too slow.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You&amp;apos;re boring; I&amp;apos;m leaving.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Select-操作的整体超时&quot;&gt;&lt;a href=&quot;#Select-操作的整体超时&quot; class=&quot;headerlink&quot; title=&quot;Select 操作的整体超时&quot;&gt;&lt;/a&gt;Select 操作的整体超时&lt;/h4&gt;&lt;p&gt;前面的 run11，是在每次进入 select 的时候，设置了一个超时 channel。&lt;/p&gt;
&lt;p&gt;也可以在 while 循环的外面，设置一个整体的超时 channel，像下面这样&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Venice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;boring&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg: String)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;ReceivingChannel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; channel = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; sleepTime = &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;(arc4random_uniform(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).milliseconds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nap(&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;: sleepTime)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            channel.send(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(msg)&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;\(i)&lt;/span&gt;  (will sleep &lt;span class=&quot;subst&quot;&gt;\(Int(sleepTime * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;) ms)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; channel.receivingChannel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run12&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; joe = boring(&lt;span class=&quot;string&quot;&gt;&quot;Joe&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; timeout = &lt;span class=&quot;type&quot;&gt;Timer&lt;/span&gt;(timingOut: &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;.second.fromNow()).channel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; done = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; !done &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        select &amp;#123; when &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            when.receive(from: joe) &amp;#123; value &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(value)&lt;/span&gt;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            when.receive(from: timeout) &amp;#123; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;You are too slow.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                done = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;You&#39;re boring; I&#39;m leaving.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行结果如下&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Joe 0  (will sleep 586 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 1  (will sleep 226 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 2  (will sleep 297 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 3  (will sleep 850 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 4  (will sleep 442 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 5  (will sleep 525 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 6  (will sleep 730 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 7  (will sleep 227 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 8  (will sleep 630 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe 9  (will sleep 411 ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You are too slow.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You&amp;apos;re boring; I&amp;apos;m leaving.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;取消-quit-channel&quot;&gt;&lt;a href=&quot;#取消-quit-channel&quot; class=&quot;headerlink&quot; title=&quot;取消 (quit channel)&quot;&gt;&lt;/a&gt;取消 (quit channel)&lt;/h4&gt;&lt;p&gt;boring 函数的调用者，可以主动的让 boring 内部的协程停止工作，也是通过 channel 来实现。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Venice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;boring&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg msg: String, quit: ReceivingChannel&amp;lt;Bool&amp;gt;)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;ReceivingChannel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; channel = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        forSelect &amp;#123; when, done &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; sleepTime = &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;(arc4random_uniform(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).milliseconds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nap(&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;: sleepTime)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            when.send(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(msg)&lt;/span&gt;, and will sleep &lt;span class=&quot;subst&quot;&gt;\(Int(sleepTime * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;) ms&quot;&lt;/span&gt;, to: channel) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//print(&quot;sent value&quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            when.receive(from: quit) &amp;#123; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                done()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        channel.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; channel.receivingChannel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run13&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; quit = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; joe = boring(msg: &lt;span class=&quot;string&quot;&gt;&quot;Joe&quot;&lt;/span&gt;, quit: quit.receivingChannel)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;type&quot;&gt;Int64&lt;/span&gt;(arc4random_uniform(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(joe.receive()&lt;/span&gt;!)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    quit.send(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;You&#39;re boring; I&#39;m leaving.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行结果仍然是类似的&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Joe, and will sleep 154 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe, and will sleep 390 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe, and will sleep 133 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe, and will sleep 520 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe, and will sleep 752 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe, and will sleep 482 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe, and will sleep 47 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe, and will sleep 359 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You&amp;apos;re boring; I&amp;apos;m leaving.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;在-quit-channel-上接收消息&quot;&gt;&lt;a href=&quot;#在-quit-channel-上接收消息&quot; class=&quot;headerlink&quot; title=&quot;在 quit channel 上接收消息&quot;&gt;&lt;/a&gt;在 quit channel 上接收消息&lt;/h4&gt;&lt;p&gt;接着上面的例子，当 run13 向 quit channel 发送 true 的时候，run13 怎样才能知道 boring 函数成功的结束了自己的运行呢？让 boring 告诉它的调用者就行，同样，还是通过 quit channel。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Venice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;cleanup&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Here, do clean up&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;boring&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg msg: String, quit: Channel&amp;lt;String&amp;gt;)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;ReceivingChannel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; channel = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        forSelect &amp;#123; when, done &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; sleepTime = &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;(arc4random_uniform(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).milliseconds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nap(&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;: sleepTime)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            when.send(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(msg)&lt;/span&gt;, and will sleep &lt;span class=&quot;subst&quot;&gt;\(Int(sleepTime * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;) ms&quot;&lt;/span&gt;, to: channel) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//print(&quot;sent value&quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            when.receive(from: quit) &amp;#123; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                cleanup()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                quit.send(&lt;span class=&quot;string&quot;&gt;&quot;See you!&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                done()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        channel.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; channel.receivingChannel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run14&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; quit = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; joe = boring(msg: &lt;span class=&quot;string&quot;&gt;&quot;Joe&quot;&lt;/span&gt;, quit: quit)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;type&quot;&gt;Int64&lt;/span&gt;(arc4random_uniform(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(joe.receive()&lt;/span&gt;!)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    quit.send(&lt;span class=&quot;string&quot;&gt;&quot;Bye&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Joe says: &lt;span class=&quot;subst&quot;&gt;\(quit.receive()&lt;/span&gt;!)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;You&#39;re boring; I&#39;m leaving.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在运行结果会变成下面这个样子&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Joe, and will sleep 220 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe, and will sleep 736 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe, and will sleep 308 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe, and will sleep 858 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe, and will sleep 527 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe, and will sleep 163 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe, and will sleep 844 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Here, do clean up&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Joe says: See you!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You&amp;apos;re boring; I&amp;apos;m leaving.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Daisy-chain&quot;&gt;&lt;a href=&quot;#Daisy-chain&quot; class=&quot;headerlink&quot; title=&quot;Daisy-chain&quot;&gt;&lt;/a&gt;Daisy-chain&lt;/h4&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Venice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;: Channel&amp;lt;Int&amp;gt;, &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;: Channel&amp;lt;Int&amp;gt;)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;.send(&lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;.receive()! + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run15&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; leftMost = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt; = leftMost&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt; = leftMost&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            f(&lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;.send(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Joe says: &lt;span class=&quot;subst&quot;&gt;\(leftMost.receive()&lt;/span&gt;!)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;You&#39;re boring; I&#39;m leaving.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行结果如下&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Joe says: 10001&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You&amp;apos;re boring; I&amp;apos;m leaving.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;系统软件-Systems-Software&quot;&gt;&lt;a href=&quot;#系统软件-Systems-Software&quot; class=&quot;headerlink&quot; title=&quot;系统软件 (Systems Software)&quot;&gt;&lt;/a&gt;系统软件 (Systems Software)&lt;/h3&gt;&lt;p&gt;让我们具体看一下 CSP 这种并发模型，是如何用在系统软件的开发中的。&lt;/p&gt;
&lt;h4 id=&quot;例子：Google-Search&quot;&gt;&lt;a href=&quot;#例子：Google-Search&quot; class=&quot;headerlink&quot; title=&quot;例子：Google Search&quot;&gt;&lt;/a&gt;例子：Google Search&lt;/h4&gt;&lt;p&gt;问: Google search 需要做什么事情?&lt;/p&gt;
&lt;p&gt;答: 输入一个搜索关键字 (query)，得到一组搜索结果 (和一些广告)。&lt;/p&gt;
&lt;p&gt;问: 怎样获取这样的一组搜索结果？&lt;/p&gt;
&lt;p&gt;答: 把搜索关键字分别发送给 Web search service，Image search service，YouTube search service，Maps search service，News search service 等等，然后把它们返回的结果再组合到一起。&lt;/p&gt;
&lt;p&gt;那么，怎样做呢？&lt;/p&gt;
&lt;h4 id=&quot;模拟各种-search-service&quot;&gt;&lt;a href=&quot;#模拟各种-search-service&quot; class=&quot;headerlink&quot; title=&quot;模拟各种 search service&quot;&gt;&lt;/a&gt;模拟各种 search service&lt;/h4&gt;&lt;p&gt;模拟 3 个 search service，每次执行 search 的时候，随机延时一小段时间。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Venice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;typealias&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;internal&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fakeSearch&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(kind: String)&lt;/span&gt;&lt;/span&gt; -&amp;gt; (&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;) -&amp;gt; &lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(query: String)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; sleepTime = &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;(arc4random_uniform(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).milliseconds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//print(&quot;--&amp;gt;\(kind) search use time: \(Int(sleepTime * 1000)) ms&quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nap(&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;: sleepTime)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(kind)&lt;/span&gt; result for &lt;span class=&quot;subst&quot;&gt;\(query)&lt;/span&gt;, use time: &lt;span class=&quot;subst&quot;&gt;\(Int(sleepTime * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;) ms&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; search&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; web = fakeSearch(&lt;span class=&quot;string&quot;&gt;&quot;web&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; image = fakeSearch(&lt;span class=&quot;string&quot;&gt;&quot;image&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; video = fakeSearch(&lt;span class=&quot;string&quot;&gt;&quot;video&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//some util&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;internal&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(desc: String, function: &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;-&amp;gt;()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; start : &lt;span class=&quot;type&quot;&gt;UInt64&lt;/span&gt; = mach_absolute_time()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    function()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; duration : &lt;span class=&quot;type&quot;&gt;UInt64&lt;/span&gt; = mach_absolute_time() - start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; info : mach_timebase_info = mach_timebase_info(numer: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, denom: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mach_timebase_info(&amp;amp;info)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; total = (duration * &lt;span class=&quot;type&quot;&gt;UInt64&lt;/span&gt;(info.numer) / &lt;span class=&quot;type&quot;&gt;UInt64&lt;/span&gt;(info.denom)) / &lt;span class=&quot;type&quot;&gt;NSEC_PER_MSEC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(desc)&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;\(total)&lt;/span&gt; ms.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protocol&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GoogleSearchResultDebugAble&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GoogleSearchResult&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;GoogleSearchResultDebugAble&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;  &lt;span class=&quot;subst&quot;&gt;\(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;)&lt;/span&gt;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;internal&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Array&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Element&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;GoogleSearchResultDebugAble&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;internal&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;google search result is:&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; searchResult &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            searchResult.log()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Google-Search-1-0&quot;&gt;&lt;a href=&quot;#Google-Search-1-0&quot; class=&quot;headerlink&quot; title=&quot;Google Search 1.0&quot;&gt;&lt;/a&gt;Google Search 1.0&lt;/h4&gt;&lt;p&gt;google 函数有一个输入参数，返回一个数组。&lt;/p&gt;
&lt;p&gt;google 内部按照顺序依次调用 web、image、video search service，然后把它们的结果组装在一个数组内。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Venice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;google&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(query: String)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; results = &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    results.append(web(query))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    results.append(image(query))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    results.append(video(query))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; results&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run17&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result: &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt;&amp;gt;?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time(&lt;span class=&quot;string&quot;&gt;&quot;google search v1.0, use time: &quot;&lt;/span&gt;) &amp;#123; () -&amp;gt; () &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result = google(&lt;span class=&quot;string&quot;&gt;&quot;CSP&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result?.log()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行结果是下面这个样子&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;google search v1.0, use time: 1237 ms.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;google search result is:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  web result for CSP, use time: 743 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  image result for CSP, use time: 240 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  video result for CSP, use time: 243 ms&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Google-Search-2-0&quot;&gt;&lt;a href=&quot;#Google-Search-2-0&quot; class=&quot;headerlink&quot; title=&quot;Google Search 2.0&quot;&gt;&lt;/a&gt;Google Search 2.0&lt;/h4&gt;&lt;p&gt;并发调用 web、image、video search service，然后等待它们的返回结果。&lt;/p&gt;
&lt;p&gt;不使用锁机制，不使用条件状态变量，不使用 callback。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Venice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;google&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(query: String)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; channel = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co(channel.send(web(query)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co(channel.send(image(query)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co(channel.send(video(query)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; results = &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        results.append(channel.receive()!)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; results&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run18&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result: &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt;&amp;gt;?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time(&lt;span class=&quot;string&quot;&gt;&quot;google search v2.0, use time: &quot;&lt;/span&gt;) &amp;#123; () -&amp;gt; () &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result = google(&lt;span class=&quot;string&quot;&gt;&quot;CSP&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result?.log()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行结果如下&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;google search v2.0, use time: 871 ms.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;google search result is:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  image result for CSP, use time: 40 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  video result for CSP, use time: 307 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  web result for CSP, use time: 864 ms&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;很明显，并发执行的效果比顺序执行的效果好很多。&lt;/p&gt;
&lt;h4 id=&quot;Google-Search-2-1&quot;&gt;&lt;a href=&quot;#Google-Search-2-1&quot; class=&quot;headerlink&quot; title=&quot;Google Search 2.1&quot;&gt;&lt;/a&gt;Google Search 2.1&lt;/h4&gt;&lt;p&gt;还可以加上超时机制，如果某个 search service 执行的时间太长，就不等待它的返回结果。&lt;/p&gt;
&lt;p&gt;不使用锁机制，不使用条件状态变量，不使用 callback。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Venice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;google&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(query: String)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; channel = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co(channel.send(web(query)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co(channel.send(image(query)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co(channel.send(video(query)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; results = &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; timeout = &lt;span class=&quot;type&quot;&gt;Timer&lt;/span&gt;(timingOut: &lt;span class=&quot;number&quot;&gt;800&lt;/span&gt;.milliseconds.fromNow()).channel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; done = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; done == &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        select &amp;#123; when &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            when.receive(from: channel) &amp;#123; value &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                results.append(value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            when.receive(from: timeout) &amp;#123; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;timeout.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                done = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; results&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run19&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result: &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt;&amp;gt;?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time(&lt;span class=&quot;string&quot;&gt;&quot;google search v2.1, use time: &quot;&lt;/span&gt;) &amp;#123; () -&amp;gt; () &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result = google(&lt;span class=&quot;string&quot;&gt;&quot;CSP&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result?.log()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果看到下面这种形式的运行结果，则说明是触发了超时的条件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;timeout.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;google search v2.1, use time: 810 ms.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;google search result is:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  web result for CSP, use time: 341 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  video result for CSP, use time: 537 ms&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;避免超时&quot;&gt;&lt;a href=&quot;#避免超时&quot; class=&quot;headerlink&quot; title=&quot;避免超时&quot;&gt;&lt;/a&gt;避免超时&lt;/h4&gt;&lt;p&gt;问：怎样才能避免丢弃响应速度更慢的服务器返回的搜索结果？&lt;/p&gt;
&lt;p&gt;答：使用 Replicate 策略。同时向多个同类型的 search service 发送请求，使用第一个返回来的查询结果。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(query query: String, replicas: &lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;params&quot;&gt;(String)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt;)...) -&amp;gt; &lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; channel = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; search &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; replicas &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        co(channel.send(search(query)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; channel.receive()!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Google-Search-3-0&quot;&gt;&lt;a href=&quot;#Google-Search-3-0&quot; class=&quot;headerlink&quot; title=&quot;Google Search 3.0&quot;&gt;&lt;/a&gt;Google Search 3.0&lt;/h4&gt;&lt;p&gt;仍然不使用锁机制，不使用条件状态变量，不使用 callback。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Venice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; web1 = fakeSearch(&lt;span class=&quot;string&quot;&gt;&quot;web1&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; web2 = fakeSearch(&lt;span class=&quot;string&quot;&gt;&quot;web2&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; image1 = fakeSearch(&lt;span class=&quot;string&quot;&gt;&quot;image1&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; image2 = fakeSearch(&lt;span class=&quot;string&quot;&gt;&quot;image2&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; video1 = fakeSearch(&lt;span class=&quot;string&quot;&gt;&quot;video1&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; video2 = fakeSearch(&lt;span class=&quot;string&quot;&gt;&quot;video2&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(query query: String, replicas: &lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;params&quot;&gt;(String)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt;)...) -&amp;gt; &lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; channel = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; search &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; replicas &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        co(channel.send(search(query)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; channel.receive()!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;google&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(query: String)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; channel = &lt;span class=&quot;type&quot;&gt;Channel&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        channel.send(first(query: query, replicas: web1, web2))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        channel.send(first(query: query, replicas: image1, image2))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    co &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        channel.send(first(query: query, replicas: video1, video2))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; results = &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; timeout = &lt;span class=&quot;type&quot;&gt;Timer&lt;/span&gt;(timingOut: &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;.milliseconds.fromNow()).channel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; done = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; done == &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        select &amp;#123; when &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            when.receive(from: channel) &amp;#123; value &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//print(&quot;receive \(value)&quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                results.append(value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            when.receive(from: timeout) &amp;#123; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;timeout.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                done = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; results&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run20&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result: &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;GoogleSearchResult&lt;/span&gt;&amp;gt;?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time(&lt;span class=&quot;string&quot;&gt;&quot;google search v3.0, use time: &quot;&lt;/span&gt;) &amp;#123; () -&amp;gt; () &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result = google(&lt;span class=&quot;string&quot;&gt;&quot;CSP&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result?.log()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最终的运行结果如下&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;google search v3.0, use time: 506 ms.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;google search result is:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  web1 result for CSP, use time: 433 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  image1 result for CSP, use time: 434 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  video2 result for CSP, use time: 499 ms&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;不要过度使用&quot;&gt;&lt;a href=&quot;#不要过度使用&quot; class=&quot;headerlink&quot; title=&quot;不要过度使用&quot;&gt;&lt;/a&gt;不要过度使用&lt;/h3&gt;&lt;p&gt;coroutine 和 channel 是一种很好的设计思想，可以解决某些类型的问题。&lt;/p&gt;
&lt;p&gt;但是，有时我们仍然会面对一些需要用传统思路来解决的小问题，也就是基于锁机制 (共享内存)。&lt;/p&gt;
&lt;p&gt;这两种不同的技术思路，并不冲突，它们是可以共存的。&lt;/p&gt;
&lt;p&gt;正确的工具做正确的事情。&lt;/p&gt;
&lt;h3 id=&quot;后记&quot;&gt;&lt;a href=&quot;#后记&quot; class=&quot;headerlink&quot; title=&quot;后记&quot;&gt;&lt;/a&gt;后记&lt;/h3&gt;&lt;p&gt;这篇文章里面的 demo code 位于 &lt;a href=&quot;https://github.com/fengjian0106/CSP-tutorial.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/fengjian0106/CSP-tutorial.git&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;这篇文章的主要内容，是从 &lt;a href=&quot;https://talks.golang.org/2012/concurrency.slide&quot;
    
    </summary>
    
    
      <category term="Swift" scheme="http://fengjian0106.github.io/tags/Swift/"/>
    
      <category term="CSP" scheme="http://fengjian0106.github.io/tags/CSP/"/>
    
      <category term="Concurrency" scheme="http://fengjian0106.github.io/tags/Concurrency/"/>
    
  </entry>
  
  <entry>
    <title>如何实现Minuum和Fleksy输入法中的智能纠错功能</title>
    <link href="http://fengjian0106.github.io/2015/02/11/Minuum-And-Fleksy-Input-Method-Fuzzy-Matching/"/>
    <id>http://fengjian0106.github.io/2015/02/11/Minuum-And-Fleksy-Input-Method-Fuzzy-Matching/</id>
    <published>2015-02-11T02:56:30.000Z</published>
    <updated>2016-04-10T11:44:12.000Z</updated>
    
    <content type="html">&lt;p&gt;输入法的产品一直在持续技术演进，最近的一项工作，是实现了一个类似 &lt;a href=&quot;http://minuum.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Minuum&lt;/a&gt; 和 &lt;a href=&quot;http://fleksy.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Fleksy&lt;/a&gt; 这两款输入法中的模糊输入功能的单词智能纠错引擎，前后尝试过4种不同的算法思路，最终才找到适合手机的解决方案，特此记录一下。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基于贝叶斯推断的，主要线索是 &lt;a href=&quot;http://norvig.com/spell-correct.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://norvig.com/spell-correct.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;基于Levenshtein自动机的，主要线索是 &lt;a href=&quot;http://blog.notdot.net/2010/07/Damn-Cool-Algorithms-Levenshtein-Automata&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.notdot.net/2010/07/Damn-Cool-Algorithms-Levenshtein-Automata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;一种基于预处理词库的改进算法，主要线索是 &lt;a href=&quot;http://blog.faroo.com/2012/06/07/improved-edit-distance-based-spelling-correction/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.faroo.com/2012/06/07/improved-edit-distance-based-spelling-correction/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;使用机器学习中的kNN算法，主要线索是 &lt;a href=&quot;http://minuum.com/model-your-users-algorithms-behind-the-minuum-keyboard/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://minuum.com/model-your-users-algorithms-behind-the-minuum-keyboard/&lt;/a&gt; 和 &lt;a href=&quot;http://www.zhihu.com/question/27567987&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.zhihu.com/question/27567987&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;前三个方案，都是用传统的算法思路，基于&lt;a href=&quot;http://en.wikipedia.org/wiki/Levenshtein_distance&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;编辑距离&lt;/a&gt;来实现模糊匹配，但是在手机上无法满足输入法的性能需求，尤其是查询速度这一点，而且也无法做到和Minuum或Fleksy类似的纠错效果。最终的第4个方案，则是彻底更换了思路，直接用机器学习中的 &lt;a href=&quot;http://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kNN&lt;/a&gt; 算法，把字符串映射到更抽象的几何空间中，也就是所谓的特征向量，进行纯粹的数学计算。学习和研究的过程中，是直接用Python做的代码原型验证，放到github上了，有兴趣的朋友可以看看 &lt;a href=&quot;https://github.com/fengjian0106/Minuum-Fleksy-Fuzzy-Matching&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/fengjian0106/Minuum-Fleksy-Fuzzy-Matching&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;输入法的产品一直在持续技术演进，最近的一项工作，是实现了一个类似 &lt;a href=&quot;http://minuum.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Minuum&lt;/a&gt; 和 &lt;a href=&quot;http://fleksy.com/&quot; ta
    
    </summary>
    
    
      <category term="iOS" scheme="http://fengjian0106.github.io/tags/iOS/"/>
    
      <category term="keyborad" scheme="http://fengjian0106.github.io/tags/keyborad/"/>
    
      <category term="kNN" scheme="http://fengjian0106.github.io/tags/kNN/"/>
    
  </entry>
  
  <entry>
    <title>手机超声波通信</title>
    <link href="http://fengjian0106.github.io/2014/12/09/Ultrasonic-Communication/"/>
    <id>http://fengjian0106.github.io/2014/12/09/Ultrasonic-Communication/</id>
    <published>2014-12-09T03:30:11.000Z</published>
    <updated>2016-04-10T11:44:12.000Z</updated>
    
    <content type="html">&lt;p&gt;这其实是两年前的一个产品，使用场景类似于基于苹果推出的&lt;code&gt;iBeacon&lt;/code&gt;实现室内定位，利用一个小巧的超声波硬件设备，周期性的广播信标信号，手机直接使用麦克风接收这个音频信号并且解码，得到信标信号中的有效数据，最后再根据这个数据进行室内定位的算法逻辑处理。声波通信部分，是技术基础，开发难度比较大，在当时的情况下，对于产品来说，是一个技术壁垒。现在已经过去两年时间了，而且其实出于商业层面的原因，团队也早已放弃这个产品转战其他方向了，所以我还是准备把其中的一些技术细节记录下来。&lt;/p&gt;
&lt;h3 id=&quot;基于使用场景而提出的一些技术参数指标&quot;&gt;&lt;a href=&quot;#基于使用场景而提出的一些技术参数指标&quot; class=&quot;headerlink&quot; title=&quot;基于使用场景而提出的一些技术参数指标&quot;&gt;&lt;/a&gt;基于使用场景而提出的一些技术参数指标&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;只能使用18kHz~21kHz这个范围内的音频信号(人耳要尽量听不见这个声音，手机要能够接收到这个声音，所以只能限制在这个频率范围内)&lt;/li&gt;
&lt;li&gt;通信距离最远要达到10米 &lt;/li&gt;
&lt;li&gt;还有一些是硬件设备的性能要求，和通信协议无关，不是这次的讨论重点，可以忽略&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;关键技术点&quot;&gt;&lt;a href=&quot;#关键技术点&quot; class=&quot;headerlink&quot; title=&quot;关键技术点&quot;&gt;&lt;/a&gt;关键技术点&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;为了减小数据处理过程中的延迟现象，采取的是实时的进行音频数据采集和数据处理，而不是像某些类似SDK中使用的技术那样，先录音得到一小段音频文件，然后再进行数据处理。具体到iOS平台上，就是使用audio unit框架来搭建PCM音频数据的采集管道，在管道的最后一个节点上，对得到的PCM数据再进行进一步的处理。&lt;/li&gt;
&lt;li&gt;仍然是为了降低延迟，使用手机的DSP硬件来进行快速傅里叶变换，具体到iOS上，就是用了Accelerate.framework框架中的相关函数。&lt;/li&gt;
&lt;li&gt;为了提高数据传输和解码的成功率，在2FSK的基础上，做了一些调整(magic trick)。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;前两点没有太多可说的，对应的开发文档中有很详尽的描述，只不过稍微偏底层一些，只要静下心来老老实实的啃啃文档，还是可以搞定的。第3点中用到的技巧，可能不太常见，我会详细解释一下。&lt;/p&gt;
&lt;p&gt;基于标准的2FSK，假如约定用18kHz的音频信号表示二进制的0，用19kHz的音频信号表示二进制的1，同时约定每一个bit持续的发送时间为50ms，假设要发送一个8bit的二进制数据0b11001010(忽略同步和校验部分的bit)，对于发送端来说，代码逻辑其实比较简单，只需要让特定频率的引号信号发送特定的时间就行了。但是对于接收端来说，代码就很困难了，虽然用的是2FSK，但是并没有专用的硬件来完成调制解调过程，所以要完全用代码来模拟整个过程，这个里面就涉及到了傅里叶变换、滤波等大量的数字信号处理里面的内容，这些处理完后，才会真正的进入到通信协议栈里面处理二进制的0和1。&lt;/p&gt;
&lt;p&gt;如果按照标准的2FSK方式，接收端的代码必须用定时器记录0或1(18kHz或19kHz)持续的时间，然后用这个时间值和50ms做比较，才能判断出这一部分音频片段对应了多少个连续的0或1。而且这仅仅是理论上对解码算法的描述，实际情况中，发送端维持的每个bit位的持续时间是50ms，进入空气中后，会和其他的各种各样的音频信号混杂在一起，然后才进入接收端进行变换和滤波等操作，这个时候，是很难保证每个bit位仍然能够维持在50ms的(即便有50ms，代码仍然会很难编写)，正式因为这些原因，成功解码数据的概率并不高。为了改善这种情况，对2FSK做了一些调整，这里借鉴了数字电路里面的一些概念和技术。在数电的串行接口电路中，使用高低电平来表示二进制的1和0，根据传输比特率的约定，每个电平会持续特定的时间，这类似于我们的音频系统中约定的每个bit持续发送50ms，这通常称为电平检测(根据电平值持续的时间进行检测)，还有另外一种称为边缘检测的技术，它不依赖于每个电平值持续的时间，而是依赖于电平值的变化事件，比如电平从高变为低(从1变为0)。这里就是使用了边缘检测这种方式来处理音频信号，接收端需要关注的，是音频信号频率值的变化，而不是每个频率值持续的时间。为了实现这种方式，还需要对之前的约定做一些调整，调整为18kHz和19kHz的音频信号都可以表示二进制的0，20kHz和21kHz的音频信号都可以表示二进制的1，如果是为了表示两个连续的0，那么就应该是18kHz的音频信号持续50ms，然后变成19kHz的音频信号持续50ms(或者先发送19kHz的，再发送18kHz的)，对于连续的1，也采用类似的策略。举个例子，对于二进制数据0b11101000，转换成频率值后，可能就会是这样的一组值 [20kHz，21kHz，20kHz，18kHz，21kHz，18kHz，19kHz，18kHz]，因为每一个bit对应的频率值都会发生变化，那么接收端就可以忽略每个bit持续的时间，只需要检测出每一次频率值发生变化就行了，每一次变化后得到的数值，就可以对应到当前的bit位的二进制值。用了这种调制解调的思路后，接收端的代码，写起来就很容易了:]&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这其实是两年前的一个产品，使用场景类似于基于苹果推出的&lt;code&gt;iBeacon&lt;/code&gt;实现室内定位，利用一个小巧的超声波硬件设备，周期性的广播信标信号，手机直接使用麦克风接收这个音频信号并且解码，得到信标信号中的有效数据，最后再根据这个数据进行室内定位的算法逻辑处理
    
    </summary>
    
    
      <category term="iOS" scheme="http://fengjian0106.github.io/tags/iOS/"/>
    
      <category term="protocol" scheme="http://fengjian0106.github.io/tags/protocol/"/>
    
  </entry>
  
  <entry>
    <title>iOS cache系统和自定义http代理</title>
    <link href="http://fengjian0106.github.io/2014/10/08/iOS-Cache-Access-And-Custom-Http-Proxy/"/>
    <id>http://fengjian0106.github.io/2014/10/08/iOS-Cache-Access-And-Custom-Http-Proxy/</id>
    <published>2014-10-08T09:11:38.000Z</published>
    <updated>2016-05-04T07:56:28.000Z</updated>
    
    <content type="html">&lt;p&gt;面试的时候，我喜欢问一些关于iOS http cache的问题，遇见不少开发者，第一反应都是自己编码实现整个cache存取流程，思路是没有问题的，但是这并不是我想要的答案。对于大部分使用场景，iOS自带的cache系统，就已经足够了，官方文档里也描述的很清楚，可以直接看 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/URLLoadingSystem/Concepts/CachePolicies.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Understanding Cache Access&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;流媒体播放的缓存需求&quot;&gt;&lt;a href=&quot;#流媒体播放的缓存需求&quot; class=&quot;headerlink&quot; title=&quot;流媒体播放的缓存需求&quot;&gt;&lt;/a&gt;流媒体播放的缓存需求&lt;/h3&gt;&lt;p&gt;在做一个音乐播放器app的过程中，有一个需求是可以边播放边缓存，并且不能浪费流量(不能播放时有一次http下载，离线缓存时又有另一次http下载)。&lt;/p&gt;
&lt;h3 id=&quot;技术方案&quot;&gt;&lt;a href=&quot;#技术方案&quot; class=&quot;headerlink&quot; title=&quot;技术方案&quot;&gt;&lt;/a&gt;技术方案&lt;/h3&gt;&lt;p&gt;查了一大堆文档，做了很多原型代码，最终还是发现 &lt;code&gt;AVQueuePlayer&lt;/code&gt; 并不是基于 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/URLLoadingSystem/URLLoadingSystem.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;URL Loading System&lt;/a&gt; 实现的，所以不可能直接使用其中的cache系统，只能想其他的办法，比如:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Networking/Conceptual/CFNetwork/Introduction/Introduction.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CFNetwork&lt;/a&gt;、&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/MusicAudio/Reference/AudioStreamReference/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Audio File Stream Services&lt;/a&gt; 以及 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/MusicAudio/Conceptual/AudioQueueProgrammingGuide/Introduction/Introduction.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Audio Queue Services&lt;/a&gt; 分别实现http下载、多媒体解码和播放过程，因为所有的流程都是自己控制，自然也就可以实现边播边存的效果。  &lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;ffmpeg&lt;/code&gt; 第三方多媒体框架来实现。  &lt;/li&gt;
&lt;li&gt;仍然使用iOS自带的 &lt;code&gt;AVQueuePlayer&lt;/code&gt; 进行http流媒体播放，但是在app内运行一个支持cache的 &lt;code&gt;http proxy&lt;/code&gt;，让 &lt;code&gt;AVQueuePlayer&lt;/code&gt; 通过这个 proxy 请求多媒体文件。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;方案对比&quot;&gt;&lt;a href=&quot;#方案对比&quot; class=&quot;headerlink&quot; title=&quot;方案对比&quot;&gt;&lt;/a&gt;方案对比&lt;/h3&gt;&lt;p&gt;第一种方案是比较容易想到的，但是其实实现的难度比较大，三个模块都要使用偏底层的接口，学习成本很高。第二种方案其实也是学习成本很高，而且只能使用 &lt;code&gt;ffmpeg&lt;/code&gt; 的软解码器，功耗也会很大。前两个方案还有一个共同的问题，就是需要自己考虑如何和iOS系统做整合，比如如何优雅的实现后台播放功能等等。综合考虑后，还是选择了第三种方案，虽然也有一定的学习成本，而且需要修改标准的 &lt;code&gt;http proxy&lt;/code&gt; 协议，但是大部分模块都是用iOS的SDK实现的，和操作系统贴合的最紧密。&lt;/p&gt;
&lt;h3 id=&quot;实现-http-proxy&quot;&gt;&lt;a href=&quot;#实现-http-proxy&quot; class=&quot;headerlink&quot; title=&quot;实现 http proxy&quot;&gt;&lt;/a&gt;实现 http proxy&lt;/h3&gt;&lt;p&gt;自己完整的实现一个 &lt;code&gt;http proxy&lt;/code&gt;，也是一件很复杂的事情，所以还是偏向于找开源方案，对比了几个开源方案后，最终选择在 &lt;a href=&quot;http://www.pps.univ-paris-diderot.fr/~jch/software/polipo/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Polipo&lt;/a&gt; 的基础上进行修改。&lt;/p&gt;
&lt;p&gt;有一个技术细节需要说明一下，当使用浏览器、不使用代理的时候，通过抓包可以看到浏览器发出的http请求如下(忽略了无关内容):  &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;GET / HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Host: www.example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Connection: keep-alive&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当使用浏览器并且使用代理的时候，通过抓包可以看到浏览器发出的http请求如下(忽略了无关内容):&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;GET http://www.example.com/ HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Host: www.example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Proxy-Connection: keep-alive&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最重要的一个区别就是 &lt;code&gt;GET&lt;/code&gt; 请求后面的路径信息，前者是相对路径 &lt;code&gt;/&lt;/code&gt;，而后者是绝对路径 &lt;code&gt;http://www.example.com/&lt;/code&gt;。因为浏览器本身支持设置代理，所以浏览器会拼接合适的路径信息并且发送。但是iOS的 &lt;code&gt;AVQueuePlayer&lt;/code&gt; 并不支持 &lt;code&gt;http proxy&lt;/code&gt; 功能，无法和标准的代理服务器协同工作，所以只能同时在 &lt;code&gt;AVQueuePlayer&lt;/code&gt; 和 &lt;a href=&quot;http://www.pps.univ-paris-diderot.fr/~jch/software/polipo/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Polipo&lt;/a&gt; 上做一些小的修改。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;AVQueuePlayer&lt;/code&gt; 的时候，需要做一些 &lt;code&gt;magic trick&lt;/code&gt;，关键代码如下:&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;httpProxyUrl = [&lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; URLWithString:[&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;http://127.0.0.1:%d/http://%@/music_new/%@&quot;&lt;/span&gt;, httpProxyPort, kKYMediaServiceManagerRemoteServerIpAndPort, mediaInfo.fileName]];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以这样来理解这段代码，假设app内的 &lt;code&gt;http proxy&lt;/code&gt; 的地址为 &lt;code&gt;127.0.0.1:9258&lt;/code&gt;，实际的多媒体文件的地址为 &lt;code&gt;http://media.test.com/xxx.mp3&lt;/code&gt;，那么 &lt;code&gt;AVQueuePlayer&lt;/code&gt; 请求的最终地址就应该是:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http://127.0.0.1:9258/http://media.test.com/xxx.mp3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 &lt;a href=&quot;http://www.pps.univ-paris-diderot.fr/~jch/software/polipo/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Polipo&lt;/a&gt; 中，解析得到的最终目的服务器的地址(相对路径)是 &lt;code&gt;/http://media.test.com/xxx.mp3&lt;/code&gt;，需要稍微修改一下源代码，去掉最左侧的 &lt;code&gt;/&lt;/code&gt; 字符。具体就是在 &lt;code&gt;client.c&lt;/code&gt; 文件的 &lt;code&gt;httpClientHandlerHeaders&lt;/code&gt; 函数中添加一小段代码，也就是 &lt;code&gt;#ifdef POLIPO_KUYQI_VERSION&lt;/code&gt; 和 &lt;code&gt;#endif&lt;/code&gt; 之间的那一段:&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;httpClientHandlerHeaders(FdEventHandlerPtr event, StreamRequestPtr srequest,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         HTTPConnectionPtr connection)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    HTTPRequestPtr request;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; rc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; method, version;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AtomPtr url = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; start;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; code;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AtomPtr message;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    start = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* Work around clients working around NCSA lossage. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(connection-&amp;gt;reqbuf[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        start = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(connection-&amp;gt;reqbuf[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&#39;\r&#39;&lt;/span&gt; &amp;amp;&amp;amp; connection-&amp;gt;reqbuf[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        start = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    httpSetTimeout(connection, &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#ifdef POLIPO_KUYQI_VERSION&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *pch;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pch = strstr (connection-&amp;gt;reqbuf, &lt;span class=&quot;string&quot;&gt;&quot;/http://&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//&lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; if the client use url encoding??&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pch == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//fprintf(stderr, &quot;###########this is normal http request\r\n&quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//remove the first &#39;/&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pch = strstr (connection-&amp;gt;reqbuf, &lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pch[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#endif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rc = httpParseClientFirstLine(connection-&amp;gt;reqbuf, start,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  &amp;amp;method, &amp;amp;url, &amp;amp;version);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(rc &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        do_log(L_ERROR, &lt;span class=&quot;string&quot;&gt;&quot;Couldn&#39;t parse client&#39;s request line\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        code = &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        message =  internAtom(&lt;span class=&quot;string&quot;&gt;&quot;Error in request line&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;goto&lt;/span&gt; fail;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    do_log(D_CLIENT_REQ, &lt;span class=&quot;string&quot;&gt;&quot;Client request: &quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    do_log_n(D_CLIENT_REQ, connection-&amp;gt;reqbuf, rc - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    do_log(D_CLIENT_REQ, &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(version != HTTP_10 &amp;amp;&amp;amp; version != HTTP_11) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        do_log(L_ERROR, &lt;span class=&quot;string&quot;&gt;&quot;Unknown client HTTP version\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        code = &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        message = internAtom(&lt;span class=&quot;string&quot;&gt;&quot;Error in first request line&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;goto&lt;/span&gt; fail;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(method == METHOD_UNKNOWN) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        code = &lt;span class=&quot;number&quot;&gt;501&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        message =  internAtom(&lt;span class=&quot;string&quot;&gt;&quot;Method not implemented&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;goto&lt;/span&gt; fail;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    request = httpMakeRequest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(request == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        do_log(L_ERROR, &lt;span class=&quot;string&quot;&gt;&quot;Couldn&#39;t allocate client request.\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        code = &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        message = internAtom(&lt;span class=&quot;string&quot;&gt;&quot;Couldn&#39;t allocate client request&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;goto&lt;/span&gt; fail;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(connection-&amp;gt;version != HTTP_UNKNOWN &amp;amp;&amp;amp; version != connection-&amp;gt;version) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        do_log(L_WARN, &lt;span class=&quot;string&quot;&gt;&quot;Client version changed!\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    connection-&amp;gt;version = version;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    request-&amp;gt;flags = REQUEST_PERSISTENT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    request-&amp;gt;method = method;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    request-&amp;gt;cache_control = no_cache_control;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    httpQueueRequest(connection, request);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    connection-&amp;gt;reqbegin = rc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; httpClientRequest(request, url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; fail:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(url) releaseAtom(url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    shutdown(connection-&amp;gt;fd, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    connection-&amp;gt;reqlen = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    connection-&amp;gt;reqbegin = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    httpConnectionDestroyReqbuf(connection);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    connection-&amp;gt;flags &amp;amp;= ~CONN_READER;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    httpClientNewError(connection, METHOD_UNKNOWN, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, code, message);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;面试的时候，我喜欢问一些关于iOS http cache的问题，遇见不少开发者，第一反应都是自己编码实现整个cache存取流程，思路是没有问题的，但是这并不是我想要的答案。对于大部分使用场景，iOS自带的cache系统，就已经足够了，官方文档里也描述的很清楚，可以直接看 &lt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://fengjian0106.github.io/tags/iOS/"/>
    
      <category term="cache" scheme="http://fengjian0106.github.io/tags/cache/"/>
    
      <category term="proxy" scheme="http://fengjian0106.github.io/tags/proxy/"/>
    
  </entry>
  
  <entry>
    <title>微信web页面开发代码规范以及最佳实践</title>
    <link href="http://fengjian0106.github.io/2014/09/26/WeiXin-Web-App-Coding-Convention-And-Best-Practice/"/>
    <id>http://fengjian0106.github.io/2014/09/26/WeiXin-Web-App-Coding-Convention-And-Best-Practice/</id>
    <published>2014-09-26T05:41:32.000Z</published>
    <updated>2016-04-10T11:44:12.000Z</updated>
    
    <content type="html">&lt;p&gt;本来专职是做iOS开发的，对 &lt;code&gt;node.js&lt;/code&gt; 感兴趣，所以也学习过服务器开发的一些皮毛。前段时间公司的一个产品，要覆盖iOS、Android和微信web这3个前端，微信web页面的第一个版本，是服务器端同事用最传统的web技术做出来的，也就是使用后端模板渲染的技术组装页面，前端js则使用了 &lt;code&gt;jQuery&lt;/code&gt; 做简单的操作。东西做出来后，体验特别的不好，尤其是每次页面跳转都要加载一个新页面，会有延迟。后来狠下决心重做一遍，完全采用前端渲染的技术。当时本来就缺人手，好歹我也算是会用JavaScript，义不容辞的自然也就把这个项目接手过来了。&lt;/p&gt;
&lt;p&gt;做的过程很累，特别的赶进度，而且是摸着石头过河，未知的因素很多。还好iOS做的很熟悉了，很多经验或问题，可以直接照搬到web端，借助Google和Stack Overflow，记录了一大堆笔记出来。前两天另一个团队启动新项目，微信web端也是要做的，同事便找到我，想要一些经验分享，琢磨了一下，笔记写的比较凌乱，毕竟主要是给自己看的，符合自己的思维模式习惯，但是并不适合给别人看，干脆整理一份出来，方便别人查看，对自己也是再次清理一下思路。&lt;/p&gt;
&lt;h3 id=&quot;CSS中如何命名class&quot;&gt;&lt;a href=&quot;#CSS中如何命名class&quot; class=&quot;headerlink&quot; title=&quot;CSS中如何命名class&quot;&gt;&lt;/a&gt;CSS中如何命名class&lt;/h3&gt;&lt;p&gt;这个话题没有唯一答案，而且特别的松散，风格很多。&lt;/p&gt;
&lt;p&gt;目前团队里使用 &lt;a href=&quot;http://webuild.envato.com/blog/how-to-scale-and-maintain-legacy-css-with-sass-and-smacss/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://webuild.envato.com/blog/how-to-scale-and-maintain-legacy-css-with-sass-and-smacss/&lt;/a&gt; 这种方案，但是并不完全遵照它的代码模板，比如我们不使用 &lt;code&gt;Sass&lt;/code&gt; 语法，而是用 &lt;code&gt;SCSS&lt;/code&gt; 语法。&lt;/p&gt;
&lt;p&gt;另外还推荐阅读 &lt;a href=&quot;http://blog.jobbole.com/47702/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.jobbole.com/47702/&lt;/a&gt; 这个里面提到了几乎所有的技术、框架、思路，比如 &lt;code&gt;Sass&lt;/code&gt;、&lt;code&gt;BEM&lt;/code&gt;、&lt;code&gt;OOCSS&lt;/code&gt;、&lt;code&gt;SMACSS&lt;/code&gt;、&lt;code&gt;OrganicCSS&lt;/code&gt;等等。&lt;/p&gt;
&lt;h3 id=&quot;使用-Sass-编写CSS&quot;&gt;&lt;a href=&quot;#使用-Sass-编写CSS&quot; class=&quot;headerlink&quot; title=&quot;使用 Sass 编写CSS&quot;&gt;&lt;/a&gt;使用 &lt;code&gt;Sass&lt;/code&gt; 编写CSS&lt;/h3&gt;&lt;p&gt;这个没啥多说的，语法并不难。引入了编程语言中的一些思路和技巧，对于iOS和Android开发者来说，很容易上手。&lt;/p&gt;
&lt;h3 id=&quot;CSS书写规范-amp-amp-顺序&quot;&gt;&lt;a href=&quot;#CSS书写规范-amp-amp-顺序&quot; class=&quot;headerlink&quot; title=&quot;CSS书写规范 &amp;amp;&amp;amp; 顺序&quot;&gt;&lt;/a&gt;CSS书写规范 &amp;amp;&amp;amp; 顺序&lt;/h3&gt;&lt;p&gt;参照 &lt;a href=&quot;http://markdotto.com/2011/11/29/css-property-order/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://markdotto.com/2011/11/29/css-property-order/&lt;/a&gt; 以及 &lt;a href=&quot;http://codegeekz.com/standardizing-css-property-order/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codegeekz.com/standardizing-css-property-order/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;如何计算-CSS-Box-Model-中的-width-和-height&quot;&gt;&lt;a href=&quot;#如何计算-CSS-Box-Model-中的-width-和-height&quot; class=&quot;headerlink&quot; title=&quot;如何计算 CSS Box Model 中的 width 和 height&quot;&gt;&lt;/a&gt;如何计算 &lt;code&gt;CSS Box Model&lt;/code&gt; 中的 &lt;code&gt;width&lt;/code&gt; 和 &lt;code&gt;height&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;我们使用 &lt;code&gt;CSS3&lt;/code&gt; 中的 &lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_box-sizing.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;border-box&lt;/code&gt;&lt;/a&gt; 模型，这个就和iOS中的 &lt;code&gt;UIView&lt;/code&gt; 的尺寸模型保持了一致，也更直观，容易理解。 &lt;/p&gt;
&lt;h3 id=&quot;使用-Flexbox-做-Layout&quot;&gt;&lt;a href=&quot;#使用-Flexbox-做-Layout&quot; class=&quot;headerlink&quot; title=&quot;使用 Flexbox 做 Layout&quot;&gt;&lt;/a&gt;使用 &lt;code&gt;Flexbox&lt;/code&gt; 做 Layout&lt;/h3&gt;&lt;p&gt;项目的前期，为了实现一些手机上常见的布局，我们大量使用了CSS中的 &lt;code&gt;float&lt;/code&gt; 、&lt;code&gt;table-cell&lt;/code&gt; 等等，但是代码会比较复杂，而且可读性不好。直到发现了神器 &lt;a href=&quot;http://css-tricks.com/snippets/css/a-guide-to-flexbox/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;Flexbox&lt;/code&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;另外，还有一个基于 &lt;code&gt;Sass&lt;/code&gt; 的工具 &lt;a href=&quot;https://github.com/mastastealth/sass-flex-mixin.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/mastastealth/sass-flex-mixin.git&lt;/a&gt;，帮助我们更好的进行编码。&lt;/p&gt;
&lt;h3 id=&quot;使用-Yeoman-实现工作流&quot;&gt;&lt;a href=&quot;#使用-Yeoman-实现工作流&quot; class=&quot;headerlink&quot; title=&quot;使用 Yeoman 实现工作流&quot;&gt;&lt;/a&gt;使用 &lt;code&gt;Yeoman&lt;/code&gt; 实现工作流&lt;/h3&gt;&lt;p&gt;不懂得使用工具的web开发者，不是好前端，嘿嘿 ^_^&lt;/p&gt;
&lt;h3 id=&quot;MV-框架-Or-jQuery-类型的库&quot;&gt;&lt;a href=&quot;#MV-框架-Or-jQuery-类型的库&quot; class=&quot;headerlink&quot; title=&quot;MV* 框架 Or jQuery 类型的库&quot;&gt;&lt;/a&gt;&lt;code&gt;MV*&lt;/code&gt; 框架 Or &lt;code&gt;jQuery&lt;/code&gt; 类型的库&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;单纯从技术角度来看，&lt;a href=&quot;https://angularjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AngularJS&lt;/a&gt; 是最合适的框架，而且针对mobile，还有基于 &lt;code&gt;AngularJS&lt;/code&gt; 的 &lt;a href=&quot;http://ionicframework.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ionic&lt;/a&gt; 框架。&lt;code&gt;Ionic&lt;/code&gt; 是对手机适配的最好的框架(没有之一)。但是 &lt;code&gt;Ionic&lt;/code&gt; 的体积比较大，官方宣传时定义其为 &lt;em&gt;framework for developing hybrid mobile apps&lt;/em&gt;。如果是对网速不敏感的使用场景，或者网速很快的场景，其实 &lt;code&gt;Ionic&lt;/code&gt; 是可以做 &lt;code&gt;web app&lt;/code&gt; 的。&lt;/li&gt;
&lt;li&gt;百度开源的 &lt;a href=&quot;http://gmu.baidu.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gmu&lt;/a&gt;，是类似于 &lt;code&gt;jQuery UI&lt;/code&gt; 的库，但是是基于 &lt;code&gt;zepto&lt;/code&gt; 的，很轻量级，而且也提供了不少的 &lt;code&gt;widget&lt;/code&gt;。但是为了轻量，并没有套用 &lt;code&gt;MV*&lt;/code&gt; 模式，所以应用场景复杂的时候，代码通常会组织的比较凌乱。交互界面复杂的时候，还会暴露出各种各样的坑，比如click事件穿透，就让我们大吃苦头。&lt;/li&gt;
&lt;li&gt;我个人已经不太愿意继续使用 &lt;code&gt;gmu&lt;/code&gt; 了，如果&lt;strong&gt;&lt;em&gt;真正只需要开发轻量级的页面&lt;/em&gt;&lt;/strong&gt;，我宁愿直接用 &lt;code&gt;Sass&lt;/code&gt; + &lt;code&gt;zepto&lt;/code&gt; 或 &lt;a href=&quot;http://minifiedjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://minifiedjs.com/&lt;/a&gt; 来实现。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://backbonejs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Backbone&lt;/a&gt; 是相对轻量级的 &lt;code&gt;MVC&lt;/code&gt; 框架，在体积大小和功能上有合理的舍取，但是框架本身只注重设计模式的引入，并不包含一套完整的针对mobile的 &lt;code&gt;widget&lt;/code&gt;，所以我们还整理了另外一种思路，就是基于 &lt;code&gt;Backbone&lt;/code&gt;，再加上各种各样小的lib，根据需求组合起来使用。这种方案可能存在的问题就是这些lib各自为政，不像 &lt;code&gt;AngularJS&lt;/code&gt; 这种框架一样都在一个体系内协同工作，所以开发的时候也许会有很多坑，得做一遍才会有深刻的体会。有两个例子，非常值得学习参考，&lt;a href=&quot;https://github.com/ccoenraets/directory-backbone-ratchet&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/ccoenraets/directory-backbone-ratchet&lt;/a&gt; 和 &lt;a href=&quot;http://n12v.com/2-way-data-binding/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://n12v.com/2-way-data-binding/&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;常见widget&quot;&gt;&lt;a href=&quot;#常见widget&quot; class=&quot;headerlink&quot; title=&quot;常见widget&quot;&gt;&lt;/a&gt;常见&lt;code&gt;widget&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;按照iOS平台上的开发经验，针对mobile，常见的 &lt;code&gt;widget&lt;/code&gt; 包括这些(有官方SDK自带的，也有大量第三方开源的，iOS平台现在很完善，有很多 &lt;code&gt;widget&lt;/code&gt; 可以拿来即用)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;button，textinput，slider，progress bar，image view，switch等等，这些是最常见的 &lt;code&gt;widget&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;全屏HUD，比如iOS上的 &lt;a href=&quot;https://github.com/jdg/MBProgressHUD&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/jdg/MBProgressHUD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;全屏的菜单选择类 &lt;code&gt;widget&lt;/code&gt;，比如iOS自带的 &lt;code&gt;UIAlertView&lt;/code&gt; 和 &lt;code&gt;UIActionSheet&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;popview，比如iOS上的 &lt;a href=&quot;https://github.com/chrismiles/CMPopTipView.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/chrismiles/CMPopTipView.git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;免干扰式的下拉信息提示框，比如iOS上的 &lt;a href=&quot;https://github.com/toursprung/TSMessages.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/toursprung/TSMessages.git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;系统级的页面切换方式，比如iOS自带的 &lt;code&gt;UINavigationController&lt;/code&gt; 和 &lt;code&gt;UITabBarController&lt;/code&gt;，以及第三方开源的 &lt;a href=&quot;https://github.com/ECSlidingViewController/ECSlidingViewController.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/ECSlidingViewController/ECSlidingViewController.git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;mobile web平台上，&lt;code&gt;widget&lt;/code&gt; 的生态环境并不好。相对而言，&lt;a href=&quot;http://ionicframework.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ionic&lt;/a&gt; 自带的&lt;code&gt;widget&lt;/code&gt;是最完善的，而且有框架的支持，也更容易实现自定义的 &lt;code&gt;widget&lt;/code&gt;。唯一的问题就是 &lt;code&gt;Ionic&lt;/code&gt; 框架比较大。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Backbone&lt;/code&gt; 或 &lt;code&gt;gmu&lt;/code&gt; 中，除了最常见的 &lt;code&gt;widget&lt;/code&gt; 外，其他的通常都只能自己实现，比如在使用 &lt;code&gt;gmu&lt;/code&gt; 的时候，我们就只能自己编写&lt;a href=&quot;https://github.com/fengjian0106/actionsheet.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;ActionSheet&lt;/code&gt;&lt;/a&gt;、全屏HUD、免干扰式的下拉信息提示框、以及系统级的页面导航控制器。由于缺少框架级的支持，除了 &lt;a href=&quot;https://github.com/fengjian0106/actionsheet.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;ActionSheet&lt;/code&gt;&lt;/a&gt; 外，其他几个 &lt;code&gt;widget&lt;/code&gt; 的代码实现都很粗暴，而且遇到了各种各样的bug。&lt;/p&gt;
&lt;p&gt;实际项目中，最好从一开始做交互设计的时候，就考虑 &lt;code&gt;widget&lt;/code&gt; 的问题，尽量使用最常见的 &lt;code&gt;widget&lt;/code&gt;，舍弃一些复杂的交互方式。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本来专职是做iOS开发的，对 &lt;code&gt;node.js&lt;/code&gt; 感兴趣，所以也学习过服务器开发的一些皮毛。前段时间公司的一个产品，要覆盖iOS、Android和微信web这3个前端，微信web页面的第一个版本，是服务器端同事用最传统的web技术做出来的，也就是使用后
    
    </summary>
    
    
      <category term="html" scheme="http://fengjian0106.github.io/tags/html/"/>
    
      <category term="css" scheme="http://fengjian0106.github.io/tags/css/"/>
    
      <category term="sass" scheme="http://fengjian0106.github.io/tags/sass/"/>
    
      <category term="flexbox" scheme="http://fengjian0106.github.io/tags/flexbox/"/>
    
      <category term="mvc" scheme="http://fengjian0106.github.io/tags/mvc/"/>
    
      <category term="mvvm" scheme="http://fengjian0106.github.io/tags/mvvm/"/>
    
  </entry>
  
  <entry>
    <title>iOS输入法性能优化</title>
    <link href="http://fengjian0106.github.io/2014/09/26/An-iOS-Keyboard-Extension-Performance-Optimize/"/>
    <id>http://fengjian0106.github.io/2014/09/26/An-iOS-Keyboard-Extension-Performance-Optimize/</id>
    <published>2014-09-26T02:25:52.000Z</published>
    <updated>2016-04-10T11:44:12.000Z</updated>
    
    <content type="html">&lt;p&gt;一年前指导同事开发了一款andriod版的输入法(非中文)，其中的词库引擎，是我做的技术选型并且在iOS平台上做了原型验证，采用的是 &lt;code&gt;Ternary Search Tree&lt;/code&gt;。一年后，也就是最近，随着iOS8的发布，我们也要发布一款iOS版的输入法。&lt;/p&gt;
&lt;h3 id=&quot;遇到的主要问题&quot;&gt;&lt;a href=&quot;#遇到的主要问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的主要问题&quot;&gt;&lt;/a&gt;遇到的主要问题&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Ternary Search Tree&lt;/code&gt; 实现 &lt;code&gt;prefix match&lt;/code&gt; 的速度很快，但是因为只是一个纯粹的内存数据结构，所以输入法词库的容量是一个瓶颈。在android平台上，考虑多方面因素后，我们的词库中只有3万左右的单词量。iOS平台上做原型验证的时候，词库容量也只能做到10万左右。但是实际的业务需求中，是希望词库容量可以进一步增大的。&lt;/li&gt;
&lt;li&gt;iOS版本输入法的开发过程中，遇到了另外一个问题，就是键盘页面的加载速度和切换速度有点慢，用户能够感觉出来。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;解决办法&quot;&gt;&lt;a href=&quot;#解决办法&quot; class=&quot;headerlink&quot; title=&quot;解决办法&quot;&gt;&lt;/a&gt;解决办法&lt;/h3&gt;&lt;h4 id=&quot;词库容量&quot;&gt;&lt;a href=&quot;#词库容量&quot; class=&quot;headerlink&quot; title=&quot;词库容量&quot;&gt;&lt;/a&gt;词库容量&lt;/h4&gt;&lt;p&gt;词库容量扩充这个问题，其实一直是一个难题，在 &lt;code&gt;Ternary Search Tree&lt;/code&gt; 上也做过一些优化，但是变化并不明显。反而是在做server端开发，学习 &lt;code&gt;LevelDB&lt;/code&gt; 的时候，碰巧发现 &lt;code&gt;LevelDB&lt;/code&gt; 是一个很好的替代。首先 &lt;code&gt;LevelDB&lt;/code&gt; 支持 &lt;code&gt;prefix search&lt;/code&gt;，而且搜索速度也很快，测试数据表明完全满足我们的业务需求，其次 &lt;code&gt;LevelDB&lt;/code&gt; 是将数据存储在文件系统上的，没有了内存大小的限制，词库的容量很轻松就可以扩充100倍以上，而且有了这种近乎无限的词库容量后，之前有一些需要复杂算法甚至很难实现的业务需求，现在也可以在超大词库的基础上，用&lt;strong&gt;“简单但是粗暴”&lt;/strong&gt;的算法实现出来。&lt;/p&gt;
&lt;p&gt;iOS平台上的 &lt;code&gt;Core Data&lt;/code&gt; 是一套相当好用的数据持久化存储框架，唯一&lt;em&gt;&lt;code&gt;可能存在&lt;/code&gt;&lt;/em&gt;的问题就是性能，因此有些开发者在某些场景中，还是愿意去选择使用 &lt;code&gt;SQLite&lt;/code&gt; 。有了这次的开发经验后，相信在某些应用场景中， &lt;code&gt;LevelDB&lt;/code&gt; 也将会是一个很好的替代方案，比如 Square 开源的 &lt;a href=&quot;https://github.com/viewfinderco/viewfinder.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Viewfinder&lt;/a&gt; 中的客户端，就是用  &lt;code&gt;LevelDB&lt;/code&gt; 实现的数据存储。&lt;code&gt;LevelDB&lt;/code&gt; 的核心是 &lt;code&gt;LSM-Tree&lt;/code&gt;，其实 &lt;a href=&quot;http://sqlite.org/src4/doc/trunk/www/lsmusr.wiki&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SQLite4&lt;/a&gt; 的核心，也是 &lt;code&gt;LSM-Tree&lt;/code&gt;，小伙伴们，你们知道吗 :-)&lt;/p&gt;
&lt;h4 id=&quot;页面加载和切换速度&quot;&gt;&lt;a href=&quot;#页面加载和切换速度&quot; class=&quot;headerlink&quot; title=&quot;页面加载和切换速度&quot;&gt;&lt;/a&gt;页面加载和切换速度&lt;/h4&gt;&lt;p&gt;说实话，页面加载速度这个问题，挺出乎意料的，以前我们团队也做了这么多iOS应用了，从来没有在页面速度上遇到过问题，用 &lt;code&gt;Instruments&lt;/code&gt;、 &lt;code&gt;NSLog&lt;/code&gt; 对比分析了一遍，测量出来的页面加载时间，也和其他应用中页面加载消耗的时间差不多。大家讨论了一下为什么用户会觉得慢，得出的结论是，输入法本来就是一个效率型的工具app，用户心理的期待之一，就是键盘的速度要快，而普通类型的app，用户对速度不会这么敏感。&lt;/p&gt;
&lt;p&gt;问题已经出来了，还是得想办法去优化，吭哧吭哧写代码调试，从3个方面压缩了页面加载切换时消耗的时间：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;键盘的view，是分了好几个层次的，当作为container的UIView加载完成后，就立刻让键盘先显示出来，然后再触发加载真正的keyboard view，这样给用户的一个心理感觉就是键盘弹出的速度很快。&lt;/li&gt;
&lt;li&gt;键盘切换的时候，不再每次都重新从xib中加载对应的view，而是将view缓存在cache里面，用空间换时间。&lt;/li&gt;
&lt;li&gt;移除了keyboard view中每个key view上的 &lt;code&gt;Auto Layout&lt;/code&gt; 约束条件，直接在 &lt;code&gt;layoutSubviews&lt;/code&gt; 方法中设置subview的 &lt;code&gt;frame&lt;/code&gt;，关于这个优化思路，可以看看 &lt;a href=&quot;http://pilky.me/36/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Optimising Autolayout&lt;/a&gt;。需要强调的是，我们并不是否定 &lt;code&gt;Auto Layout&lt;/code&gt; ，实际上我们团队现在采用的思路是 &lt;code&gt;Auto Layout&lt;/code&gt; 和 &lt;code&gt;Manual Frame Layout&lt;/code&gt; 一起使用，代码布局和xib布局一起使用，根据页面的需求做出更合适的选择。&lt;/li&gt;
&lt;li&gt;2014-10-16更新，借助Facebook出品的神器&lt;a href=&quot;https://github.com/facebook/AsyncDisplayKit.git，又抠了一些性能出来&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/facebook/AsyncDisplayKit.git，又抠了一些性能出来&lt;/a&gt;:]&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这款输入法app，我们还全面切换到使用 &lt;code&gt;ReactiveCocoa&lt;/code&gt; 这个框架进行开发，当时也怀疑过是不是因为这个框架造成了性能的损失，从 &lt;code&gt;Instruments&lt;/code&gt; 的测量数据来看，我们的顾虑是多余的， &lt;code&gt;ReactiveCocoa&lt;/code&gt; 虽然使得整个函数调用栈的层次增加了不少，但是，这不是性能瓶颈。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一年前指导同事开发了一款andriod版的输入法(非中文)，其中的词库引擎，是我做的技术选型并且在iOS平台上做了原型验证，采用的是 &lt;code&gt;Ternary Search Tree&lt;/code&gt;。一年后，也就是最近，随着iOS8的发布，我们也要发布一款iOS版的输入法。
    
    </summary>
    
    
      <category term="iOS" scheme="http://fengjian0106.github.io/tags/iOS/"/>
    
      <category term="keyborad" scheme="http://fengjian0106.github.io/tags/keyborad/"/>
    
      <category term="LevelDB" scheme="http://fengjian0106.github.io/tags/LevelDB/"/>
    
      <category term="AutoLayout" scheme="http://fengjian0106.github.io/tags/AutoLayout/"/>
    
  </entry>
  
  <entry>
    <title>博客搬家 &amp;&amp; 重新开博</title>
    <link href="http://fengjian0106.github.io/2014/09/26/Move-To-A-New-Blog/"/>
    <id>http://fengjian0106.github.io/2014/09/26/Move-To-A-New-Blog/</id>
    <published>2014-09-26T02:20:21.000Z</published>
    <updated>2016-04-10T11:44:12.000Z</updated>
    
    <content type="html">&lt;p&gt;和小伙伴一起创业一年半了，投入了很大的精力，也舍弃了个人的一些事情，写博客便是其中之一。这一年多来，其实还是写了很多个人笔记，觉得还是有必要整理一些出来，所以便有了这个新的站点。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;和小伙伴一起创业一年半了，投入了很大的精力，也舍弃了个人的一些事情，写博客便是其中之一。这一年多来，其实还是写了很多个人笔记，觉得还是有必要整理一些出来，所以便有了这个新的站点。&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
</feed>
